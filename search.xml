<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>接口攻击</title>
    <url>/post/attack.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="7b5d1805c5744b6c05db41bf8c1c400f26a116779d6b304a09ce579689d1e55f"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>安全测试</tag>
      </tags>
  </entry>
  <entry>
    <title>command</title>
    <url>/post/command.html</url>
    <content><![CDATA[<h1 id="Linux-基础命令"><a href="#Linux-基础命令" class="headerlink" title="Linux 基础命令"></a>Linux 基础命令</h1><h2 id="1-打包解压缩"><a href="#1-打包解压缩" class="headerlink" title="1.打包解压缩"></a>1.打包解压缩</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.打包文件(c表示打包，f指定要操作的文件)</span></span><br><span class="line">tar cf /tmp/demobackup.tar  demo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.打包并压缩（加入z,j,J参数表示用不同的压缩方式来压缩，用双扩展名表示打包并压缩）</span></span><br><span class="line"><span class="comment">#压缩方式：gzip-&gt;.tar.gz/.tgz    bzip2-&gt;.tar.bz2/.tbz2（双扩展名的两种写法都可以）</span></span><br><span class="line">tar czf /tmp/demobackup.tar.gz   demo</span><br><span class="line">tar cjf /tmp/demobackup.tar.bz2  demo</span><br><span class="line">tar cJf /tmp/demobackup.tar.xz   demo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.解压（x参数解压）</span></span><br><span class="line">tar xf    /tmp/demobackup.tar  -C  文件解包存放的位置  <span class="comment">#-C 在特定目录解压缩</span></span><br><span class="line">tar xzfv  /tmp/demobackup.tar.gz    <span class="comment"># -v 解压缩过程将文件显示出来</span></span><br><span class="line">tar xjf  /tmp/demobackup.tar.bz2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 查看压缩包中的文件</span></span><br><span class="line">-t 查看压缩包里面的文件 ，t,c,x三个动作参数不能同时存在，一次操作只能使用其中的一个参数</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-ls-的参数"><a href="#2-ls-的参数" class="headerlink" title="2.ls 的参数"></a>2.ls 的参数</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">用法</th>
</tr>
</thead>
<tbody><tr>
<td align="left">- l</td>
<td align="left">显示长格式文件</td>
</tr>
<tr>
<td align="left">-a</td>
<td align="left">显示隐藏文件</td>
</tr>
<tr>
<td align="left">-t</td>
<td align="left">按照时间顺序显示</td>
</tr>
<tr>
<td align="left">-R</td>
<td align="left">递归显示</td>
</tr>
<tr>
<td align="left">-h</td>
<td align="left">文件大小用 M 显示</td>
</tr>
<tr>
<td align="left">-d</td>
<td align="left">单独查看某个文件，ls -d 要查看的文件名</td>
</tr>
<tr>
<td align="left">-r</td>
<td align="left">逆序显示</td>
</tr>
</tbody></table>
<h2 id="3-文件及文件夹操作"><a href="#3-文件及文件夹操作" class="headerlink" title="3.文件及文件夹操作"></a>3.文件及文件夹操作</h2><table>
<thead>
<tr>
<th align="left">命令</th>
<th align="left"></th>
</tr>
</thead>
<tbody><tr>
<td align="left">mkdir</td>
<td align="left">新建文件夹</td>
</tr>
<tr>
<td align="left">mkdir -p &#x2F;tmp&#x2F;demo&#x2F;</td>
<td align="left">嵌套建立多层目录</td>
</tr>
<tr>
<td align="left">rmdir</td>
<td align="left">删除空文件夹</td>
</tr>
<tr>
<td align="left">rm -rf</td>
<td align="left">删除非空目录，f 表示不提示</td>
</tr>
<tr>
<td align="left">rm</td>
<td align="left">删除文件</td>
</tr>
<tr>
<td align="left">cp -r</td>
<td align="left">复制目录</td>
</tr>
<tr>
<td align="left">cp -p</td>
<td align="left">复制文件但是保留用户权限时间等文件属性</td>
</tr>
<tr>
<td align="left">mv</td>
<td align="left">移动 mv 原文件 目的目录</td>
</tr>
<tr>
<td align="left">mv</td>
<td align="left">重命名 mv 源文件名 目标文件名</td>
</tr>
</tbody></table>
<h2 id="4-Vim-操作"><a href="#4-Vim-操作" class="headerlink" title="4.Vim 操作"></a>4.Vim 操作</h2><h3 id="1-插入模式"><a href="#1-插入模式" class="headerlink" title="1.插入模式"></a>1.插入模式</h3><table>
<thead>
<tr>
<th align="left">进入插入模式有多种方式</th>
<th align="left"></th>
</tr>
</thead>
<tbody><tr>
<td align="left">i</td>
<td align="left">光标处插入</td>
</tr>
<tr>
<td align="left">I</td>
<td align="left">光标移到该行开头插入</td>
</tr>
<tr>
<td align="left">a</td>
<td align="left">光标移到后一位插入</td>
</tr>
<tr>
<td align="left">A</td>
<td align="left">光标移到该行末尾插入</td>
</tr>
<tr>
<td align="left">o</td>
<td align="left">光标该行的下一行插入空行</td>
</tr>
<tr>
<td align="left">O</td>
<td align="left">光标该行的上一行插入空行</td>
</tr>
</tbody></table>
<h3 id="2-正常模式"><a href="#2-正常模式" class="headerlink" title="2.正常模式"></a>2.正常模式</h3><p>(插入模式下按 ESC 回到正常模式)</p>
<table>
<thead>
<tr>
<th align="left">正常模式</th>
<th align="left"></th>
</tr>
</thead>
<tbody><tr>
<td align="left">h j k l</td>
<td align="left">光标上下左右移动操作</td>
</tr>
<tr>
<td align="left">yy</td>
<td align="left">单行复制</td>
</tr>
<tr>
<td align="left">3yy</td>
<td align="left">多行复制，复制 3 行</td>
</tr>
<tr>
<td align="left">y$</td>
<td align="left">复制光标到该行结尾的所有内容</td>
</tr>
<tr>
<td align="left">p</td>
<td align="left">将复试的行粘贴</td>
</tr>
<tr>
<td align="left">dd</td>
<td align="left">剪切光标所在的行</td>
</tr>
<tr>
<td align="left">d$</td>
<td align="left">剪切光标到该行结尾的所有内容</td>
</tr>
<tr>
<td align="left">u</td>
<td align="left">复原前一个动作(撤销)</td>
</tr>
<tr>
<td align="left">ctrl + r</td>
<td align="left">重做上一个动作</td>
</tr>
<tr>
<td align="left">x</td>
<td align="left">删除光标当前字符</td>
</tr>
<tr>
<td align="left">r</td>
<td align="left">替换光标当前字符</td>
</tr>
<tr>
<td align="left">^</td>
<td align="left">光标移到该行开头</td>
</tr>
<tr>
<td align="left">$</td>
<td align="left">光标移到该行末尾</td>
</tr>
<tr>
<td align="left">g</td>
<td align="left">光标移到文本第一行开头</td>
</tr>
<tr>
<td align="left">G</td>
<td align="left">光标移到文本最后一行开头</td>
</tr>
<tr>
<td align="left">5G</td>
<td align="left">光标移到指定的第 5 行的开头</td>
</tr>
<tr>
<td align="left">:set nu</td>
<td align="left">显示行数</td>
</tr>
<tr>
<td align="left">:set nonu</td>
<td align="left">不显示行数</td>
</tr>
</tbody></table>
<h3 id="3-命令模式"><a href="#3-命令模式" class="headerlink" title="3.命令模式"></a>3.命令模式</h3><table>
<thead>
<tr>
<th align="left">命令</th>
<th align="left"></th>
</tr>
</thead>
<tbody><tr>
<td align="left">:w</td>
<td align="left">保存文件（ :w &#x2F;root&#x2F;a.txt 适用于直接 vi 文件没保存的）</td>
</tr>
<tr>
<td align="left">:q</td>
<td align="left">退出</td>
</tr>
<tr>
<td align="left">:q!</td>
<td align="left">表示强制退出，不对文件进行保存 等于<code>ZQ</code></td>
</tr>
<tr>
<td align="left">:wq</td>
<td align="left">强制性写入文件并退出。即使文件没有被修改也强制写入，并更新文件的修改时间。等同于<code>ZZ</code></td>
</tr>
<tr>
<td align="left">:wq!</td>
<td align="left">保存并强制退出</td>
</tr>
<tr>
<td align="left">:! 命令</td>
<td align="left"><code>:!ifconfig</code>临时退出去看 ip 地址</td>
</tr>
<tr>
<td align="left">&#x2F;word</td>
<td align="left">向光标之下寻找一个名称为 word 的字符串。（多次按<code>n</code>向下查找 &#x2F; 按<code>shift+n</code>向上查找(反向查找)）</td>
</tr>
<tr>
<td align="left">?word</td>
<td align="left">向光标之上寻找一个字符串名称为 word 的字符串。（多次按<code>n</code>向上查找 &#x2F; 按<code>shift+n</code>向下查找）</td>
</tr>
<tr>
<td align="left">:n1,n2s&#x2F;a&#x2F;b&#x2F;g</td>
<td align="left">部分行内替换， <code>:3,5/s/7/8/g</code>在第三 3 行到 5 行将 7 替换成 8</td>
</tr>
<tr>
<td align="left">:%s&#x2F;a&#x2F;b&#x2F;g</td>
<td align="left">全文替换，将 a 替换成 b</td>
</tr>
</tbody></table>
<h3 id="4-可视模式"><a href="#4-可视模式" class="headerlink" title="4.可视模式"></a>4.可视模式</h3><table>
<thead>
<tr>
<th>正常模式进入可视模式的命令</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>v</td>
<td>进入字符可视模式</td>
</tr>
<tr>
<td>V（shift+v）</td>
<td>行可视模式</td>
</tr>
<tr>
<td>ctrl + v</td>
<td>块可视模式，配合 d 和大写 i 命令进行块的操作</td>
</tr>
</tbody></table>
<blockquote>
<p>举例；块模式，先按 ctrl+v,用光标移动选择对应的块（每一行相同位置组成的块），再按 shift+i，回到所选快位置的第一行光标处插入 XXX，再按 2 下 ESC，这样所选块的每一行开头都插入了 XXX 内容。或者选中了块后按 d 删掉该块</p>
</blockquote>
<h2 id="5-用户和用户组管理"><a href="#5-用户和用户组管理" class="headerlink" title="5.用户和用户组管理"></a>5.用户和用户组管理</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd 新用户名</span><br><span class="line"><span class="built_in">id</span> 用户名</span><br><span class="line">passwd 用户名(修改用户密码)</span><br><span class="line">userdel 用户名(删除用户但是会保留该用户的家目录)</span><br><span class="line">userdel -r 用户名（删除用户不会保留用户的家目录，删得比较干净）</span><br><span class="line"></span><br><span class="line">groupadd 用户组名 （新建用户组）</span><br><span class="line">usermod -g 目标用户组 用户名 （将用户加入到目标用户组中）</span><br><span class="line">useradd -g 目标用户组 新建用户名 （新建用户并直接加入到目标用户组中，常用，一步到位）</span><br><span class="line">su 用户名（切换用户）</span><br><span class="line"><span class="built_in">sudo</span> (以其他用户身份执行命令)</span><br></pre></td></tr></table></figure>

<h2 id="6-文件和目录的权限"><a href="#6-文件和目录的权限" class="headerlink" title="6.文件和目录的权限"></a>6.文件和目录的权限</h2><p>1.文件类型:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 普通文件</span><br><span class="line">d 目录</span><br><span class="line">l 符号链接</span><br><span class="line">b 块特殊文件（设备文件）</span><br><span class="line">c字符设备文件（设备文件）</span><br><span class="line">f命名管道（网络中的）</span><br><span class="line">s套接字文件（网络中的）</span><br></pre></td></tr></table></figure>

<p>2.权限表示方法</p>
<table>
<thead>
<tr>
<th align="left">普通文件字符权限表示方法</th>
<th align="left">数字权限表示</th>
<th align="left">目录文件权限表示方法</th>
</tr>
</thead>
<tbody><tr>
<td align="left">r 读</td>
<td align="left">r&#x3D;4</td>
<td align="left">x 进入目录</td>
</tr>
<tr>
<td align="left">w 写</td>
<td align="left">w&#x3D;2</td>
<td align="left">rx 显示目录内的文件名（可进可查看）</td>
</tr>
<tr>
<td align="left">x 执行</td>
<td align="left">x&#x3D;1</td>
<td align="left">wx 修改目录内的文件（可修改可删除）</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left">rwx 修改目录内的文件（可进可查看可修改可删除）</td>
</tr>
</tbody></table>
<blockquote>
<p>创建新文件有默认权限，根据 umask(022)来计算，属主和属组根据当前进程的用户来设定，默认的普通文件权限应该是 666，减去 umask 等于 644，则默认文件权限都是 644</p>
</blockquote>
<p>3.修改权限命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. <span class="built_in">chmod</span> 修改文件，目录的权限</span><br><span class="line">修改权限： 属主权限（u） 属组权限(g) 其他用户权限(0)  3个一起修改(a)</span><br><span class="line">例子；</span><br><span class="line">		<span class="built_in">chmod</span> g+x afile</span><br><span class="line">		<span class="built_in">chmod</span> o-r afile</span><br><span class="line">		<span class="built_in">chmod</span> a+w afile</span><br><span class="line"></span><br><span class="line">2. <span class="built_in">chown</span> 更改属主和属组</span><br><span class="line"><span class="built_in">chown</span> user1 /test (更改目录<span class="built_in">test</span>的属主为user1)</span><br><span class="line"><span class="built_in">chown</span> :group1 /test (更改目录<span class="built_in">test</span>的属组，属组前面要加上:)</span><br><span class="line"><span class="built_in">chown</span> user1:group /test (同时更改属主和属组)</span><br><span class="line"></span><br><span class="line">3. <span class="built_in">chgrp</span> 可以单独更改属组（不常用）</span><br></pre></td></tr></table></figure>

<p>4.特殊权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SUID （用于二进制可执行文件，执行命令时取得文件属主权限，如/usr/bin/passwd ; -rwsr-xr-x）</span><br><span class="line">	<span class="built_in">chmod</span> 4XXX /afile (给文件设置SUID，用数字权限前面加个４)</span><br><span class="line"></span><br><span class="line">SGID (用于目录，在该目录下创建新文件和目录，权限自动更改为该目录的属组，文件共享的时候经常用到)</span><br><span class="line">	<span class="built_in">chmod</span> １XXX /afile (给文件设置SGID ，用数字权限前面加个１)</span><br><span class="line"></span><br><span class="line">SBIT （用于目录，该目录下新建的文件和目录，仅root和自己可以删除，如<span class="built_in">ls</span> /tmp ; drwxrwxrwt.）</span><br></pre></td></tr></table></figure>

<h2 id="7-进程和文件系统"><a href="#7-进程和文件系统" class="headerlink" title="7.进程和文件系统"></a>7.进程和文件系统</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.查看进程</span><br><span class="line">ps -e</span><br><span class="line">ps -ef</span><br><span class="line">ps -eLf|more  (分页查看更多进程)</span><br><span class="line">top</span><br><span class="line">top -p 进程号 (只动态查看一个进程)</span><br><span class="line">pstree</span><br><span class="line"></span><br><span class="line">2. 内存查看</span><br><span class="line">free -m</span><br><span class="line">top</span><br><span class="line"></span><br><span class="line">3.磁盘查看</span><br><span class="line">fdisk -l (分区磁盘的查看)</span><br><span class="line">parted -l</span><br><span class="line">dh -h</span><br><span class="line"><span class="built_in">du</span> /etc/passwd (查看文件实际用量)（<span class="built_in">ls</span> -lh 中的h查出来的文件有空洞大小，不是文件实际的大小）</span><br></pre></td></tr></table></figure>

<blockquote>
<p>创建一个有空洞的文件（linux 虚拟化就是创建一个非常大比如 1T 大小的文件，实际占用大小可以很小）<br>dd if&#x3D;&#x2F;dev&#x2F;zero bs&#x3D;4M count&#x3D;10 seek&#x3D;20 of&#x3D;bfile<br>count 就是记录一块是 10M，seek 时跳过 20 块 X4M<br>ls -lh bfile -&gt; 120M (记录从看似 hi 到结尾写了多少字节)<br>du -h bfile -&gt;40M(真正统计实际的文件长度)</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">常见的文件系统，linux支持多种文件系统：ext4/xfs/NTFS</span><br><span class="line">ext4中</span><br><span class="line">超级块</span><br><span class="line">i节点（inode），记录每个文件权限信息，文件名存在父目录中，<span class="built_in">ls</span> -i查看</span><br><span class="line">数据块（datablock），记录数据信息</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">用i节点的角度来解读下面几个命令：</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> afile afile1</span><br><span class="line"><span class="built_in">ls</span> -li afile* 复制文件，会生成2个不同的i节点</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> afile afile2</span><br><span class="line"><span class="built_in">ls</span> -li afile* 重命名很快，是因为两个文件对应的i节点没变</span><br><span class="line"></span><br><span class="line">vim编辑文件保存后会改变i节点，因为每次使用vi编辑一个文件，它会在缓冲区新生成一个afile.swp的隐藏文件，改变的数据存在swp文件中。</span><br><span class="line"><span class="built_in">echo</span> 123&gt;afile 追加不会改变i节点，只会改变数据块的内容</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> afile 删除文件，准确来说是将i节点和文件名之间的链接断开</span><br></pre></td></tr></table></figure>

<ul>
<li><code>ln afile bfile</code> 给 afile 创建一个<em>硬链接</em>，硬链接的两个文件是<em>同步更改</em>的，这两个文件名指向同一个 i 节点</li>
</ul>
<ol>
<li>硬链接:两个文件指定的是同一个 inode</li>
<li>硬链接不能跨分区存在</li>
<li>硬链接不能链接到目录(要避免循环引用)</li>
<li>删除硬链接只会减少文件被硬链接的次数,源文件不会动.<br>删除源文件，硬链接不受影响。</li>
</ol>
<ul>
<li><code>ln -s afile aafile</code> 给 afile 创建一个<em>软链接（符号链接</em>），aafile 文件的 i 节点和 afile 是不一样的。<br><code>ls -li aafile -&gt; 3799 lrwxrwxrwx ... </code>(会多一个<code>l</code>表示它是一个符号链接)</li>
</ul>
<ol>
<li>软链接:是一个独立的文件,有自己独立的 inode，和源文件不一样。</li>
<li>软链接没有存储任何数据，只是存储了访问文件的另-种路径，所以对软连接修改权限是不会生效的.<br>软链接可以对目录创建也可以跨分区</li>
<li>删除软链接,跟源文件没任何关系。<br>源文件被删除,软连接将不可用.</li>
</ol>
<h1 id="shell-脚本"><a href="#shell-脚本" class="headerlink" title="shell 脚本"></a>shell 脚本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##1.计算1-100的和</span></span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 100`;<span class="keyword">do</span></span><br><span class="line">	<span class="built_in">sum</span>=$[<span class="variable">$sum</span>+<span class="variable">$i</span>]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$sum</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##2.编写shell脚本，要求输入一个数字，然后计算出从1到输入数字的和，要求，如果输入的数字小于1，则重新输入，直到输入正确的数字为止</span></span><br><span class="line">n=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$n</span> -lt 1 ] ;<span class="keyword">do</span></span><br><span class="line">	<span class="built_in">read</span> -p <span class="string">&quot;请输入大于或者等于1的数字：&quot;</span> n</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$n</span>`;<span class="keyword">do</span></span><br><span class="line">	<span class="built_in">sum</span>=$[<span class="variable">$sum</span>+<span class="variable">$i</span>]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$sum</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##3.编写shell脚本，把/root/目录下的所有目录（只需要一级）拷贝到/tmp/目录下</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">ls</span> ./demo`;<span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">	<span class="keyword">if</span> [ -d <span class="variable">$i</span> ];<span class="keyword">then</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>是文件&quot;</span></span><br><span class="line">	<span class="built_in">cp</span> -r ./demo/<span class="variable">$i</span> ./tmp</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;cp复制&quot;</span></span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##4. 编写shell脚本，批量建立用户user_00, user_01, … ,user_100并且所有用户同属于users组；</span></span><br><span class="line">groupadd <span class="built_in">users</span>;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 0 9`;<span class="keyword">do</span></span><br><span class="line">	useradd -G <span class="built_in">users</span> user_<span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 10 100`;<span class="keyword">do</span></span><br><span class="line">	useradd -G <span class="built_in">users</span> user_<span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##5. 编写shell脚本，截取文件test.log中包含关键词’abc’的行中的第一列（假设分隔符为”:”），然后把截取的数字排序（假设第一列为数字），然后打印出重复次数超过10次的列；</span></span><br><span class="line">awk -F <span class="string">&quot;:&quot;</span> <span class="string">&quot;<span class="variable">$0</span>~/abc/ &#123;print <span class="variable">$1</span>&#125;&quot;</span> test.log &gt; data.txt</span><br><span class="line"><span class="built_in">sort</span> -n data.txt |<span class="built_in">uniq</span> -c|<span class="built_in">sort</span> -n &gt; res.txt</span><br><span class="line">awk <span class="string">&#x27;$1&gt;10 &#123;print $2&#125;&#x27;</span> res.txt</span><br><span class="line"><span class="comment">#uniq -c 检查文件并删除文件中重复出现的行，并在行首显示该行重复出现的次数。</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##6. 编写shell脚本，判断输入的IP是否正确（IP的规则是，n1.n2.n3.n4，其中1&lt;n1&lt;255, 0&lt;n2&lt;255,=&quot;&quot; 0&lt;n3&lt;255,=&quot;&quot; 0&lt;n4&lt;255&lt;=&quot;&quot; span=&quot;&quot;&gt;）。</span></span><br><span class="line">？？？</span><br></pre></td></tr></table></figure>

<p><img src="/images/commandshell1.png"><br><img src="/images/commandshell2.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 7.批量重命名</span></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> `<span class="built_in">ls</span> *.mp3`; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">mv</span> <span class="variable">$filename</span> $(<span class="built_in">basename</span> <span class="variable">$filename</span> .mp3).mp4</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#实用场景，递归删除一个文件夹下指定后缀名的文件</span></span><br><span class="line"><span class="comment">#! /bin/bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">deletefiles</span></span>()&#123;</span><br><span class="line">	<span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;1##*.&#125;</span>&quot;</span> = <span class="string">&quot;<span class="variable">$2</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;后缀名是 <span class="variable">$2</span>, 删除 <span class="variable">$1</span>&quot;</span></span><br><span class="line">		<span class="built_in">rm</span> -f <span class="variable">$1</span></span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">listfolder</span></span>()&#123;</span><br><span class="line">	<span class="keyword">if</span> [ ! -d <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ] || [ <span class="string">&quot;`ls -A <span class="variable">$1</span>`&quot;</span> = <span class="string">&quot;&quot;</span> ]</span><br><span class="line">	<span class="keyword">then</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>不存在或者是个空目录&quot;</span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		flists=`<span class="built_in">ls</span> <span class="variable">$1</span>`</span><br><span class="line">		<span class="built_in">cd</span> <span class="variable">$1</span></span><br><span class="line">		<span class="keyword">for</span> f <span class="keyword">in</span> <span class="variable">$flists</span></span><br><span class="line">		<span class="keyword">do</span></span><br><span class="line">			<span class="keyword">if</span> <span class="built_in">test</span> -d <span class="variable">$f</span></span><br><span class="line">			<span class="keyword">then</span></span><br><span class="line">				listfolder <span class="variable">$f</span> <span class="variable">$2</span></span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				deletefiles <span class="variable">$f</span> <span class="variable">$2</span></span><br><span class="line">			<span class="keyword">fi</span></span><br><span class="line">		<span class="keyword">done</span></span><br><span class="line">		<span class="built_in">cd</span> ../</span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dir</span>=./demo</span><br><span class="line">listfolder <span class="variable">$dir</span> txt mp3</span><br></pre></td></tr></table></figure>

<h1 id="Linux-awk-用法"><a href="#Linux-awk-用法" class="headerlink" title="Linux-awk 用法"></a>Linux-awk 用法</h1><h2 id="1-awk-和-sed-的区别"><a href="#1-awk-和-sed-的区别" class="headerlink" title="1.awk 和 sed 的区别"></a>1.awk 和 sed 的区别</h2><ol>
<li>sed 的核心是正则，对于 sed， 基本的两个概念是匹配和行为。 1. 匹配是通过区域选择加上正则表达式实现，比如“3 到 6 行以 This 开头的” 2. 行为是增删改查。可以在某个位置新增或删除一行，可以通过正则表达式进行变量替换，可以显示满足某些条件的行。配合 shell 的批处理就会很强大， 比如我想把所有文件的开头添加一个注释，比如我想把所有文件的某一个变量进行替换，比如我想把所有文件满足某些条件的行进行合并和拆分。 3. 同时，sed 提供了一个保持空间（hold space）可以实现逆序输出等操作。 4. 另外，sed 的用法非常灵活，你可以将匹配和行为进行不同的嵌套，举个复杂的例子“将第某行到某行之间的满足 A 条件的里面满足 B 条件的行进行 C 操作和 D 操作并且将 E 条件的行进行 F 操作”这样的灵活组合方式怕是也只有 sed 了</li>
<li>awk，经常用于格式化输出，也就是将数据按照我们想要的方式来显示，并且可以做一些基本的统计工作。 1. 它的运作模式是“预处理+逐行处理+最终处理”。一般我们只用“逐行处理”比如对于满足条件的某些行，我们打印某某列。通过指定分隔符，我们很容易的对列进行操作。 2. 预处理来定义变量，逐行处理来修改变量，最终处理来打印变量。</li>
</ol>
<h2 id="2-awk-使用"><a href="#2-awk-使用" class="headerlink" title="2.awk 使用"></a>2.awk 使用</h2><p><code>awk &#39;BEGIN&#123; commands &#125; /pattern/ &#123;commands&#125; END&#123; commands &#125;&#39;</code></p>
<blockquote>
<p>1、<code>BEGIN&#123; commands &#125; </code>开始块就是在程序启动的时候执行的代码部分，并且它在整个过程中只执行一次。一般情况下，我们可以在开始块中初始化一些变量。<br>注意：开始块部分是可选的，你的程序可以没有开始块部分。<br>2、<code> /pattern/ &#123;commands&#125;</code>pattern 部分匹配该行内容成功后，才会执行 commands 的内容。<br>3 <code>END&#123; commands &#125;</code>结束块是在程序结束时执行的代码。<br>注意：结束块部分也是可选的</p>
</blockquote>
<h2 id="3-awk-基本用法"><a href="#3-awk-基本用法" class="headerlink" title="3.awk 基本用法"></a>3.awk 基本用法</h2><table>
<thead>
<tr>
<th>选项</th>
<th align="left"></th>
</tr>
</thead>
<tbody><tr>
<td>-F</td>
<td align="left"><code>-F &#39;,&#39;</code>或者 <code>-F &#39;正则表达式&#39; </code> -F 选项来改变字段分隔符</td>
</tr>
<tr>
<td>-v</td>
<td align="left"><code>-va=1</code>赋值一个用户定义变量 a 的值为 1</td>
</tr>
<tr>
<td>-f</td>
<td align="left"><code>-f scripfile</code>，从脚本文件中读取 awk 命令</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> 1.txt</span><br><span class="line"> 2 this is a test1</span><br><span class="line"> 3 Are you like awk1</span><br><span class="line"> This<span class="string">&#x27;s a test1</span></span><br><span class="line"><span class="string"> 10 There are orange,apple,mongo</span></span><br><span class="line"><span class="string">------------------------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">$ awk &#x27;</span>&#123;<span class="built_in">print</span> <span class="variable">$1</span>,<span class="variable">$4</span>&#125;<span class="string">&#x27; 1.txt    # 每行按空格或TAB分割，输出文本中的1、4项</span></span><br><span class="line"><span class="string"> 2 a</span></span><br><span class="line"><span class="string"> 3 like</span></span><br><span class="line"><span class="string"> This&#x27;</span>s</span><br><span class="line"> 10 orange,apple,mongo</span><br><span class="line">------------------------------------------------------------------------------------------------------------</span><br><span class="line">$ awk <span class="string">&#x27;&#123;printf &quot;%-8s %-10s\n&quot;,$1,$4&#125;&#x27;</span> 1.txt  <span class="comment"># 格式化输出</span></span><br><span class="line"> 2        a</span><br><span class="line"> 3        like</span><br><span class="line"> This<span class="string">&#x27;s</span></span><br><span class="line"><span class="string"> 10       orange,apple,mongo</span></span><br><span class="line"><span class="string">--------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">$ awk -F, &#x27;</span>&#123;<span class="built_in">print</span> <span class="variable">$1</span>,<span class="variable">$2</span>&#125;<span class="string">&#x27; 1.txt   # 使用&quot;,&quot;分割。-F相当于内置变量FS, 指定分割字符</span></span><br><span class="line"><span class="string"> 2 this is a test</span></span><br><span class="line"><span class="string"> 3 Are you like awk</span></span><br><span class="line"><span class="string"> This&#x27;</span>s a <span class="built_in">test</span></span><br><span class="line"> 10 There are orange apple</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;FS=&quot;,&quot;&#125; &#123;print $1,$2&#125;&#x27;</span> 1.txt   <span class="comment"># 或者使用内建变量</span></span><br><span class="line"> 2 this is a <span class="built_in">test</span></span><br><span class="line"> 3 Are you like awk</span><br><span class="line"> This<span class="string">&#x27;s a test</span></span><br><span class="line"><span class="string"> 10 There are orange apple</span></span><br><span class="line"><span class="string">-----------------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">$ awk -F &#x27;</span>[ ,]<span class="string">&#x27;  &#x27;</span>&#123;<span class="built_in">print</span> <span class="variable">$1</span>,<span class="variable">$2</span>,<span class="variable">$5</span>&#125;<span class="string">&#x27;   1.txt   # 使用多个分隔符.先使用空格分割，然后对分割结果再使用&quot;,&quot;分割</span></span><br><span class="line"><span class="string"> 2 this test</span></span><br><span class="line"><span class="string"> 3 Are awk</span></span><br><span class="line"><span class="string"> This&#x27;</span>s a</span><br><span class="line"> 10 There apple</span><br><span class="line">-----------------------------------------------------------------------------------------------------</span><br><span class="line">$ awk -va=1 <span class="string">&#x27;&#123;print $1,$1+a&#125;&#x27;</span> 1.txt  <span class="comment"># -v  设置变量</span></span><br><span class="line"> 2 3</span><br><span class="line"> 3 4</span><br><span class="line"> This<span class="string">&#x27;s 1</span></span><br><span class="line"><span class="string"> 10 11</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$ awk -va=1 -vb=s &#x27;</span>&#123;<span class="built_in">print</span> <span class="variable">$1</span>,<span class="variable">$1</span>+a,<span class="variable">$1b</span>&#125;<span class="string">&#x27; 1.txt</span></span><br><span class="line"><span class="string"> 2 3 2s</span></span><br><span class="line"><span class="string"> 3 4 3s</span></span><br><span class="line"><span class="string"> This&#x27;</span>s 1 This<span class="string">&#x27;ss</span></span><br><span class="line"><span class="string"> 10 11 10s</span></span><br><span class="line"><span class="string">-----------------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string"> $ awk -f cal.awk log.txt #  awk -f &#123;awk脚本&#125; &#123;文件名&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="4-awk-常用系统变量"><a href="#4-awk-常用系统变量" class="headerlink" title="4.awk 常用系统变量"></a>4.awk 常用系统变量</h2><table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述（列举常用的，还有很多其他的没怎么常用）</th>
</tr>
</thead>
<tbody><tr>
<td align="left">$n</td>
<td align="left"><strong>$1 当前记录的第 1 个字段的内容</strong>。<strong>和 sed 中的$1 不同,sed 表示第一个参数</strong></td>
</tr>
<tr>
<td align="left">$0</td>
<td align="left">整行数据的内容</td>
</tr>
<tr>
<td align="left">FS</td>
<td align="left">字段分隔符 (默认是空格)</td>
</tr>
<tr>
<td align="left">OFS</td>
<td align="left">输出字段的分隔符（默认是空格）</td>
</tr>
<tr>
<td align="left">RS</td>
<td align="left">行分隔符（默认以\n 作为一行的结尾），单行分割成多行用到</td>
</tr>
<tr>
<td align="left">NR</td>
<td align="left">行号，从 1 开始，多文件时候也是连续接着计数</td>
</tr>
<tr>
<td align="left">FNR</td>
<td align="left">各文件分别计数的行号，多文件的时候会和 NR 不同，它会重新计数</td>
</tr>
<tr>
<td align="left">NF</td>
<td align="left">一行中字段数量，最后一个字段内容可以用<code>$NF</code>取出</td>
</tr>
<tr>
<td align="left">ARGC</td>
<td align="left">命令行参数的数目</td>
</tr>
<tr>
<td align="left">ARGV</td>
<td align="left">包含命令行参数的数组，第一个参数是命令 awk</td>
</tr>
</tbody></table>
<p><img src="/images/commandawk1.png"><br><img src="/images/commandawk2.png"><br><img src="/images/commandawk3.png"><br><img src="/images/commandawk4.png"><br><img src="/images/commandawk5.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> log.txt</span><br><span class="line"> 2 this is a test1</span><br><span class="line"> 3 Are you like awk1</span><br><span class="line"> This<span class="string">&#x27;s a test1</span></span><br><span class="line"><span class="string"> 10 There are orange,apple,mongo</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ awk <span class="string">&#x27;/re/ &#x27;</span> log.txt    <span class="comment"># 输出包含 &quot;re&quot; 的行</span></span><br><span class="line">---------------------------------- -----------</span><br><span class="line">3 Are you like awk</span><br><span class="line">10 There are orange,apple,mongo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;IGNORECASE=1&#125; /this/&#x27;</span> log.txt <span class="comment">#忽略大小写</span></span><br><span class="line">---------------------------------------------</span><br><span class="line">2 this is a <span class="built_in">test</span></span><br><span class="line">This<span class="string">&#x27;s a test</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$ awk &#x27;</span><span class="variable">$2</span> ~ /th/ &#123;<span class="built_in">print</span> <span class="variable">$2</span>,<span class="variable">$4</span>&#125;<span class="string">&#x27; log.txt  # 输出第二列包含 &quot;th&quot;，并打印第二列与第四列  ~代表模式</span></span><br><span class="line"><span class="string">---------------------------------------------</span></span><br><span class="line"><span class="string">this a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$ awk &#x27;</span><span class="variable">$2</span> !~ /th/ &#123;<span class="built_in">print</span> <span class="variable">$2</span>,<span class="variable">$4</span>&#125;<span class="string">&#x27; log.txt      #模式取反</span></span><br><span class="line"><span class="string">---------------------------------------------</span></span><br><span class="line"><span class="string">Are like</span></span><br><span class="line"><span class="string">a</span></span><br><span class="line"><span class="string">There orange,apple,mongo</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$ awk &#x27;</span>!/th/ &#123;<span class="built_in">print</span> <span class="variable">$2</span>,<span class="variable">$4</span>&#125;<span class="string">&#x27; log.txt   #模式取反（和上面一个是一样的效果）</span></span><br><span class="line"><span class="string">---------------------------------------------</span></span><br><span class="line"><span class="string">Are like</span></span><br><span class="line"><span class="string">a</span></span><br><span class="line"><span class="string">There orange,apple,mongo</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -l *.txt | awk <span class="string">&#x27;&#123;sum+=$5&#125; END &#123;print sum&#125;&#x27;</span>  <span class="comment">#计算文件大小</span></span><br><span class="line">--------------------------------------------------</span><br><span class="line">666581</span><br><span class="line"></span><br><span class="line">$ awk <span class="string">&#x27;length&gt;80&#x27;</span> log.txt <span class="comment">#从文件中找出长度大于 80 的行</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">seq</span> 9 | sed <span class="string">&#x27;H;g&#x27;</span> | awk -v RS=<span class="string">&#x27;&#x27;</span> <span class="string">&#x27;&#123;for(i=1;i&lt;=NF;i++)printf(&quot;%dx%d=%d%s&quot;, i, NR, i*NR, i==NR?&quot;\n&quot;:&quot;\t&quot;)&#125;&#x27;</span> <span class="comment">#打印九九乘法表</span></span><br></pre></td></tr></table></figure>

<h2 id="5-awk-循环和数组"><a href="#5-awk-循环和数组" class="headerlink" title="5.awk 循环和数组"></a>5.awk 循环和数组</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;for(c=2;c&lt;=NF;c++) print $c&#125;&#x27;</span> 1.txt</span><br><span class="line">awk <span class="string">&#x27;&#123;sum=0;for(c=2;c&lt;NF;c++)  sum+=$c; print sum/(NF-1)&#125;&#x27;</span> 1.txt <span class="comment">#求每行的平均值</span></span><br><span class="line">awk <span class="string">&#x27;&#123;sum=0;for(c=2;c&lt;NF;c++)  sum+=$c;average[$1]=sum/(NF-1)&#125; END&#123;for(user in average) print user,average[user]&#125;&#x27;</span> 1.txt  <span class="comment">#用数组的方式求每行的平均数</span></span><br><span class="line">awk <span class="string">&#x27;&#123;sum=0;for(c=2;c&lt;NF;c++)  sum+=$c;average[$1]=sum/(NF-1)&#125; END&#123;for(user in average) sum2+=average[user];print sum2/NR&#125;&#x27;</span> 1.txt <span class="comment">#求总数的平均值</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/images/commandawk6.png"><br><img src="/images/commandawk7.png"><br><img src="/images/commandawk8.png" alt="求每行的平均数"><br><img src="/images/commandawk9.png"></p>
<blockquote>
<p>命令行参数数组<br>ARGC 命令行参数的数目<br>ARGV 包含命令行参数的数组</p>
</blockquote>
<p><img src="/images/commandawk10.png"></p>
<h1 id="Linux-sed-用法"><a href="#Linux-sed-用法" class="headerlink" title="Linux-sed 用法"></a>Linux-sed 用法</h1><h2 id="1-sed-和-vim-的区别"><a href="#1-sed-和-vim-的区别" class="headerlink" title="1.sed 和 vim 的区别"></a>1.sed 和 vim 的区别</h2><p>sed（Stream Editor）是一种非交互式的行编辑器<br>vim 是交互式的文本编辑器</p>
<ul>
<li>sed 是以换行符以分隔单位，对文本进行逐行的处理。处理时，把当前处理的行存储在临时缓冲区中，称为『模式空间』（pattern space），接着用 sed 命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。</li>
<li>文件内容并没有改变，除非你使用重定向存储输出。</li>
<li>sed 主要用来自动编辑一个或多个文件，简化对文件的反复操作，编写转换程序等。</li>
</ul>
<h2 id="2-sed-参数"><a href="#2-sed-参数" class="headerlink" title="2. sed 参数"></a>2. sed 参数</h2><h3 id="用法：sed-选项-动作-filename"><a href="#用法：sed-选项-动作-filename" class="headerlink" title="用法：sed [选项] [动作] [filename]"></a>用法：sed [选项] [动作] [filename]</h3><table>
<thead>
<tr>
<th>选项</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td>-n</td>
<td align="left">组织默认输出，一般和动作 p 一起使用打印模式空间的内容</td>
</tr>
<tr>
<td>-e</td>
<td align="left">多个操作</td>
</tr>
<tr>
<td>-i</td>
<td align="left">直接修改源文件</td>
</tr>
<tr>
<td>-r</td>
<td align="left">动作中支持扩展正则表达式</td>
</tr>
<tr>
<td>-f</td>
<td align="left">将 sed 脚本卸载一个文件中， sed -f sedscript filename 可以加载执行 sed 命令</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>动作</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td>s</td>
<td align="left">直接进行替换（搭配正则表达式），例如 1,20s&#x2F;old&#x2F;new&#x2F;g 一般是替换符合条件的字符串而不是整行</td>
</tr>
<tr>
<td>a</td>
<td align="left">append 后面接字串，在下面新增一行</td>
</tr>
<tr>
<td>i</td>
<td align="left">insert 后面接字串，在上面插入一行</td>
</tr>
<tr>
<td>d</td>
<td align="left">delete,删除行，后面不接任何参数，直接删除地址表示的行</td>
</tr>
<tr>
<td>c</td>
<td align="left">取代行后面接字串</td>
</tr>
<tr>
<td>p</td>
<td align="left">print，打印模式空间的内容，通常和选项 <code>-n </code>一起使用</td>
</tr>
<tr>
<td>w</td>
<td align="left">write，将模式空间的内容写入到文件</td>
</tr>
</tbody></table>
<h2 id="3-sed-使用"><a href="#3-sed-使用" class="headerlink" title="3.sed 使用"></a>3.sed 使用</h2><h3 id="1-替换行内部分内容"><a href="#1-替换行内部分内容" class="headerlink" title="1.替换行内部分内容"></a>1.替换行内部分内容</h3><ol>
<li><code> sed  &#39;s/old/new/【参数】 &#39;  filename</code></li>
</ol>
<blockquote>
<p>替换命令中一般用<code>/</code>作为分隔符，也可以用其他符号替代，s 后面就是分隔符，例如<code>sed -i &#39;s#11#99#&#39; 1.txt  </code></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -i 选项是直接修改了源文件</span></span><br><span class="line">sed -i <span class="string">&#x27;s/af/bbbb&#x27;</span> 1.txt  <span class="comment">#每一行中只替换第1个af，该行后面的af不替换</span></span><br><span class="line">sed -i <span class="string">&#x27;s/af/bbbb/2&#x27;</span> 1.txt <span class="comment">#每一行中只替换第2个af，该行后面的af和第一个不替换</span></span><br><span class="line">sed -i <span class="string">&#x27;s/af/bbbb/g&#x27;</span> 1.txt <span class="comment"># 每一行中所有的af都将被替换成bbbb</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#替换中有普通元字符</span></span><br><span class="line">sed <span class="string">&#x27;s/^root//&#x27;</span> 1.txt <span class="comment">#匹配以root开头的那一行，并将root删掉</span></span><br><span class="line">sed <span class="string">&#x27;s/ab*/5555/&#x27;</span> 1.txt <span class="comment">#匹配一行中a开头后面的b出现0次或者多次，将其替换成5555</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#替换中有扩展元字符(+,?,管道符)，需要加上-r</span></span><br><span class="line">sed -r <span class="string">&#x27;s/ab+/5555/&#x27;</span> 1.txt <span class="comment">#匹配一行中a开头后面的b出现1次或者多次，将其替换成5555</span></span><br><span class="line">sed -r <span class="string">&#x27;s/ab？/5555/&#x27;</span> 1.txt <span class="comment">#匹配一行中a开头后面的b出现0次或者1次，将其替换成5555</span></span><br><span class="line">sed -r <span class="string">&#x27;s/a|b/5555/&#x27;</span> 1.txt <span class="comment">#匹配一行中的a或者b，将其替换成5555</span></span><br><span class="line">sed -r <span class="string">&#x27;s/(aa)|(bb)/5555/&#x27;</span> 1.txt <span class="comment">#匹配一行中的aa或者bb,要用括号括起来表示分组，将其替换成5555</span></span><br><span class="line">sed -r <span class="string">&#x27;s/(aa)|(bb)/\1\2/&#x27;</span> 1.txt <span class="comment">#分组还有个sed回调的功能，\1,\2就是再次引用aa和bb，放到被替换的位置</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/command1.png"></p>
<ol start="2">
<li>寻址匹配替换（默认是对每行进行操作，增加寻址后对匹配的行进行操作）<br><code>sed &#39;行号s/old/new/[参数]&#39;  filename</code><br><code>sed  &#39;/正则表达式/s/old/new/[参数] &#39;  filename</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.行号</span><br><span class="line">sed <span class="string">&#x27;1s/af/bbbb/&#x27;</span> 1.txt <span class="comment">#只在第1行匹配做替换</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-n选项和标志位p,只打印替换成功的行</span></span><br><span class="line">sed -n <span class="string">&#x27;1,3s/af/bbbb/p&#x27;</span> 1.txt    <span class="comment">#第1至3行匹配做替换</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#标志位w将替换成功的行写入到a.txt中</span></span><br><span class="line">sed <span class="string">&#x27;1,$s/af/bbbb/w&#x27;</span> 1.txt /tmp/a.txt <span class="comment">#第1行到最后一行做匹配替换并将替换成功的行写入到 a.txt中</span></span><br><span class="line"></span><br><span class="line">2.正则表达式</span><br><span class="line">sed <span class="string">&#x27;/root/s/af/bbbb/&#x27;</span> 1.txt <span class="comment">#匹配有root的一行将改行的af替换成bbbb</span></span><br><span class="line">sed <span class="string">&#x27;/^bin/s/af/bbbb/&#x27;</span> 1.txt <span class="comment">#匹配以bin开头的那行，将该行的af替换成bbbb</span></span><br><span class="line">sed <span class="string">&#x27;/^bin/,$s/af/bbbb&#x27;</span> 1.txt <span class="comment">#匹配以bin开头到最后一行的，每一行第一个替换成bbbb</span></span><br><span class="line"></span><br><span class="line">3.寻址可以匹配多条命令</span><br><span class="line">sed <span class="string">&#x27;/bin/&#123;s/a/b/;s/1/2/;=&#125;&#x27;</span> 1.txt <span class="comment">#匹配有bin的行，将该行中a替换成b,1替换成2</span></span><br><span class="line"><span class="comment">#打印行号命令=</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/command2.png"><br><img src="/images/command3.png"></p>
<h3 id="2-删除"><a href="#2-删除" class="headerlink" title="2.删除"></a>2.删除</h3><blockquote>
<p>删除模式空间内容，改变脚本的控制流，读取新的输入行<br>意味着 d 后面的脚本不会被执行</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;[寻址]/d&#x27;</span> filename</span><br><span class="line">sed <span class="string">&#x27;/ab/d&#x27;</span> 1.txt  <span class="comment"># 删除的是有ab一整行，并不是删除ab两个字符</span></span><br><span class="line">sed <span class="string">&#x27;/ab/d;s/a/n/&#x27;</span> 1.txt</span><br><span class="line"><span class="comment">#删除有ab的一行后，后面的将改行的a替换成n这条命令是不会被执行的，</span></span><br><span class="line"><span class="comment">#因为d删除过后就读取了新的输入行，改变了脚本的控制流，后面的命令不会被执行</span></span><br></pre></td></tr></table></figure>

<h3 id="3-插入和改写"><a href="#3-插入和改写" class="headerlink" title="3.插入和改写"></a>3.插入和改写</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;/ab/i hello&#x27;</span> 1.txt  <span class="comment">#在匹配ab的行的上一行插入hello</span></span><br><span class="line">sed <span class="string">&#x27;/ab/a hello&#x27;</span> 1.txt  <span class="comment">#在匹配ab的行的下一行插入hello</span></span><br><span class="line">sed <span class="string">&#x27;/ab/c hello&#x27;</span> 1.txt  <span class="comment">#将匹配的ab那一行改写成hello</span></span><br></pre></td></tr></table></figure>

<h3 id="4-读文件，写文件，打印退出"><a href="#4-读文件，写文件，打印退出" class="headerlink" title="4.读文件，写文件，打印退出"></a>4.读文件，写文件，打印退出</h3><blockquote>
<p>读文件命令 r<br>写文件命令 w<br>下一行命令 n<br>打印行号&#x3D;<br>打印命令 p<br>退出命令 q</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;/ab/r afile&#x27;</span> 1.txt  <span class="comment">#如果想要改写的字符串很长，可以写在afile里面，用r将匹配ab的那一行用afile的内容改写</span></span><br><span class="line">sed <span class="string">&#x27;/ab/r afile&#x27;</span> 1.txt &gt; /tmp/2.txt  <span class="comment">#读取afile的内容来改写1.txt中匹配的ab的那一行，并将结果追加到2.txt中</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打印文件中1-10行，用p和q，谁的效率更高？？</span></span><br><span class="line">$ <span class="built_in">seq</span> 1 1000000 &gt; lines.txt     <span class="comment">#seq指令创建1-1000000并递增</span></span><br><span class="line">$ <span class="built_in">wc</span> -l lines.txt      <span class="comment">#wc看文件行数</span></span><br><span class="line">1000000 lines.txt</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">time</span> sed -n <span class="string">&#x27;1,10p&#x27;</span> lines.txt    <span class="comment">#time查看运行时间  p打印1-10行，后面的还是会读入缓存区</span></span><br><span class="line">real	0m0.044s</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">time</span> sed <span class="string">&#x27;10q&#x27;</span> lines.txt       <span class="comment">#time查看运行时间   q是到第10行就退出，后面就不会再读取了</span></span><br><span class="line">real	0m0.004s</span><br></pre></td></tr></table></figure>

<h2 id="4-sed-多行模式空间"><a href="#4-sed-多行模式空间" class="headerlink" title="4.sed 多行模式空间"></a>4.sed 多行模式空间</h2><blockquote>
<p>为什么要有多行模式？<br>配置文件一般为单行出现，但是也有使用 XML 或者 JSON 格式的配置文件，为多行出现，例如 key 和 value，key 在一行，value 在另外一行。</p>
</blockquote>
<table>
<thead>
<tr>
<th>多行模式</th>
<th align="left"></th>
</tr>
</thead>
<tbody><tr>
<td>N</td>
<td align="left">追加下一行到模式空间,同时将两行看做一行，但是两行之间依然含有\n 换行符，如果命令未执行成功,则放弃之后任何命令</td>
</tr>
<tr>
<td>P</td>
<td align="left">打印模式空间中的第一个字符到第一个换行符</td>
</tr>
<tr>
<td>D</td>
<td align="left">删除当前模式空间开端至\n 的内容，放弃之后的命令，但是对剩余模式空间重新执行 sed。</td>
</tr>
<tr>
<td>n</td>
<td align="left">提前读取下一行 ，覆盖模型空间前一行，如果命令未执行成功，则放弃之后的任何命令</td>
</tr>
<tr>
<td>p</td>
<td align="left">打印当前模式空间内容，追加到默认输出之后</td>
</tr>
<tr>
<td>d</td>
<td align="left">删除当前模式空间内容，并放弃之后的命令，并对新读取的内容，从头执行 sed。</td>
</tr>
<tr>
<td>y</td>
<td align="left">字符转换：y&#x2F;abcde&#x2F;ABCDE&#x2F; ：将字符转换成大写</td>
</tr>
</tbody></table>
<p><img src="/images/command4.png"><br><img src="/images/command5.png"></p>
<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><ol>
<li>从文件中读取偶数行 <code>sed -n &#39;n;p&#39; 1.txt</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> 1.txt</span><br><span class="line">111</span><br><span class="line">222</span><br><span class="line">333</span><br><span class="line">444</span><br><span class="line">555</span><br><span class="line"></span><br><span class="line">$ sed -n <span class="string">&#x27;n;p&#x27;</span> 1.txt</span><br><span class="line">222</span><br><span class="line">444</span><br><span class="line"><span class="comment">#读取第一行111，执行n命令提前读取下一行就是222，此时模式空间的值为222，再执行p，打印模式空间的222</span></span><br><span class="line"><span class="comment">#之后读取333，执行n命令，此时模式空间为444，p打印444</span></span><br><span class="line"><span class="comment">#之后读取555，执行n命令，没有下一行了，n命令未执行成功，后面的p命令就放弃执行了。</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>从文件中读取奇数行 <code>sed -n &#39;$!N;P&#39; 1.txt</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sed -n <span class="string">&#x27;$!N;P&#x27;</span> 1.txt   <span class="comment">#大写的P哦</span></span><br><span class="line">111</span><br><span class="line">333</span><br><span class="line">555</span><br><span class="line"><span class="comment">#先读取111，$!(不是最后一行)条件满足，执行N命令此时模式空间值为111\n222，执行P命令，打印第一行到\n，结果为111</span></span><br><span class="line"><span class="comment">#再读取333，$!条件满足，执行N为333\n444，执行P，打印333</span></span><br><span class="line"><span class="comment">#再读取555为最后一行，$!条件不满足，跳过N命令，执行P，打印555</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">用d也可以实现读取奇数行</span><br><span class="line">$ sed <span class="string">&#x27;n;d&#x27;</span> 1.txt</span><br><span class="line">111</span><br><span class="line">333</span><br><span class="line">555</span><br><span class="line"><span class="comment">#先读取111，执行n，模式空间为222，执行d，删除此时模式空间的222</span></span><br><span class="line"><span class="comment">#再读取333，执行n，此时模式空间值为444，执行d，删除444</span></span><br><span class="line"><span class="comment">#再读取555，执行n命令，没有下一行了，n命令未执行成功，后面的d命令不执行</span></span><br><span class="line"><span class="comment">#因为没有-n参数，所以输入111\n333\n555</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>从文件中读取最后一行 <code>sed &#39;N;D&#39; 1.txt</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sed <span class="string">&#x27;N;D&#x27;</span> 1.txt</span><br><span class="line">666</span><br><span class="line"><span class="comment">#N将下一行追加到模式空间中</span></span><br><span class="line"><span class="comment">#执行N，此时模式空间为111\n222，执行D得222，</span></span><br><span class="line"><span class="comment">#执行N，此时模式空间为222\n333，执行D得333，</span></span><br><span class="line"><span class="comment">#执行N，此时模式空间为333\n444，执行D得444，</span></span><br><span class="line"><span class="comment">#执行N，此时模式空间为444\n555，执行D得555，</span></span><br><span class="line"><span class="comment">#再执行N，没下一行追加了执行失败，后面D不执行，无-n选项，最后结果就是555</span></span><br></pre></td></tr></table></figure>

<h2 id="5-sed-保持空间"><a href="#5-sed-保持空间" class="headerlink" title="5.sed 保持空间"></a>5.sed 保持空间</h2><blockquote>
<p>保持空间也是多行的一种操作方式<br>将内容暂存在保持空间，便于多行处理</p>
<table>
<thead>
<tr>
<th>保持空间</th>
<th align="left"></th>
</tr>
</thead>
<tbody><tr>
<td>h</td>
<td align="left">将当前模式空间中内容覆盖至保持空间，原来模式空间的内容被清空</td>
</tr>
<tr>
<td>H</td>
<td align="left">将当前模式空间中的内容追加至保持空间</td>
</tr>
<tr>
<td>g</td>
<td align="left">将当前保持空间中内容覆盖至模式空间，原来模式空间的内容被清空</td>
</tr>
<tr>
<td>G</td>
<td align="left">将当前保持空间中的内容追加至模式空间</td>
</tr>
<tr>
<td>x</td>
<td align="left">换模式空间和保持空间内容</td>
</tr>
</tbody></table>
</blockquote>
<ol>
<li>实现行数反转</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">head</span> -6 /etc/passwd | <span class="built_in">cat</span> -n | <span class="built_in">tac</span></span><br><span class="line"><span class="built_in">cat</span> -n /etc/passwd | head-6 |sed -n <span class="string">&#x27;1h;1!G;$!x;$p&#x27;</span></span><br><span class="line"><span class="built_in">cat</span> -n /etc/passwd | head-6 |sed -n <span class="string">&#x27;1!G;h;$p&#x27;</span></span><br><span class="line"><span class="built_in">cat</span> -n /etc/passwd | head-6 |sed <span class="string">&#x27;1!G;h;$!d&#x27;</span></span><br><span class="line"><span class="comment"># 1!G：第1行不执行“G”命令，从第2行开始执行</span></span><br><span class="line"><span class="comment"># $!d：最后一行不删除（保留最后1行）</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>行列转化</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> 1.txt</span><br><span class="line">111</span><br><span class="line">222</span><br><span class="line">333</span><br><span class="line">444</span><br><span class="line">555</span><br><span class="line">666</span><br><span class="line">$ sed -ne <span class="string">&#x27;H;$&#123;x;s/\n/ /g;p&#125;&#x27;</span> 1.txt</span><br><span class="line"> 111 222 333 444 555 666</span><br></pre></td></tr></table></figure>

<h1 id="git-常用操作"><a href="#git-常用操作" class="headerlink" title="git 常用操作"></a>git 常用操作</h1><h2 id="1-配置-ssh"><a href="#1-配置-ssh" class="headerlink" title="1.配置 ssh"></a>1.配置 ssh</h2><h3 id="1-1-本地上生成公钥私钥"><a href="#1-1-本地上生成公钥私钥" class="headerlink" title="1.1 本地上生成公钥私钥"></a>1.1 本地上生成公钥私钥</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C <span class="string">&quot;email&quot;</span> -f ~/.ssh/filename</span><br><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;email&quot;</span> -f ~/.ssh/filename</span><br><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;email&quot;</span></span><br><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;email&quot;</span> -f <span class="string">&quot;/C/Users/.ssh/filename&quot;</span>  <span class="comment"># 自定义密钥位置和密钥文件名</span></span><br></pre></td></tr></table></figure>

<h3 id="1-2-公钥私钥放到对应-bucket-github-上"><a href="#1-2-公钥私钥放到对应-bucket-github-上" class="headerlink" title="1.2 公钥私钥放到对应 bucket&#x2F;github 上"></a>1.2 公钥私钥放到对应 bucket&#x2F;github 上</h3><h3 id="1-3-配置-config-文件"><a href="#1-3-配置-config-文件" class="headerlink" title="1.3 配置 config 文件"></a>1.3 配置 config 文件</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#公司电脑host可以任意取名，但是拉取时要更改为git@name1Bitbucket.org，IdentityFile为私钥路径</span></span><br><span class="line">Host bitbucket</span><br><span class="line">HostName bitbucket.org</span><br><span class="line">IdentityFile C:/Users/.ssh/filename</span><br><span class="line">User email</span><br><span class="line"><span class="comment">#公司电脑</span></span><br><span class="line">Host github</span><br><span class="line">HostName github.com</span><br><span class="line">IdentityFile C:/Users/.ssh/id_rsa_custom</span><br><span class="line">User email</span><br></pre></td></tr></table></figure>

<h3 id="1-4-将私钥添加到本地-ssh-代理中"><a href="#1-4-将私钥添加到本地-ssh-代理中" class="headerlink" title="1.4 将私钥添加到本地 ssh 代理中"></a>1.4 将私钥添加到本地 ssh 代理中</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-add id_ed25519_bucket_name1</span><br><span class="line">ssh-add id_rsa_github_name2</span><br><span class="line">ssh-add C:\Users\.ssh\id_ed25519_bucket_name1</span><br><span class="line">ssh-add C:\Users\.ssh\id_rsa</span><br><span class="line"><span class="comment">#若提示Could not open a connection to your authentication agent.意味着SSH代理没有正确运行</span></span><br><span class="line"><span class="comment">#a. 运行以下命令来检查SSH代理正在运行，这会启动 SSH 代理并输出相应的环境变量：</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(ssh-agent -s)</span>&quot;</span></span><br><span class="line"><span class="comment">#b. 如果 SSH 代理已经在运行，但仍然出现问题，可能是因为 SSH_AUTH_SOCK 环境变量没有设置正确。你可以手动设置该变量：</span></span><br><span class="line"><span class="built_in">export</span> SSH_AUTH_SOCK=$(find /tmp/ -maxdepth 2 -<span class="built_in">type</span> s -path <span class="string">&quot;/ssh-&quot;</span> -name <span class="string">&quot;agent*&quot;</span> 2&gt;/dev/null | <span class="built_in">head</span> -n 1)</span><br><span class="line"><span class="comment">#c. 如果上述步骤都没有解决问题，尝试重新启动 SSH 代理：</span></span><br><span class="line">ssh-agent -k</span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(ssh-agent -s)</span>&quot;</span></span><br><span class="line"><span class="comment">#最后再次尝试运行ssh-add 命令，应该可以成功添加私钥到 SSH 代理中。</span></span><br><span class="line"><span class="comment">#为了检验本地是否添加成功，可以使用ssh-add -l命令进行查看</span></span><br><span class="line">  <span class="comment">#d. 测试连通性，如果host任务取名得使用 ssh -T git@host</span></span><br><span class="line">ssh -T git@bitbucket</span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(ssh-agent -s)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="1-5-配置全局-本地-name-email"><a href="#1-5-配置全局-本地-name-email" class="headerlink" title="1.5 配置全局&#x2F;本地 name&#x2F;email"></a>1.5 配置全局&#x2F;本地 name&#x2F;email</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#全局</span></span><br><span class="line">git config --global user.name <span class="string">&quot;name1&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#本地</span></span><br><span class="line">git config --<span class="built_in">local</span> user.name <span class="string">&quot;name2&quot;</span></span><br><span class="line">git config --<span class="built_in">local</span> user.email <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#清理全局</span></span><br><span class="line">git config --global --unset-all user.name</span><br><span class="line">git config --global --unset-all user.email</span><br></pre></td></tr></table></figure>

<h3 id="1-6-通过配置文件配置指定目录使用-local-配置"><a href="#1-6-通过配置文件配置指定目录使用-local-配置" class="headerlink" title="1.6 通过配置文件配置指定目录使用 local 配置"></a>1.6 通过配置文件配置指定目录使用 local 配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --show-origin --get user.name</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.找到C:\Users\.gitconfig文件添加</span></span><br><span class="line">  <span class="comment">#配置name1目录</span></span><br><span class="line">  [includeIf <span class="string">&quot;gitdir:D:/name1/&quot;</span>]</span><br><span class="line">  path = D:/name1/.gitconfig</span><br><span class="line">  <span class="comment">#配置name2目录</span></span><br><span class="line">  [includeIf <span class="string">&quot;gitdir:D:/name2/&quot;</span>]</span><br><span class="line">  path = D:/name2/.gitconfig</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.找到D:/name1/.gitconfig内容</span></span><br><span class="line">  [user]</span><br><span class="line">  name = name1</span><br><span class="line">  email = email</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="1-7-拉取代码的时候得用配置的-host"><a href="#1-7-拉取代码的时候得用配置的-host" class="headerlink" title="1.7 拉取代码的时候得用配置的 host"></a>1.7 拉取代码的时候得用配置的 host</h3><p><code>git clone [git@bitbucket.org](mailto:git@bitbucket.org):name1/reponame.git</code> &#x2F;&#x2F;原仓库地址<br><code>git clone [git@name1Bitbucket.org](mailto:git@name1Bitbucket.org):name1/reponame.git</code>  &#x2F;&#x2F; 使用时用别名</p>
<h2 id="2-git-操作"><a href="#2-git-操作" class="headerlink" title="2. git 操作"></a>2. git 操作</h2><h3 id="2-1-合并最近两次-commit"><a href="#2-1-合并最近两次-commit" class="headerlink" title="2.1 合并最近两次 commit"></a>2.1 合并最近两次 commit</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rebase -i HEAD~2</span><br><span class="line">pick</span><br><span class="line">s</span><br><span class="line">f   跳过 commit 修改</span><br><span class="line">git push origin -f 强制推送</span><br><span class="line">只修改 commit 的内容 改成 reword</span><br></pre></td></tr></table></figure>

<h3 id="2-2-版本打上-tag"><a href="#2-2-版本打上-tag" class="headerlink" title="2.2 版本打上 tag"></a>2.2 版本打上 tag</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git tag project-0.8.0 f3bef68</span><br><span class="line">git push origin project-0.8.0</span><br><span class="line">git tag | grep <span class="string">&quot;0.8&quot;</span>   查看已存在的 tag</span><br><span class="line">git tag -d 0.8.0     删除 tag</span><br><span class="line">git push origin :refs/tags/0.8.0   并删除远程仓库一推送的 tag</span><br></pre></td></tr></table></figure>

<h3 id="2-3-服务器上更新最新代码"><a href="#2-3-服务器上更新最新代码" class="headerlink" title="2.3 服务器上更新最新代码"></a>2.3 服务器上更新最新代码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote update</span><br><span class="line">git pull</span><br><span class="line">丢弃服务器上的的所有更改,这将重置仓库到最后一次的提交状态，并且删除所有未跟踪的文件和目录。</span><br><span class="line">git reset --hard</span><br><span class="line">git clean -fdx</span><br><span class="line">git pull origin main</span><br><span class="line">频繁需要这样的操作，您可以编写一个简单的 Git 别名或脚本来自动化这个过程。例如，您可以在 Git 配置中添加一个别名：</span><br><span class="line">git config --global alias.pull-reset <span class="string">&#x27;!git reset --hard HEAD &amp;&amp; git pull&#x27;</span></span><br><span class="line">之后，您可以通过 git pull-reset 命令来执行上述步骤。这个别名会先重置本地更改，然后拉取远程分支的最新内容。</span><br></pre></td></tr></table></figure>

<h3 id="2-4-解决冲突"><a href="#2-4-解决冲突" class="headerlink" title="2.4 解决冲突"></a>2.4 解决冲突</h3><p>1.保存本地修改：如果你希望保留这些本地修改的话，可以先将这些文件备份到其他目录中，然后再进行拉取操作。你可以使用如下命令将这些文件移动到其他目录：<br>mv Dockerfile &#x2F;path&#x2F;to&#x2F;backup&#x2F;location<br>mv docker-compose.yml &#x2F;path&#x2F;to&#x2F;backup&#x2F;location<br>2.丢弃本地修改：如果你不关心本地所做的修改，你可以直接丢弃它们。运行以下命令来清理未跟踪的文件并拉取最新代码：<br>git clean -f<br>git reset –hard HEAD<br>git pull</p>
<h3 id="2-5-替换远程仓库-url"><a href="#2-5-替换远程仓库-url" class="headerlink" title="2.5 替换远程仓库 url"></a>2.5 替换远程仓库 url</h3><p>git remote set-url origin new_url.git<br>git remote -v</p>
<h3 id="2-6-将-public-仓库提交自己-private-仓库并接收-public-仓库更新"><a href="#2-6-将-public-仓库提交自己-private-仓库并接收-public-仓库更新" class="headerlink" title="2.6 将 public 仓库提交自己 private 仓库并接收 public 仓库更新"></a>2.6 将 public 仓库提交自己 private 仓库并接收 public 仓库更新</h3><ol>
<li>本地拉取 public 仓库，改名为 my-full-stack<br>git clone <a href="https://github.com/tiangolo/full-stack-fastapi-template.git">https://github.com/tiangolo/full-stack-fastapi-template.git</a> my-full-stack</li>
<li>设置 private 仓库为新存储库<br>git remote set-url origin <a href="mailto:git@github.com">git@github.com</a>:MyName&#x2F;my-full-stack.git</li>
<li>查看是否关联 git remote -v</li>
<li>将此存储库添加为另一个“远程”，以便稍后获取更新：<br>git remote add upstream <a href="https://github.com/tiangolo/full-stack-fastapi-template.git">https://github.com/tiangolo/full-stack-fastapi-template.git</a></li>
<li>将代码推送到新 private 存储库：<br>git push -u origin master</li>
<li>一些搞好之后，在私有的 my-full-stack 上进行开发更改了模版之后，还希望从原始模板 public 仓库中获取更新，在不合并的情况下拉取最新更改：<br>git pull –no-commit upstream master<br>这将从此模板下载最新的更改而不提交它们，这样您就可以在提交之前检查一切是否正确<br>如果存在冲突，请在编辑器中解决。完成后，提交更改<br>git merge –continue</li>
<li>本地仓库提交到远程仓库<br>git add.<br>git commit -m “commit message”<br>git remote add origin <a href="mailto:git@github.com">git@github.com</a>:MyName&#x2F;repo.git<br>git push -u origin main</li>
</ol>
<h3 id="2-7-分支管理"><a href="#2-7-分支管理" class="headerlink" title="2.7 分支管理"></a>2.7 分支管理</h3><p><code>git branch -a</code> 查看远程分支<br><code>git branch</code> 查看本地分支<br><code>git checkout 分支名</code> 切换分支名<br><code>git checkout -b 分支名</code> 创建并切换到分支<br><code>git branch -d 分支名</code> 删除分支名<br><code>git branch -D 分支名</code> 强行删除分支名<br><code>git merge 分支名</code> 合并某分支到当前分支</p>
<p><img src="/images/gitmerge.png"></p>
<h2 id="3-commit-规范"><a href="#3-commit-规范" class="headerlink" title="3. commit 规范"></a>3. commit 规范</h2><p><img src="/images/gitcommit.png"></p>
]]></content>
      <categories>
        <category>自动化运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
        <tag>Redis</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>并发编程基础知识</title>
    <url>/post/concurrent-programming-basics-1.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>并发编程</category>
      </categories>
      <tags>
        <tag>并发编程</tag>
      </tags>
  </entry>
  <entry>
    <title>docker搭建Grafana监控平台01-安装基础监控服务</title>
    <url>/post/grafana-0-docker.html</url>
    <content><![CDATA[<blockquote>
<p>搭建 grafana 监控平台</p>
<ol>
<li>监控 fastapi 应用程序：grafana+prometheus+grafana+loki+promtail+fastapi</li>
<li>监控 jmeter 压测数据：grafana+prometheus+influxdb+jmeter</li>
<li>监控 mysql 数据库：grafana+prometheus+mysqld-exporter</li>
<li>监控 宿主机 性能： grafana+prometheus+node-exporter</li>
</ol>
</blockquote>
<h1 id="1-新建目录"><a href="#1-新建目录" class="headerlink" title="1.新建目录"></a>1.新建目录</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> 65534:65534 ./prometheus.yml</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 644 ./prometheus.yml</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 644 ./promtail-config.yml</span><br></pre></td></tr></table></figure>

<h1 id="2-新建-docker-compose-yml"><a href="#2-新建-docker-compose-yml" class="headerlink" title="2.新建 docker-compose.yml"></a>2.新建 docker-compose.yml</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">monitor:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">monitor</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">grafana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/grafana:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">grafana</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">monitor</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3000:3000&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">grafana_data:/var/lib/grafana</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GF_PATHS_PROVISIONING=/etc/grafana/provisioning</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GF_AUTH_ANONYMOUS_ENABLED=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GF_AUTH_ANONYMOUS_ORG_ROLE=Admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GF_SECURITY_ADMIN_PASSWORD=****</span></span><br><span class="line">    <span class="attr">entrypoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sh</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">-euc</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">|</span></span><br><span class="line"><span class="string">        mkdir -p /etc/grafana/provisioning/datasources</span></span><br><span class="line"><span class="string">        cat &lt;&lt;EOF &gt; /etc/grafana/provisioning/datasources/ds.yaml</span></span><br><span class="line"><span class="string">        apiVersion: 1</span></span><br><span class="line"><span class="string">        datasources:</span></span><br><span class="line"><span class="string">        - name: Loki</span></span><br><span class="line"><span class="string">          type: loki</span></span><br><span class="line"><span class="string">          access: proxy</span></span><br><span class="line"><span class="string">          orgId: 1</span></span><br><span class="line"><span class="string">          url: http://loki:3100</span></span><br><span class="line"><span class="string">          basicAuth: false</span></span><br><span class="line"><span class="string">          isDefault: true</span></span><br><span class="line"><span class="string">          version: 1</span></span><br><span class="line"><span class="string">          editable: false</span></span><br><span class="line"><span class="string">        EOF</span></span><br><span class="line"><span class="string">        /run.sh</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="attr">prometheus:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/prometheus:v2.54.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">monitor</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9090:9090&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">prometheus_data:/etc/prometheus</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus.yml:/etc/prometheus/prometheus.yml</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">loki:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/loki:2.9.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">loki</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">monitor</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3100:3100&quot;</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-config.file=/etc/loki/local-config.yaml</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">promtail:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/promtail:2.9.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">promtail</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">monitor</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-config.file=/etc/promtail/promtail-config.yml</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./promtail-config.yml:/etc/promtail/promtail-config.yml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/log/qblingserver:/var/log/qblingserver</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">node-exporter:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/node-exporter:v1.8.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">node-exporter</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">node-exporter</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">monitor</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9100:9100&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mysqld-exporter:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/mysqld-exporter:v0.14.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysqld-exporter</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">monitor</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATA_SOURCE_NAME=root:rootroot@tcp(my_mysql:3306)/</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9104:9104&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">alertmanager:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/alertmanager:v0.25.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">alertmanager</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">monitor</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9093:9093&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./alertmanager.yaml:/etc/alertmanager/alertmanager.yaml</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">influxdb:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">influxdb:2.6</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">influxdb</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">monitor</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8086:8086&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOCKER_INFLUXDB_INIT_MODE=setup</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOCKER_INFLUXDB_INIT_USERNAME=admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOCKER_INFLUXDB_INIT_PASSWORD=********</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOCKER_INFLUXDB_INIT_ORG=my-org</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOCKER_INFLUXDB_INIT_BUCKET=jmeter</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">influxdb_data:/var/lib/influxdb</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">grafana_data:</span></span><br><span class="line">  <span class="attr">prometheus_data:</span></span><br><span class="line">  <span class="attr">influxdb_data:</span></span><br></pre></td></tr></table></figure>

<h1 id="3-新建-prometheus-yml"><a href="#3-新建-prometheus-yml" class="headerlink" title="3.新建 prometheus.yml"></a>3.新建 prometheus.yml</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">15s</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span></span><br><span class="line"></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&quot;prometheus:9090&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;loki&quot;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&quot;loki:3100&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;mysql&quot;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&quot;mysqld-exporter:9104&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;node-exporter&quot;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&quot;node-exporter:9100&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;alertmanager&quot;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&quot;alertmanager:9093&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;influxdb&quot;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&quot;influxdb:8086&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;qblingserver&quot;</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">10s</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/metrics</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&quot;qblingserver:8000&quot;</span>]</span><br></pre></td></tr></table></figure>

<h1 id="4-新建-promtail-config-yml"><a href="#4-新建-promtail-config-yml" class="headerlink" title="4.新建 promtail-config.yml"></a>4.新建 promtail-config.yml</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  http_listen_port: 9080</span><br><span class="line">  grpc_listen_port: 0</span><br><span class="line"></span><br><span class="line">positions:</span><br><span class="line">  filename: /tmp/positions.yml</span><br><span class="line"></span><br><span class="line">clients:</span><br><span class="line">  - url: http://loki:3100/loki/api/v1/push</span><br><span class="line"></span><br><span class="line">scrape_configs:</span><br><span class="line">  - job_name: qblingserver</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">          - localhost</span><br><span class="line">        labels:</span><br><span class="line">          job: qblingserver</span><br><span class="line">          __path__: /var/log/qblingserver/*.<span class="built_in">log</span> <span class="comment">#容器运行时挂载日志的路径</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="5-alertmanager-yaml"><a href="#5-alertmanager-yaml" class="headerlink" title="5.alertmanager.yaml"></a>5.alertmanager.yaml</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">resolve_timeout:</span> <span class="string">5m</span></span><br><span class="line"></span><br><span class="line"><span class="attr">route:</span></span><br><span class="line">  <span class="attr">group_by:</span> [<span class="string">&quot;alertname&quot;</span>]</span><br><span class="line">  <span class="attr">group_wait:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">group_interval:</span> <span class="string">5m</span></span><br><span class="line">  <span class="attr">repeat_interval:</span> <span class="string">12h</span></span><br><span class="line">  <span class="attr">receiver:</span> <span class="string">&quot;wechat&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">receivers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;wechat&quot;</span></span><br><span class="line">    <span class="attr">webhook_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">&quot;https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=******&quot;</span></span><br><span class="line">        <span class="attr">http_config:</span></span><br><span class="line">          <span class="attr">headers:</span></span><br><span class="line">            <span class="attr">Content-Type:</span> <span class="string">application/json</span></span><br><span class="line">        <span class="attr">message:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">            &quot;msgtype&quot;: &quot;markdown&quot;,</span></span><br><span class="line"><span class="string">            &quot;markdown&quot;: &#123;</span></span><br><span class="line"><span class="string">              &quot;content&quot;: &quot;### 告警信息\n告警名称: &#123;&#123; .CommonLabels.alertname &#125;&#125;\n状态: &#123;&#123; .Status &#125;&#125;\n主机: &#123;&#123; .CommonLabels.instance &#125;&#125;\n描述: &#123;&#123; .CommonAnnotations.description &#125;&#125;&quot;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br></pre></td></tr></table></figure>

<h1 id="6-关闭-启动容器"><a href="#6-关闭-启动容器" class="headerlink" title="6.关闭&#x2F;启动容器"></a>6.关闭&#x2F;启动容器</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose down</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>

<h1 id="7-配置-grafana-上的数据源"><a href="#7-配置-grafana-上的数据源" class="headerlink" title="7.配置 grafana 上的数据源"></a>7.配置 grafana 上的数据源</h1><ol>
<li><p>新增数据源选择 prometheus，<br>name: prometheus (注：导入 json 文件的时候需要检查是小写开头的 prometheus)<br>url：<a href="http://prometheus:9090/">http://prometheus:9090</a><br>点击 save&amp;test,提示成功</p>
</li>
<li><p>新增数据源选择 Loki，docker-compose.yml 中默认配置好了，检查是否正确加载</p>
<p>grafana： <a href="http://192.168.14.102:3000/">http://192.168.14.102:3000/</a><br>prometheus: <a href="http://192.168.14.102:9090/">http://192.168.14.102:9090/</a><br>influxdb: <a href="http://192.168.14.102:8086/">http://192.168.14.102:8086/</a></p>
</li>
</ol>
<h1 id="8-搭建-mysql-监控面板"><a href="#8-搭建-mysql-监控面板" class="headerlink" title="8.搭建 mysql 监控面板"></a>8.搭建 mysql 监控面板</h1><ol>
<li>导入 grafana labs 中的 dashboard:14057</li>
</ol>
<h1 id="9-搭建-Node-Exporter-监控面板"><a href="#9-搭建-Node-Exporter-监控面板" class="headerlink" title="9.搭建 Node Exporter 监控面板"></a>9.搭建 Node Exporter 监控面板</h1><ol>
<li>导入 grafana labs 中的 dashboard:8919</li>
</ol>
]]></content>
      <categories>
        <category>自动化运维</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>CICD</tag>
      </tags>
  </entry>
  <entry>
    <title>docker搭建Grafana监控平台02-监控Fastapi应用程序</title>
    <url>/post/grafana-1-fastapi.html</url>
    <content><![CDATA[<h1 id="1-背景"><a href="#1-背景" class="headerlink" title="1. 背景"></a>1. 背景</h1><blockquote>
<p>监控 fastapi 应用程序：grafana+prometheus+grafana+loki+promtail+fastapi</p>
</blockquote>
<ol>
<li>FastAPI<br>角色：作为应用程序服务器，处理客户端请求并返回响应。<br>功能：FastAPI 可以通过 Prometheus 的中间件（如 prometheus_fastapi_instrumentator）暴露应用程序性能指标（如请求数量、响应时间、错误率等），以供 Prometheus 抓取。</li>
<li>Prometheus<br>角色：用于收集和存储时间序列数据的监控系统。<br>功能：定期从 FastAPI 应用程序抓取性能指标（通过 HTTP 请求）。<br>使用 PromQL（Prometheus 查询语言）进行数据查询和聚合。<br>保存时间序列数据，以便后续分析。</li>
<li>Grafana<br>角色：用于可视化数据的仪表盘工具。<br>功能：从 Prometheus 中读取性能数据，并通过图表、仪表盘等形式进行展示。<br>提供可视化界面，帮助用户分析 FastAPI 应用的性能指标，识别潜在问题。</li>
<li>Loki<br>角色：用于聚合和存储日志数据的系统。<br>功能：接收来自 FastAPI 的日志信息，通常这些日志包括请求日志、错误日志等。<br>Loki 是按日志流进行索引，因此可以方便地查询和检索特定的日志信息。</li>
<li>Promtail<br>角色：Loki 的日志收集器，负责收集和转发日志数据。<br>功能：从 FastAPI 应用程序的日志文件中读取日志信息。<br>将日志数据格式化并发送到 Loki 进行存储。<br>支持标签和元数据的添加，以便在 Loki 中进行高效查询。</li>
<li>整体工作流程：<br>FastAPI 应用程序处理请求，并记录相关的性能指标和日志。<br>Prometheus 定期从 FastAPI 应用中抓取性能指标，并存储在其数据库中。<br>Promtail 从 FastAPI 的日志文件中读取日志，并将其发送到 Loki 进行存储。<br>Grafana 从 Prometheus 和 Loki 中读取数据，提供可视化的监控界面。<br>用户可以通过 Grafana 仪表盘查看 FastAPI 应用的性能指标和日志，帮助进行故障排查和性能分析。<br>这种架构能够帮助开发和运维团队实时监控 FastAPI 应用的性能，快速发现和解决问题。</li>
</ol>
<h1 id="2-fastapi-应用程序暴露指标数据给-prometheus"><a href="#2-fastapi-应用程序暴露指标数据给-prometheus" class="headerlink" title="2.fastapi 应用程序暴露指标数据给 prometheus"></a>2.fastapi 应用程序暴露指标数据给 prometheus</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> uvicorn</span><br><span class="line"><span class="keyword">from</span> app.main <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> prometheus_fastapi_instrumentator <span class="keyword">import</span> Instrumentator</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    Instrumentator().instrument(app).expose(app, endpoint=<span class="string">&quot;/metrics&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;metrics init success!&quot;</span>)</span><br><span class="line">    uvicorn.run(<span class="string">&quot;app.main:app&quot;</span>, host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">8000</span>)</span><br></pre></td></tr></table></figure>

<h1 id="3-grafana-上导入-fastapi-监控面板"><a href="#3-grafana-上导入-fastapi-监控面板" class="headerlink" title="3.grafana 上导入 fastapi 监控面板"></a>3.grafana 上导入 fastapi 监控面板</h1><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;annotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;builtIn&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;datasource&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;grafana&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;enable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;iconColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(0, 211, 255, 1)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Annotations &amp; Alerts&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;limit&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;matchAny&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dashboard&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dashboard&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;fiscalYearStartMonth&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;gnetId&quot;</span><span class="punctuation">:</span> <span class="number">16110</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;graphTooltip&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;links&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;liveNow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;panels&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thresholds&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;colorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;graphMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;justifyMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;orientation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;percentChangeColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;standard&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reduceOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;lastNotNull&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showPercentChange&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;textMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;wideLayout&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;pluginVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;exemplar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(http_requests_total&#123;job=\&quot;qblingserver\&quot;, handler!=\&quot;/metrics\&quot;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;instant&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;timeFrom&quot;</span><span class="punctuation">:</span> <span class="string">&quot;24h&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;请求总数&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;seriesToRows&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sortBy&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Time&quot;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stat&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;thresholds&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;colorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;graphMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;area&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;justifyMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;orientation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;percentChangeColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;standard&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reduceOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;p75&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/^Value$/&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;limit&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showPercentChange&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;textMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value_and_name&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;wideLayout&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;pluginVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;exemplar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(http_requests_total&#123;job=\&quot;qblingserver\&quot;, handler!=\&quot;/metrics\&quot;, handler!=\&quot;none\&quot;, handler!=\&quot;/openapi.json\&quot;&#125;) by (handler)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;table&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;instant&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;handler&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;timeFrom&quot;</span><span class="punctuation">:</span> <span class="string">&quot;24h&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;请求数量&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sortBy&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Value&quot;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stat&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Request Per Sec 表示每秒钟系统处理的请求数量，常用于衡量系统的吞吐量或流量。&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;palette-classic&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisBorderShow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barWidthFactor&quot;</span><span class="punctuation">:</span> <span class="number">0.6</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;insertNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;reqps&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">7</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;exemplar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rate(http_requests_total&#123;job=\&quot;qblingserver\&quot;&#125;[60m])&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;handler&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;每秒请求率（Request Per Sec）&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Requests Average Duration 表示处理请求的平均耗时，通常用于衡量系统处理请求的速度或性能。&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;continuous-GrYlRd&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fieldMinMax&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;s&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">7</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lcd&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;maxVizHeight&quot;</span><span class="punctuation">:</span> <span class="number">300</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minVizHeight&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minVizWidth&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;namePlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;orientation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;horizontal&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reduceOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;lastNotNull&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showUnfilled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sizing&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;valueMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;color&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;pluginVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;exemplar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http_request_duration_seconds_sum&#123;job=\&quot;qblingserver\&quot;&#125; / http_request_duration_seconds_count&#123;job=\&quot;qblingserver\&quot;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;time_series&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;instant&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;handler&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;请求平均时长（Requests Average Duration）&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bargauge&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;palette-classic&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisBorderShow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisSoftMax&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barWidthFactor&quot;</span><span class="punctuation">:</span> <span class="number">0.6</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;insertNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;area&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0.8</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;percentunit&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">14</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;disableTextWrap&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;exemplar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum by(handler) (increase(http_requests_total&#123;job=\&quot;qblingserver\&quot;, status=~\&quot;2..\&quot;, path!=\&quot;/metrics\&quot;&#125;[30m])) /\nsum by(handler) (increase(http_requests_total&#123;job=\&quot;qblingserver\&quot;, path!=\&quot;/metrics\&quot;&#125;[30m]))&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fullMetaSearch&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;includeNullMetadata&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;path&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;useBackend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;正确率 (Success Rate - 2xx)&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;loki&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;P8E80F9AEF21F6940&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Log Type Rate 表示不同类型日志的生成速率，通常用于监控系统中各类日志（如错误日志、访问日志等）的产生频率&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;palette-classic&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisBorderShow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barWidthFactor&quot;</span><span class="punctuation">:</span> <span class="number">0.6</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bars&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;insertNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;smooth&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;normal&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;byName&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ERROR&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;color&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;fixedColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fixed&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;byName&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INFO&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;color&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;fixedColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fixed&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;byName&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CRITICAL&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;color&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;fixedColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;purple&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fixed&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;__systemRef&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hideSeriesFrom&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;matcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;byNames&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;exclude&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;names&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;Value&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;All except:&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;readOnly&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;custom.hideFrom&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">17</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;pluginVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;loki&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;P8E80F9AEF21F6940&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(rate(&#123;job=\&quot;qblingserver\&quot;&#125; |~ \&quot;INFO|ERROR|WARNING\&quot;[10m])) by (level)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;level&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;queryType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;range&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;step&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;日志类型速率（Log Type Rate）&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;palette-classic&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisBorderShow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisSoftMax&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barWidthFactor&quot;</span><span class="punctuation">:</span> <span class="number">0.6</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;insertNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;area&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0.1</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;percentunit&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">20</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;exemplar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum by(handler) (increase(http_requests_total&#123;job=\&quot;qblingserver\&quot;, status=~\&quot;5..\&quot;, path!=\&quot;/metrics\&quot;&#125;[30m])) /\nsum by(handler) (increase(http_requests_total&#123;job=\&quot;qblingserver\&quot;, path!=\&quot;/metrics\&quot;&#125;[30m]))&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;path&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;错误率 (Error Rate - 5xx)&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;loki&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;P8E80F9AEF21F6940&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">26</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;dedupStrategy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;enableLogDetails&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;prettifyLogMessage&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showCommonLabels&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showLabels&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showTime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sortOrder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Descending&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;wrapLogMessage&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;pluginVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;8.4.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;loki&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;P8E80F9AEF21F6940&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;direction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;backward&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;job=\&quot;qblingserver\&quot;&#125; != \&quot;Request: GET http://qblingserver:8000/metrics\&quot; != \&quot;Response: 200\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;queryType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;range&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;日志&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;logs&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;99%的HTTP请求的响应时间低于某个阈值，帮助你了解系统在高负载下的性能表现。&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;palette-classic&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisBorderShow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barWidthFactor&quot;</span><span class="punctuation">:</span> <span class="number">0.6</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;insertNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;s&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">26</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;pluginVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;exemplar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;histogram_quantile(.99,sum(rate(http_request_duration_seconds_bucket&#123;job=\&quot;qblingserver\&quot;, handler!=\&quot;/metrics\&quot;&#125;[60m])) by(handler, le))&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;handler&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;响应时间 (99th Percentile Response Time)&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;refresh&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10s&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;schemaVersion&quot;</span><span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;templating&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;now-24h&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="string">&quot;now&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timepicker&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timezone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;qblingserver-dashboard&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;qblingserver-dashboard&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;weekStart&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h1 id="4-监控面板"><a href="#4-监控面板" class="headerlink" title="4.监控面板"></a>4.监控面板</h1><p><img src="/images/grafana-fastapi-01.png"><br><img src="/images/grafana-fastapi-02.png"></p>
]]></content>
      <categories>
        <category>自动化运维</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>CICD</tag>
      </tags>
  </entry>
  <entry>
    <title>docker搭建Grafana监控平台03-监控jmeter性能测试</title>
    <url>/post/grafana-2-influxdb-jmeter.html</url>
    <content><![CDATA[<h1 id="1-背景"><a href="#1-背景" class="headerlink" title="1. 背景"></a>1. 背景</h1><blockquote>
<p>监控 jmeter 压测数据：grafana+prometheus+influxdb+jmeter</p>
</blockquote>
<ol>
<li>JMeter<br>角色：性能测试工具，用于模拟并发用户并发送请求，以测试系统的性能和稳定性。<br>功能：生成各种负载（如 HTTP 请求），并测量响应时间、成功率、错误率等性能指标。<br>可以通过监听器（Listeners）收集测试结果。</li>
<li>Prometheus<br>角色：用于收集和存储时间序列数据的监控系统。<br>功能：定期抓取 JMeter 的性能指标，通常是通过 HTTP 接口暴露的。<br>存储时间序列数据，以便后续分析和查询。</li>
<li>InfluxDB<br>角色：高性能时间序列数据库，用于存储和查询时间序列数据。<br>功能：从 JMeter 或 Prometheus 中接收并存储压测结果。<br>提供灵活的查询功能，以便分析 JMeter 测试的性能数据。</li>
<li>Grafana：<br>角色：用于可视化数据的仪表盘工具。<br>功能：从 Prometheus 或 InfluxDB 中读取压测数据，生成可视化仪表盘。<br>允许用户实时监控 JMeter 的测试结果，帮助分析系统性能。</li>
<li>整体工作流程：<br>JMeter 执行性能测试，生成请求并收集性能指标（如响应时间、吞吐量、错误率等）。<br>JMeter 可以使用插件（如 JMeter 的 Prometheus 插件）将测试结果暴露为 Prometheus 可以抓取的指标，或者将数据直接写入 InfluxDB。<br>Prometheus 定期从 JMeter 的 HTTP 接口抓取性能指标并存储在其数据库中，或者从 InfluxDB 查询相关数据。<br>InfluxDB 存储来自 JMeter 的压测数据，为后续分析提供支持。<br>通过适当的查询工具（如 Grafana），用户可以从 Prometheus 或 InfluxDB 中可视化性能数据，以监控和分析 JMeter 的压测结果。</li>
</ol>
<h1 id="2-配置-influxdb"><a href="#2-配置-influxdb" class="headerlink" title="2. 配置 influxdb"></a>2. 配置 influxdb</h1><ol>
<li><p>新建一个 buckets,名称为 jmeter<br><img src="/images/grafana-influxdb-01.png"></p>
</li>
<li><p>新建一个 telegraf,bucket 选择刚才的 jmeter,source 搜索 docker[不影响]</p>
<p><img src="/images/grafana-influxdb-02.png"></p>
</li>
<li><p>新建一个 api tokens,选择 custom api token,buckets 和 telegrafs 按照下图，生成后保存 token,后面配置到 Prometheus 和 jmeter 上<br>（第 2 步 telegraf 创建成功后会自动生成一个 INFLUX_TOKEN,但是权限不够，也不能更改权限，所以需要创建一个自定义的 token,给读写权限）<br><img src="/images/grafana-influxdb-03.png"></p>
</li>
</ol>
<h1 id="3-配置-jmeter"><a href="#3-配置-jmeter" class="headerlink" title="3. 配置 jmeter"></a>3. 配置 jmeter</h1><h2 id="1-使用-jmeter-自带的插件"><a href="#1-使用-jmeter-自带的插件" class="headerlink" title="1. 使用 jmeter 自带的插件"></a>1. 使用 jmeter 自带的插件</h2><ol>
<li><p>选择插件 org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</p>
<p>缺点：不太友好，grafana 没有合适的 dashboard 能展示多个请求，需要自己制作 panel</p>
<p><img src="/images/grafana-jmeter-01.png"><br><img src="/images/grafana-jmeter-02.png"><br>influxdbUrl： <a href="http://192.168.14.102:8086/api/v2/write?org=my-org&bucket=jmeter">http://192.168.14.102:8086/api/v2/write?org=my-org&amp;bucket=jmeter</a><br>application： jmeter_test<br>influxdbToken： ****</p>
<p>配置好运行的时候查看 jmeter log 有没有报错，没有报错，再查看 influxdb 中的 jmeter bucket 有没有收到数据</p>
</li>
<li><p>导入 jmeter dashboard ID 为 19950<br><img src="/images/grafana-jmeter-03.png"></p>
</li>
</ol>
<h2 id="2-安装使用第三方插件-jmeter-plugins-influxdb2-listener-2-4-jar"><a href="#2-安装使用第三方插件-jmeter-plugins-influxdb2-listener-2-4-jar" class="headerlink" title="2. 安装使用第三方插件 jmeter-plugins-influxdb2-listener-2.4.jar"></a>2. 安装使用第三方插件 jmeter-plugins-influxdb2-listener-2.4.jar</h2><ol>
<li><p>下载插件<a href="https://github.com/mderevyankoaqa/jmeter-influxdb2-listener-plugin/releases">jmeter 插件地址</a>，</p>
</li>
<li><p>解压到 jmeter 的 lib&#x2F;ext 目录下: mac brew 安装的 jmeter,位置在&#x2F;usr&#x2F;local&#x2F;opt&#x2F;jmeter&#x2F;libexec&#x2F;lib&#x2F;ext&#x2F;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /Users/tisha/Downloads/jmeter-plugins-influxdb2-listener-2.4.jar /usr/local/opt/jmeter/libexec/lib/ext/</span><br></pre></td></tr></table></figure>
</li>
<li><p>重启 jmeter</p>
</li>
<li><p>配置 jmeter<br>选择 插件 io.github.mderevyankoaqa.jmeter.influxdb2.listener.Influxdb2BackendListenerClient<br><img src="/images/grafana-jmeter-04.png"></p>
</li>
<li><p>搭配 <a href="https://grafana.com/grafana/dashboards/13644-jmeter-load-test-org-md-jmeter-influxdb2-visualizer-influxdb-v2-0-flux/">13644</a>的 dashboard<br><img src="/images/grafana-jmeter-05.png"></p>
</li>
</ol>
<h1 id="4-配置-grafana-dashboard-新增数据源-influxdb"><a href="#4-配置-grafana-dashboard-新增数据源-influxdb" class="headerlink" title="4. 配置 grafana dashboard &amp; 新增数据源 influxdb"></a>4. 配置 grafana dashboard &amp; 新增数据源 influxdb</h1><ol>
<li>新增数据源选择 influxdb<br>name: influxdb<br>query language: flux (influxdb2.X 都得选这个)<br>HTTP URL: <a href="http://influxdb:8086/">http://influxdb:8086</a><br>Auth 打开 basic auth<br>Basic Auth Details: User&#x2F;Password 填写 docker-compose 中 influxdb 设置的<br>Organization：my-org<br>Token：填写 influxdb 配置的 custom api token<br>Default Bucket: jmeter<br>点击 save &amp; test ,显示 datasource is working. 1 buckets found 表示配置成功</li>
</ol>
]]></content>
      <categories>
        <category>自动化运维</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>CICD</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-cli</title>
    <url>/post/hexo-cli.html</url>
    <content><![CDATA[<h1 id="1-安装-hexo-next-简易操作"><a href="#1-安装-hexo-next-简易操作" class="headerlink" title="1.安装 hexo+next 简易操作"></a>1.安装 hexo+next 简易操作</h1><h2 id="1-安装-hexo-next"><a href="#1-安装-hexo-next" class="headerlink" title="1. 安装 hexo+next"></a>1. 安装 hexo+next</h2><blockquote>
<p>themes&#x2F;next 作为子模块加入到项目中来，需要先 fork 下 next 官方的主题，然后 clone 到 hexo 项目中，这样后续推送部署的时候会自动拉取自己的 fork 的仓库</p>
</blockquote>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> hexo-blog</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> hexo-blog</span><br><span class="line"></span><br><span class="line">hexo init</span><br><span class="line"></span><br><span class="line">pnpm install</span><br><span class="line"></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line">git commit -m &#x27;initial hexo-blog&#x27;</span><br><span class="line"></span><br><span class="line">git submodule add git@github.com:TishaQin/my-hexo-theme-next.git themes/next</span><br><span class="line"></span><br><span class="line">cat .gitmodules</span><br><span class="line"></span><br><span class="line">git status</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-配置-hexo-next"><a href="#2-配置-hexo-next" class="headerlink" title="2. 配置 hexo+next"></a>2. 配置 hexo+next</h2><ol>
<li><p><a href="https://pengtech.net/hexo/hexo_advance_apply_next_theme.html?t=1724564732250">配置 next 主题</a></p>
</li>
<li><p><a href="https://analytics.google.com/analytics/web/#/p455834610/reports/reportinghub">开启 google Analytics</a></p>
</li>
<li><p><a href="https://tongji.baidu.com/web5/welcome/login">开启百度统计</a></p>
</li>
<li><p><a href="https://pengtech.net/hexo/blog_seo_optimize.html?t=1724564819227">SEO 搜索引擎优化</a></p>
</li>
<li><p><a href="https://homulilly.com/post/hexo-next-add-code-folding.html">配置 code block</a></p>
</li>
</ol>
<h2 id="3-使用-github-pages-部署博客"><a href="#3-使用-github-pages-部署博客" class="headerlink" title="3. 使用 github pages 部署博客"></a>3. 使用 github pages 部署博客</h2><ol>
<li><a href="https://juejin.cn/post/6943895271751286821">配置 github pages</a></li>
<li>两种部署方式<ol>
<li>本地通过 actions 直接 delpoy 到 github pages 公开仓库，需要设置仓库的 Build and deployment Source<ol>
<li>缺点：本地文章丢失或者换电脑没办法同步文章</li>
</ol>
</li>
<li>本地推送文章到私有仓库的 main 分支，触发构建到 github pages 仓库自动部署，直接访问<a href="https://tishaqin.github.io/">tishaqin.github.io</a><ol>
<li>优点：保留本地源文件不丢失，和换设备后拉取同步</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="4-日常新建文章命令"><a href="#4-日常新建文章命令" class="headerlink" title="4. 日常新建文章命令"></a>4. 日常新建文章命令</h2><ol>
<li>草稿状态发布流程<ol>
<li>创建新建草稿单<br><code>hexo new draft title</code> title 含空格要用引号包起来</li>
<li>本地预览草稿<br><code>hexo g --draft</code><br><code>hexo s --draft</code></li>
<li>草稿完成后发布到本地正式:<br><code>hexo publish draft title</code></li>
</ol>
</li>
<li>新建文章直接发布流程<br><code>hexo new title</code>，默认就是新建到_post 下</li>
<li>本地预览可清空缓存重新构建<br><code>hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</code><br><code>http://localhost:4000</code></li>
<li>本地推送代码到私有仓库时，如果 next 主题有修改，需要先提交子模块，再提交主仓库<ol>
<li>提交子模块<br><code>git submodule foreach &#39;git add . &amp;&amp; git commit -m &quot;Update submodule&quot;&#39;</code></li>
<li>提交主模块<br><code>git add .</code><br><code>git commit -m &quot;Update submodules,add pages&quot;</code></li>
</ol>
</li>
<li>推送构建部署后，如果访问出现空白页，注意查看产物中 index.html 文件是否是 0KB，如果是，需要检查子模块是否已经 push 到远程仓库，如果未 push，需要先 push 子模块</li>
</ol>
<pre class="mermaid">sequenceDiagram
    　　　participant local
    　　　participant private.blog
         participant public.fork.next
         participant public.github.io
         local->public.fork.next: 1.submodule push
         local->private.blog: 2.push
         private.blog-->public.github.io: 3.github actions deploy</pre>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins拉取bucket仓库运行接口自动化</title>
    <url>/post/jenkins-1-bucket.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="52b63bc6033132fbf6b9e5266ca4856b503027356612080784297c94888a84da"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>自动化运维</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>CICD</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins pipeline中使用docker</title>
    <url>/post/jenkins-2-docker-pipeline.html</url>
    <content><![CDATA[<h1 id="一-搭建-Docker-Registry"><a href="#一-搭建-Docker-Registry" class="headerlink" title="一.搭建 Docker Registry"></a>一.搭建 Docker Registry</h1><p>开源的小型私有 Docker 镜像库</p>
<h2 id="1-docker-compose-yml-文件"><a href="#1-docker-compose-yml-文件" class="headerlink" title="1. docker-compose.yml 文件"></a>1. docker-compose.yml 文件</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">registry:2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">my_registry</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5000:5000&quot;</span> <span class="comment"># 将宿主机的5000端口映射到容器的5000端口</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">my_network</span> <span class="comment"># 加入名为my_network的自定义网络</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./registry_data:/var/lib/registry</span> <span class="comment"># 持久化数据，将本地目录映射到容器内部的数据存储目录</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./auth:/auth</span> <span class="comment"># 挂载认证文件目录</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">REGISTRY_AUTH:</span> <span class="string">htpasswd</span> <span class="comment"># 启用 htpasswd 认证方式</span></span><br><span class="line">      <span class="attr">REGISTRY_AUTH_HTPASSWD_REALM:</span> <span class="string">&quot;Registry Realm&quot;</span></span><br><span class="line">      <span class="attr">REGISTRY_AUTH_HTPASSWD_PATH:</span> <span class="string">/auth/htpasswd</span> <span class="comment"># 指定 htpasswd 文件路径</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span> <span class="comment"># 设置失败自动重启，确保容器常驻</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">my_network:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span> <span class="comment"># 使用桥接网络模式</span></span><br></pre></td></tr></table></figure>

<h2 id="2-配置凭证"><a href="#2-配置凭证" class="headerlink" title="2. 配置凭证"></a>2. 配置凭证</h2><ol>
<li>安装:<code> sudo apt install apache2-utils</code></li>
<li>确保 htpasswd 文件路径正确： 确保 Docker Compose 配置中的 REGISTRY_AUTH_HTPASSWD_PATH 指向的文件路径正确。你的配置应该类似于：<code>REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd</code></li>
<li>确认 htpasswd 文件内容： 确保 .&#x2F;auth&#x2F;htpasswd 文件中确实包含用户 username。你可以使用以下命令查看文件内容：<code>cat ./auth/htpasswd</code></li>
<li>检查文件权限： 确保 htpasswd 文件的权限允许 Docker 容器读取。可以尝试更改文件权限：<code>sudo chmod 644 ./auth/htpasswd</code></li>
<li>检查 Docker 组： 确保你的 Docker 进程可以访问 auth 目录和 htpasswd 文件。可以尝试将文件的所有者更改为 root：<code>sudo chown root:root ./auth/htpasswd</code> <code>docker login localhost:5000</code></li>
<li>使用完整的 curl 命令： 当使用 curl 进行测试时，请确保包括用户名和密码： <code>curl -u username:password http://localhost:5000/v2/_catalog</code></li>
<li>如果密码错误,可以尝试创建一个新的用户并测试是否能成功登录：<code>sudo htpasswd -B ./auth/htpasswd newuser</code>,然后尝试使用 newuser 登录。如果可以成功登录，问题可能出在原用户的密码上。</li>
<li>要清空 htpasswd 文件中的所有用户，你可以直接删除该文件，或者通过命令清空内容。以下是两种方法：<br>清空文件内容：<code>cat /dev/null &gt; ./auth/htpasswd</code><br>删除 htpasswd 文件后新建文件再新建用户: <code>rm ./auth/htpasswd</code> <code>touch ./auth/htpasswd</code> <code>sudo htpasswd ./auth/htpasswd username</code></li>
<li>修改凭证后重启下容器</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose down</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>

<ol start="10">
<li>目录结构如下<br><img src="/images/pipeline1.png"></li>
</ol>
<h2 id="2-给镜像打标签"><a href="#2-给镜像打标签" class="headerlink" title="2. 给镜像打标签"></a>2. 给镜像打标签</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker tag &lt;image_id&gt; localhost:5000/&lt;image_name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-推送镜像到私有仓库"><a href="#3-推送镜像到私有仓库" class="headerlink" title="3. 推送镜像到私有仓库"></a>3. 推送镜像到私有仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker push localhost:5000/&lt;image_name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="4-验证推送成功-使用以下命令列出私有-Registry-中的镜像"><a href="#4-验证推送成功-使用以下命令列出私有-Registry-中的镜像" class="headerlink" title="4. 验证推送成功,使用以下命令列出私有 Registry 中的镜像"></a>4. 验证推送成功,使用以下命令列出私有 Registry 中的镜像</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X GET http://127.0.0.1:5000/v2/_catalog</span><br></pre></td></tr></table></figure>

<h2 id="5-从-Registry-拉取镜像"><a href="#5-从-Registry-拉取镜像" class="headerlink" title="5. 从 Registry 拉取镜像"></a>5. 从 Registry 拉取镜像</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull 127.0.0.1:5000/my-app</span><br></pre></td></tr></table></figure>

<p>运行镜像,拉取后，你可以像运行其他镜像一样使用 docker run 运行它：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run localhost:5000/my-app</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="6-配置-HTTP-访问"><a href="#6-配置-HTTP-访问" class="headerlink" title="6. 配置 HTTP 访问"></a>6. 配置 HTTP 访问</h2><p>默认情况下，Docker 对非 HTTPS 的 Registry 访问是受限制的。如果你只是为了测试或在局域网内使用，可以通过修改 Docker 配置来允许 HTTP 访问。</p>
<p>在 Docker 客户端上（想要与私有 Registry 交互的每台机器上），你需要编辑 &#x2F;etc&#x2F;docker&#x2F;daemon.json 文件并添加以下内容：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;127.0.0.1:5000&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>然后重新启动 Docker 服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart docker</span><br></pre></td></tr></table></figure>

<h2 id="7-清理无用的镜像"><a href="#7-清理无用的镜像" class="headerlink" title="7. 清理无用的镜像"></a>7. 清理无用的镜像</h2><p>随着时间推移，Registry 中可能会存储大量镜像，导致磁盘空间占用增加。你可以使用 Docker Registry 提供的垃圾收集功能清理无用的镜像：</p>
<h3 id="1-停止-Registry-容器："><a href="#1-停止-Registry-容器：" class="headerlink" title="1. 停止 Registry 容器："></a>1. 停止 Registry 容器：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop my_registry</span><br></pre></td></tr></table></figure>

<h3 id="2-运行垃圾收集命令："><a href="#2-运行垃圾收集命令：" class="headerlink" title="2. 运行垃圾收集命令："></a>2. 运行垃圾收集命令：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> -v /path/on/host:/var/lib/registry registry:2 \</span><br><span class="line">  bin/registry garbage-collect /etc/docker/registry/config.yml</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-重新启动-Registry-容器："><a href="#3-重新启动-Registry-容器：" class="headerlink" title="3. 重新启动 Registry 容器："></a>3. 重新启动 Registry 容器：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker start my_registry</span><br></pre></td></tr></table></figure>

<p>通过这些步骤，你可以保持私有 Registry 的整洁，并确保其高效运行。</p>
<h1 id="二-搭建-jenkins-pipeline"><a href="#二-搭建-jenkins-pipeline" class="headerlink" title="二. 搭建 jenkins pipeline"></a>二. 搭建 jenkins pipeline</h1><h2 id="1-自己构建含-docker-的-jenkins-镜像-Docker-in-D-有坑不建议使用"><a href="#1-自己构建含-docker-的-jenkins-镜像-Docker-in-D-有坑不建议使用" class="headerlink" title="1. 自己构建含 docker 的 jenkins 镜像 [Docker in D][有坑不建议使用]"></a>1. 自己构建含 docker 的 jenkins 镜像 [Docker in D][有坑不建议使用]</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建Jenkins目录文件夹并设置权限</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /var/jenkins_home</span><br><span class="line"><span class="built_in">chmod</span> 777 -R /var/jenkins_home</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /certs/client</span><br><span class="line"><span class="built_in">chmod</span> 777 -R /certs/client</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取 Docker in Docker 镜像</span></span><br><span class="line">docker image pull docker:dind</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动一个名为 jenkins-docker 的容器，该容器包含 Docker in Docker。</span></span><br><span class="line"><span class="comment"># 该容器与 Jenkins 容器共享网络，并设置了一些环境变量和卷，以便在 Jenkins 中连接到 Docker。</span></span><br><span class="line">docker run --name jenkins-docker --<span class="built_in">rm</span> --detach \</span><br><span class="line">  --privileged --network jenkins --network-alias docker \</span><br><span class="line">  --<span class="built_in">env</span> DOCKER_TLS_CERTDIR=/certs \</span><br><span class="line">  --volume /certs/client:/certs/client \</span><br><span class="line">  --volume /var/jenkins_home:/var/jenkins_home \</span><br><span class="line">  --publish 2376:2376 \</span><br><span class="line">  docker:dind --storage-driver overlay2</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="1-1-先配置新建一个-Dockerfile"><a href="#1-1-先配置新建一个-Dockerfile" class="headerlink" title="1.1. 先配置新建一个 Dockerfile"></a>1.1. 先配置新建一个 Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用了 jenkins/jenkins:lts-jdk17 作为基础镜像</span></span><br><span class="line"><span class="comment"># 这是 Jenkins 官方提供的基于 OpenJDK 17 的 Jenkins 镜像。FROM 关键字用于指定基础镜像。</span></span><br><span class="line"><span class="keyword">FROM</span> jenkins/jenkins:lts-jdk17</span><br><span class="line"><span class="comment"># 切换用户到 root：</span></span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 lsb-release（Debian 系统中的包）和 curl</span></span><br><span class="line"><span class="comment"># 使用 apt-get 更新包列表并安装 lsb-release。</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; apt-get install -y lsb-release curl</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载 Docker GPG 密钥</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> curl -fsSLo /usr/share/keyrings/docker-archive-keyring.asc https://mirrors.aliyun.com/docker-ce/linux/debian/gpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 Docker APT 源：</span></span><br><span class="line"><span class="comment"># 使用阿里云的源，可以根据需要选择其他镜像源</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/usr/share/keyrings/docker-archive-keyring.asc] https://mirrors.aliyun.com/docker-ce/linux/debian <span class="subst">$(lsb_release -cs)</span> stable&quot;</span> &gt; /etc/apt/sources.list.d/docker.list</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Docker CLI</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; apt-get install -y docker-ce-cli</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将用户切换回 jenkins 用户</span></span><br><span class="line"><span class="comment"># USER jenkins</span></span><br><span class="line"><span class="comment"># 安装 Jenkins 插件</span></span><br><span class="line"><span class="comment"># 使用 jenkins-plugin-cli 工具安装 Jenkins 插件，包括 &quot;blueocean&quot; 和 &quot;docker-workflow&quot;</span></span><br><span class="line"><span class="comment"># RUN jenkins-plugin-cli --plugins &quot;blueocean docker-workflow&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="1-2-构建镜像"><a href="#1-2-构建镜像" class="headerlink" title="1.2.构建镜像"></a>1.2.构建镜像</h3><p>镜像名字叫 my_jenkins</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t my_jenkins .</span><br></pre></td></tr></table></figure>

<h3 id="1-3-运行镜像"><a href="#1-3-运行镜像" class="headerlink" title="1.3.运行镜像"></a>1.3.运行镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name my_jenkins --detach \</span><br><span class="line">  --network jenkins --<span class="built_in">env</span> DOCKER_HOST=tcp://docker:2376 \</span><br><span class="line">  --<span class="built_in">env</span> DOCKER_CERT_PATH=/certs/client --<span class="built_in">env</span> DOCKER_TLS_VERIFY=1 \</span><br><span class="line">  --publish 8080:8080 --publish 50000:50000 \</span><br><span class="line">  --volume /var/jenkins_home:/var/jenkins_home \</span><br><span class="line">  --volume /certs/client:/certs/client:ro \</span><br><span class="line">  my_jenkins</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol>
<li>–name my_jenkins：指定容器的名称为 my_jenkins。</li>
<li>–detach：让容器在后台运行（detached 模式）。</li>
<li>–network jenkins: 将容器连接到名为 jenkins 的 Docker 网络。</li>
<li>–env DOCKER_HOST&#x3D;tcp:&#x2F;&#x2F;docker:2376：设置环境变量 DOCKER_HOST，指定 Docker 客户端连接的 Docker 守护进程地址。这里使用了 Docker in Docker 容器的别名 docker 和端口 2376。</li>
<li>–env DOCKER_CERT_PATH&#x3D;&#x2F;certs&#x2F;client：设置环境变量 DOCKER_CERT_PATH，指定 Docker TLS 证书的路径。</li>
<li>–env DOCKER_TLS_VERIFY&#x3D;1：设置环境变量 DOCKER_TLS_VERIFY，启用 Docker 客户端的 TLS 验证。</li>
<li>–publish 8080:8080：将 Jenkins 容器的 8080 端口映射到主机的 8080 端口，使得可以通过主机的 8080 端口访问 Jenkins Web UI。</li>
<li>–publish 50000:50000：将 Jenkins 容器的 50000 端口映射到主机的 50000 端口，这是 Jenkins 使用的 Agent 的通信端口。</li>
<li>–volume .&#x2F;jenkins_home:&#x2F;var&#x2F;jenkins_home：将主机上的 .&#x2F;jenkins_home 目录挂载到容器内部的 &#x2F;var&#x2F;jenkins_home，用于持久化存储 Jenkins 数据和配置。</li>
<li>–volume &#x2F;certs&#x2F;client:&#x2F;certs&#x2F;client:ro：将主机上的 &#x2F;certs&#x2F;client 目录挂载到容器内部的 &#x2F;certs&#x2F;client，用于存储 Docker TLS 证书。:ro 表示挂载为只读，以增加安全性。</li>
<li>my_jenkins：指定要运行的镜像，这里假设你之前使用 docker build 命令构建了一个名为 my_jenkins 的 Jenkins 镜像。</li>
</ol>
<hr>
<p><a href="https://blog.csdn.net/abu935009066/article/details/136450091">https://blog.csdn.net/abu935009066/article/details/136450091</a></p>
<h2 id="2-拉取-jenkins-镜像-启动后去容器里安装-Docker-CLI"><a href="#2-拉取-jenkins-镜像-启动后去容器里安装-Docker-CLI" class="headerlink" title="2.拉取 jenkins 镜像,启动后去容器里安装 Docker CLI"></a>2.拉取 jenkins 镜像,启动后去容器里安装 Docker CLI</h2><h3 id="2-1-启动-Jenkins-容器并绑定-Docker-套接字，以允许-Jenkins-使用宿主机的-Docker："><a href="#2-1-启动-Jenkins-容器并绑定-Docker-套接字，以允许-Jenkins-使用宿主机的-Docker：" class="headerlink" title="2.1. 启动 Jenkins 容器并绑定 Docker 套接字，以允许 Jenkins 使用宿主机的 Docker："></a>2.1. 启动 Jenkins 容器并绑定 Docker 套接字，以允许 Jenkins 使用宿主机的 Docker：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#将宿主机目录 /var/jenkins_home 挂载到容器中，检查并修改宿主机上的目录权限将宿主机目录 /var/jenkins_home 挂载到容器中，检查并修改宿主机上的目录权限</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R 1000:1000 /var/jenkins_home</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 Jenkins 容器</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name my_jenkins \</span><br><span class="line">  -p 8080:8080 \</span><br><span class="line">  -p 50000:50000 \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">  -v /var/jenkins_home:/var/jenkins_home \</span><br><span class="line">  jenkins/jenkins:lts-jdk17</span><br><span class="line"></span><br><span class="line">  <span class="comment">#这条命令通过 -v /var/run/docker.sock:/var/run/docker.sock 将宿主机的 Docker socket 挂载到 Jenkins 容器内。这允许 Jenkins 容器通过 /var/run/docker.sock 直接与宿主机的 Docker 服务进行通信。</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-在容器内执行以下命令，以更新包列表并安装-Docker-CLI："><a href="#2-2-在容器内执行以下命令，以更新包列表并安装-Docker-CLI：" class="headerlink" title="2.2. 在容器内执行以下命令，以更新包列表并安装 Docker CLI："></a>2.2. 在容器内执行以下命令，以更新包列表并安装 Docker CLI：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更新包列表</span></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Docker CLI 所需的依赖项</span></span><br><span class="line">apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 Docker 的官方 GPG 密钥</span></span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 Docker 的官方源</span></span><br><span class="line">add-apt-repository <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/debian <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Docker CLI</span></span><br><span class="line">apt-get install -y docker-ce-cli</span><br><span class="line"></span><br><span class="line"><span class="comment">#验证 Docker CLI 是否安装成功</span></span><br><span class="line">docker --version</span><br><span class="line"></span><br><span class="line"><span class="comment">#退出容器并重启</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">docker restart my_jenkins</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>只包括安装 Docker CLI 所需的必要包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; \</span><br><span class="line">apt-get install -y apt-transport-https ca-certificates curl &amp;&amp; \</span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | <span class="built_in">tee</span> /etc/apt/trusted.gpg.d/docker.gpg &gt; /dev/null &amp;&amp; \</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/debian stable main&quot;</span> &gt; /etc/apt/sources.list.d/docker.list &amp;&amp; \</span><br><span class="line">apt-get update &amp;&amp; \</span><br><span class="line">apt-get install -y docker-ce-cli &amp;&amp; \</span><br><span class="line">docker --version</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-3-为了使-Jenkins-能够使用-Docker-CLI，jenkins-用户必须属于-docker-组"><a href="#2-3-为了使-Jenkins-能够使用-Docker-CLI，jenkins-用户必须属于-docker-组" class="headerlink" title="2.3. 为了使 Jenkins 能够使用 Docker CLI，jenkins 用户必须属于 docker 组"></a>2.3. 为了使 Jenkins 能够使用 Docker CLI，jenkins 用户必须属于 docker 组</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it --user root my_jenkins /bin/bash</span><br><span class="line"><span class="comment">#在容器内部查看 Docker 组 ID,记录 Docker 组的 ID（例如 998）。</span></span><br><span class="line"><span class="built_in">ls</span> -n /var/run/docker.sock</span><br><span class="line"></span><br><span class="line">groupadd -g $(<span class="built_in">stat</span> -c <span class="string">&#x27;%g&#x27;</span> /var/run/docker.sock) docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Docker 组（如果不存在）</span></span><br><span class="line">groupadd -g 998 docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加 Jenkins 用户到 Docker 组</span></span><br><span class="line">groupmod -g 998 docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#确保 Docker 组的 ID 与宿主机上的一致。</span></span><br><span class="line">usermod -aG docker jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看 jenkins 用户是否已经成功加入 docker 组：</span></span><br><span class="line"><span class="built_in">groups</span> jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置jenkins密码</span></span><br><span class="line">passwd jenkins  <span class="comment"># 设置jenkins密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置为连接数据库密码，可以使用 su - jenkins 切换到 jenkins 用户</span></span><br><span class="line">su - jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加完用户后，需重启 Jenkins 容器以使改动生效：</span></span><br><span class="line"><span class="built_in">exit</span>  <span class="comment"># 退出容器</span></span><br><span class="line">docker restart my_jenkins</span><br></pre></td></tr></table></figure>

<h2 id="2-4-提交已经安装-docker-cli-的-jenkins-镜像"><a href="#2-4-提交已经安装-docker-cli-的-jenkins-镜像" class="headerlink" title="2.4.提交已经安装 docker cli 的 jenkins 镜像"></a>2.4.提交已经安装 docker cli 的 jenkins 镜像</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop my_jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment">#将现有容器保存为一个新的镜像,包含当前容器的所有更改（包括已安装的 Docker CLI）</span></span><br><span class="line">docker commit my_jenkins my-jenkins-with-docker-cli</span><br><span class="line"></span><br><span class="line"><span class="comment">#在确认镜像已保存后，可以删除旧的容器：</span></span><br><span class="line">docker <span class="built_in">rm</span> my_jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用新镜像启动一个新的 Jenkins 容器并挂载正确的卷</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name my_jenkins \</span><br><span class="line">  -p 8080:8080 \</span><br><span class="line">  -p 50000:50000 \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">  -v /var/jenkins_home:/var/jenkins_home \</span><br><span class="line">  my-jenkins-with-docker-cli</span><br><span class="line"></span><br><span class="line"><span class="comment">#保留现有容器的环境：新镜像基于之前容器的状态，因此容器中安装的 Docker CLI 和其他修改都会保留。</span></span><br><span class="line"><span class="comment">#挂载正确的卷：确保 /var/jenkins_home 目录正确挂载，实现持久化数据存储。</span></span><br></pre></td></tr></table></figure>

<h2 id="2-5-配置-jenkins"><a href="#2-5-配置-jenkins" class="headerlink" title="2.5 配置 jenkins"></a>2.5 配置 jenkins</h2><ol>
<li>安装插件 github plugin&#x2F;docker pipeline plugin</li>
<li>配置凭证 github-credentials-id【jenkins 容器内部 ssh：私钥放 jenkins 中，公钥放 github-ssh 中】 ，</li>
<li>配置凭证 registry-url 以及 registry-credentials-id【登录 register 用户名和密码】。以及配置 宿主机 docker 配置项中 registry-url</li>
<li>配置 github webhook，jenkins 容器内部监听 8080 端口，jenkins 配置 webhook 地址为 <a href="http://jenkinsip:8080/github-webhook/">http://jenkinsip:8080/github-webhook/</a></li>
<li>新建一个 pipeline 任务，<br>选择【构建触发器】 GitHub hook trigger for GITScm polling<br>选择【定义】pipeline script from SCM<br>指定 master 分支</li>
</ol>
]]></content>
      <categories>
        <category>自动化运维</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>CICD</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins pipeline自动构建部署Fastapi服务</title>
    <url>/post/jenkins-3-fastapi.html</url>
    <content><![CDATA[<h1 id="一-DB-服务"><a href="#一-DB-服务" class="headerlink" title="一. DB 服务"></a>一. DB 服务</h1><h2 id="1-docker-compose-yml，一次启动多个服务"><a href="#1-docker-compose-yml，一次启动多个服务" class="headerlink" title="1.docker-compose.yml，一次启动多个服务"></a>1.docker-compose.yml，一次启动多个服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#先要配置持久化数据目录权限</span></span><br><span class="line"><span class="comment">#1.创建挂载目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ./store/mysql/data</span><br><span class="line"><span class="built_in">mkdir</span> -p ./store/mysql/log</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.修改目录拥有者</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R $(<span class="built_in">whoami</span>):$(<span class="built_in">whoami</span>) ./store/mysql/data</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R $(<span class="built_in">whoami</span>):$(<span class="built_in">whoami</span>) ./store/mysql/log</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.修改目录权限</span></span><br><span class="line"><span class="built_in">chmod</span> -R 777 ./store/mysql/data</span><br><span class="line"><span class="built_in">chmod</span> -R 777 ./store/mysql/log</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">bitnami/mysql:8.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">my_mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">****</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./store/mysql/data:/bitnami/mysql/data&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./store/mysql/log:/bitnami/mysql/log&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">network</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">bitnami/redis:7.4</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">my_redis</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ALLOW_EMPTY_PASSWORD=yes</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;6379:6379&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./store/redis/data:/bitnami/redis/data&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./store/redis/log:/bitnami/redis/log&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">network</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mongodb:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">bitnami/mongodb:7.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">my_mongodb</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;27017:27017&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./store/mongodb/data:/bitnami/mongodb/data&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./store/mongodb/log:/bitnami/mongodb/log&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">network</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">network:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span> <span class="comment"># 使用默认的 bridge 网络类型</span></span><br></pre></td></tr></table></figure>

<h2 id="2-docker-run-启动单个服务"><a href="#2-docker-run-启动单个服务" class="headerlink" title="2.docker run 启动单个服务"></a>2.docker run 启动单个服务</h2><p>目录下启动，持久化数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动 MySQL 容器</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name my_mysql \</span><br><span class="line">  --network monitor \</span><br><span class="line">  --restart always \</span><br><span class="line">  -e MYSQL_ROOT_PASSWORD=**** \</span><br><span class="line">  -p 3306:3306 \</span><br><span class="line">  -v ./store/mysql/data:/bitnami/mysql/data \</span><br><span class="line">  -v ./store/mysql/log:/bitnami/mysql/log \</span><br><span class="line">  bitnami/mysql:8.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 Redis 容器</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name my_redis \</span><br><span class="line">  --restart always \</span><br><span class="line">  --network monitor \</span><br><span class="line">  -e ALLOW_EMPTY_PASSWORD=<span class="built_in">yes</span> \</span><br><span class="line">  -e REDIS_PASSWORD=rootroot \</span><br><span class="line">  -e REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL \</span><br><span class="line">  -p 6379:6379 \</span><br><span class="line">  -v ./store/redis/data:/bitnami/redis/data \</span><br><span class="line">  -v ./store/redis/log:/bitnami/redis/log \</span><br><span class="line">  bitnami/redis:7.4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 MongoDB 容器</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name my_mongodb \</span><br><span class="line">  --network monitor \</span><br><span class="line">  --restart always \</span><br><span class="line">  -p 27017:27017 \</span><br><span class="line">  -v ./store/mongodb/data:/bitnami/mongodb/data \</span><br><span class="line">  -v ./store/mongodb/log:/bitnami/mongodb/log \</span><br><span class="line">  bitnami/mongodb:7.0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="二-Docker"><a href="#二-Docker" class="headerlink" title="二.Docker"></a>二.Docker</h1><h2 id="1-配置-docker"><a href="#1-配置-docker" class="headerlink" title="1.配置 docker"></a>1.配置 docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#确保当前用户具有访问 Docker 守护进程的权限。通过将用户添加到 docker 组来授予该权限</span></span><br><span class="line"><span class="built_in">sudo</span> usermod -aG docker tisha</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启 Docker 守护进程</span></span><br><span class="line"><span class="built_in">sudo</span> service docker restart/start</span><br><span class="line"><span class="built_in">sudo</span> service docker status</span><br><span class="line"><span class="built_in">sudo</span> service daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment">#要将所有权分配给 Docker Unix 套接字，可以使用 chown 命令。该命令应以 root 用户或具有超级用户权限的用户身份执行。</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> root /var/run/docker.sock</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行 sudo update-alternatives --config iptables</span></span><br><span class="line">输入 1 选择 iptables-legacy</span><br><span class="line">现在运行 <span class="built_in">sudo</span> service docker start，Docker 将按预期启动！</span><br></pre></td></tr></table></figure>

<h2 id="2-docker-使用"><a href="#2-docker-使用" class="headerlink" title="2.docker 使用"></a>2.docker 使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入 mysql</span></span><br><span class="line">docker <span class="built_in">exec</span> -it my_mysql bash</span><br><span class="line">mysql -u root -p</span><br><span class="line">SHOW DATABASES;</span><br><span class="line">CREATE DATABASE fastapi;</span><br><span class="line">USE fastapi;</span><br><span class="line">DESCRIBE fastapi;</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入 python 命令行</span></span><br><span class="line">docker <span class="built_in">exec</span> -it 45789a13b24f python</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改 docker-compose.yml 或者 nginx.conf 文件后，重新启动容器</span></span><br><span class="line">docker-compose up -d --force-recreate</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看 nginx 日志</span></span><br><span class="line">docker <span class="built_in">exec</span> -it nginx <span class="built_in">cat</span> /var/log/nginx/error.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#移除镜像的 tag</span></span><br><span class="line">docker rmi mysql:latest</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前 latest 镜像到底是什么版本</span></span><br><span class="line">docker run --<span class="built_in">rm</span> nginx:latest nginx -v</span><br><span class="line">nginx version: nginx/1.25.4</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改 latest 为指定版本</span></span><br><span class="line">docker run -d -p 80:80 -v /home/tisha/fastapi-server/nginx.conf:/etc/nginx/nginx.conf:ro --name nginx-latest nginx:1.25.4</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除所有镜像</span></span><br><span class="line">docker rmi $(docker images -q)</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除指定镜像</span></span><br><span class="line">docker rmi</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除所有容器</span></span><br><span class="line">docker <span class="built_in">rm</span> $(docker ps -a -q)</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止并删除所有正在运行和已停止的容器</span></span><br><span class="line">docker stop $(docker ps -aq) &amp;&amp; docker <span class="built_in">rm</span> $(docker ps -aq)</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除指定容器</span></span><br><span class="line">docker <span class="built_in">rm</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除所有为 none 的镜像</span></span><br><span class="line">docker images -f <span class="string">&quot;dangling=true&quot;</span> -q | xargs docker rmi</span><br><span class="line"></span><br><span class="line"><span class="comment">#清除 Docker Compose 的缓存。你可以运行以下命令来移除你的服务</span></span><br><span class="line">docker-compose down --rmi all</span><br><span class="line"></span><br><span class="line"><span class="comment">#再次运行你的服务： 重新构建你的镜像并启动你的服务。</span></span><br><span class="line">docker-compose up --build</span><br><span class="line"></span><br><span class="line"><span class="comment">#Dockerfile 位于当前目录下，构建镜像执行以下命令来构建 Docker 镜像。记得在后方加上一个点（.），表示当前目录。同时可以用 -t 标记来给镜像一个易于记忆的名字，比如 &quot;myapp&quot;。</span></span><br><span class="line">docker build --no-cache -t fastapi_app:latest .</span><br><span class="line"></span><br><span class="line"><span class="comment">#构建成功后，你可以使用以下命令来启动一个基于这个镜像的容器：</span></span><br><span class="line">docker run -p 8000:8000 fastapi_app</span><br><span class="line">docker run --name=fastapi_app -p 8000:8000 fastapi_app</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改仓库代码后需要重新构建并重新启动容器</span></span><br><span class="line">docker build -t fastapi_app .</span><br><span class="line">docker stop fastapi_app</span><br><span class="line">docker <span class="built_in">rm</span> fastapi_app</span><br><span class="line">docker run --name=fastapi_app -p 8000:8000 fastapi_app</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看 Docker 的系统日志。</span></span><br><span class="line">journalctl -u docker</span><br></pre></td></tr></table></figure>

<h2 id="3-网络使用"><a href="#3-网络使用" class="headerlink" title="3.网络使用"></a>3.网络使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查容器的详细信息，包括网络配置</span></span><br><span class="line">docker inspect my_jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment">#简化输出，仅显示网络信息</span></span><br><span class="line">docker inspect -f <span class="string">&#x27;&#123;&#123;.NetworkSettings.Networks&#125;&#125;&#x27;</span> my_registry</span><br><span class="line">docker inspect -f <span class="string">&#x27;&#123;&#123;.NetworkSettings.Networks&#125;&#125;&#x27;</span> my_jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment">#清理未使用的网络</span></span><br><span class="line">docker network prune</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除指定网络</span></span><br><span class="line">docker network <span class="built_in">rm</span> my-network</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出容器IP地址</span></span><br><span class="line">docker inspect -f <span class="string">&#x27;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> my_mysql</span><br></pre></td></tr></table></figure>

<h1 id="三-部署应用"><a href="#三-部署应用" class="headerlink" title="三. 部署应用"></a>三. 部署应用</h1><h2 id="1-构建-fastapiserver-镜像文件"><a href="#1-构建-fastapiserver-镜像文件" class="headerlink" title="1.构建 fastapiserver 镜像文件"></a>1.构建 fastapiserver 镜像文件</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 Python 3.11 作为基础镜像</span></span><br><span class="line"><span class="keyword">FROM</span> python:<span class="number">3.11</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装系统依赖</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; apt-get install -y \</span></span><br><span class="line"><span class="language-bash">    build-essential \</span></span><br><span class="line"><span class="language-bash">    default-libmysqlclient-dev \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; <span class="built_in">rm</span> -rf /var/lib/apt/lists/*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制 Poetry 配置文件</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> pyproject.toml poetry.lock* ./</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 pip 并设置国内镜像源</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip install --upgrade pip &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    pip config <span class="built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Poetry，增加超时时间</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip install --no-cache-dir --<span class="built_in">timeout</span>=300 poetry</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 Poetry 安装依赖（禁用虚拟环境），添加重试逻辑</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> poetry config virtualenvs.create <span class="literal">false</span> &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="keyword">for</span> i <span class="keyword">in</span> 1 2 3; <span class="keyword">do</span> poetry install --no-dev --no-interaction &amp;&amp; <span class="built_in">break</span> || <span class="built_in">sleep</span> 5; <span class="keyword">done</span> &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    pip show uvicorn</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制项目文件</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 PYTHONPATH</span></span><br><span class="line"><span class="keyword">ENV</span> PYTHONPATH=<span class="string">&quot;/app&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露应用端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行数据库检查和启动应用</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;python&quot;</span>, <span class="string">&quot;app/run.py&quot;</span>]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-本地-mac-使用-docker-部署服务"><a href="#2-本地-mac-使用-docker-部署服务" class="headerlink" title="2.本地 mac 使用 docker 部署服务"></a>2.本地 mac 使用 docker 部署服务</h2><ol>
<li>部署检查 mysql 服务</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动 mysql 容器</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name my_mysql \</span><br><span class="line">  --network monitor \</span><br><span class="line">  --restart always \</span><br><span class="line">  -e MYSQL_ROOT_PASSWORD=**** \</span><br><span class="line">  -p 3306:3306 \</span><br><span class="line">  -v ./store/mysql/data:/bitnami/mysql/data \</span><br><span class="line">  -v ./store/mysql/log:/bitnami/mysql/log \</span><br><span class="line">  bitnami/mysql:8.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查 my_mysql 容器 容器自动加入 bridge 网络中</span></span><br><span class="line">docker inspect -f <span class="string">&#x27;&#123;&#123;.NetworkSettings.Networks&#125;&#125;&#x27;</span> my_mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#my_mysql容器 IP 地址</span></span><br><span class="line">docker inspect -f <span class="string">&#x27;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> my_mysql</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>部署 fastapiserver 服务</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#打包 fastapiserver 镜像</span></span><br><span class="line">docker build -t fastapiserver:latest .</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动 fastapiserver 容器，连接 mysql 使用容器 IP 地址</span></span><br><span class="line">docker run -d \</span><br><span class="line">    --name fastapiserver \</span><br><span class="line">    --network monitor \</span><br><span class="line">    -p 8000:8000 \</span><br><span class="line">    --env-file .<span class="built_in">env</span> \</span><br><span class="line">    -e DATABASE_URL=mysql+pymysql://****:****@172.17.0.2:3306/fastapi \</span><br><span class="line">    fastapiserver:latest \</span><br><span class="line">    sh -c <span class="string">&quot;alembic upgrade head &amp;&amp; uvicorn app.run:app --host 0.0.0.0 --port 8000&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#检查fastapiserver 容器 容器自动加入 bridge 网络中</span></span><br><span class="line">docker inspect -f <span class="string">&#x27;&#123;&#123;.NetworkSettings.Networks&#125;&#125;&#x27;</span> 检查fastapiserver</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>访问 <a href="http://localhost:8000/redoc">http://localhost:8000/redoc</a></li>
</ol>
<h2 id="3-服务器上部署服务"><a href="#3-服务器上部署服务" class="headerlink" title="3.服务器上部署服务"></a>3.服务器上部署服务</h2><ol>
<li>启动 mysql 容器<br>&#x2F;home&#x2F;tisha&#x2F;db&#x2F;docker-compose.yml 启动 mysql,加入 db_network 网络</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line"> --name my_mysql \</span><br><span class="line"> --network monitor \</span><br><span class="line"> --restart always \</span><br><span class="line"> -e MYSQL_ROOT_PASSWORD=**** \</span><br><span class="line"> -p 3306:3306 \</span><br><span class="line"> -v ./store/mysql/data:/bitnami/mysql/data \</span><br><span class="line"> -v ./store/mysql/log:/bitnami/mysql/log \</span><br><span class="line"> bitnami/mysql:8.0</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>启动 fastapiserver 服务【用于 jenkinsfile 配置】</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line"> --name fastapiserver \</span><br><span class="line"> --network monitor \</span><br><span class="line"> -p 8000:8000 \</span><br><span class="line"> -e DATABASE_URL=mysql+pymysql://****:****@172.17.0.3:3306/fastapi \</span><br><span class="line"> fastapiserver:latest \</span><br><span class="line"> sh -c <span class="string">&quot;alembic upgrade head &amp;&amp; uvicorn app.run:app --host 0.0.0.0 --port 8000&quot;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>访问 <a href="http://ip:8000/redoc">http://IP:8000/redoc</a></li>
</ol>
<h2 id="4-服务器上-CICD，jenkinsfile-配置文件"><a href="#4-服务器上-CICD，jenkinsfile-配置文件" class="headerlink" title="4. 服务器上 CICD，jenkinsfile 配置文件"></a>4. 服务器上 CICD，jenkinsfile 配置文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line"></span><br><span class="line">    environment &#123;</span><br><span class="line">        IMAGE_NAME = <span class="string">&#x27;qblingserver&#x27;</span></span><br><span class="line">        IMAGE_TAG = <span class="string">&#x27;latest&#x27;</span></span><br><span class="line">        REPO_URL = <span class="string">&#x27;git@github.com:TishaQin/qblingServer.git&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;Checkout&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                cleanWs()</span><br><span class="line">                script &#123;</span><br><span class="line">                    // 使用 sshagent 插件注入 SSH 凭证</span><br><span class="line">                    sshagent([<span class="string">&#x27;github-credentials-id&#x27;</span>]) &#123;</span><br><span class="line">                        // 使用 checkout 步骤来克隆仓库</span><br><span class="line">                        checkout([<span class="variable">$class</span>: <span class="string">&#x27;GitSCM&#x27;</span>,</span><br><span class="line">                            branches: [[name: <span class="string">&#x27;*/master&#x27;</span>]],</span><br><span class="line">                            userRemoteConfigs: [[url: <span class="string">&quot;<span class="variable">$&#123;REPO_URL&#125;</span>&quot;</span>]]</span><br><span class="line">                        ])</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(<span class="string">&#x27;Stop and Remove Existing Container&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script &#123;</span><br><span class="line">                    def containerExists = sh(script: <span class="string">&quot;docker ps -q -f name=<span class="variable">$&#123;IMAGE_NAME&#125;</span>&quot;</span>, returnStatus: <span class="literal">true</span>) == 0</span><br><span class="line">                    <span class="keyword">if</span> (containerExists) &#123;</span><br><span class="line">                        sh <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">                        docker stop <span class="variable">$&#123;IMAGE_NAME&#125;</span> || echo &quot;</span>Container <span class="variable">$&#123;IMAGE_NAME&#125;</span> not running.<span class="string">&quot;</span></span><br><span class="line"><span class="string">                        docker rm <span class="variable">$&#123;IMAGE_NAME&#125;</span> || echo &quot;</span>Container <span class="variable">$&#123;IMAGE_NAME&#125;</span> not found.<span class="string">&quot;</span></span><br><span class="line"><span class="string">                        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">&quot;No existing container found: <span class="variable">$&#123;IMAGE_NAME&#125;</span>. Skipping stop and remove.&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(<span class="string">&#x27;Build Docker Image&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script &#123;</span><br><span class="line">                    sh <span class="string">&quot;docker build -t <span class="variable">$&#123;IMAGE_NAME&#125;</span>:<span class="variable">$&#123;IMAGE_TAG&#125;</span> .&quot;</span></span><br><span class="line">                    <span class="built_in">echo</span> <span class="string">&quot;Docker image built successfully.&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(<span class="string">&#x27;Deploy with Docker Run&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script &#123;</span><br><span class="line">                    sh <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">                    docker run -d \\</span></span><br><span class="line"><span class="string">                        --name <span class="variable">$&#123;IMAGE_NAME&#125;</span> \\</span></span><br><span class="line"><span class="string">                        --network monitor \\</span></span><br><span class="line"><span class="string">                        -p 8000:8000 \\</span></span><br><span class="line"><span class="string">                        --env-file .env.prod \\</span></span><br><span class="line"><span class="string">                        -e DATABASE_URL=mysql+pymysql://root:rootroot@my_mysql/qbling \\</span></span><br><span class="line"><span class="string">                        -v /var/log/qblingserver:/app/logs \\</span></span><br><span class="line"><span class="string">                        <span class="variable">$&#123;IMAGE_NAME&#125;</span>:<span class="variable">$&#123;IMAGE_TAG&#125;</span></span></span><br><span class="line"><span class="string">                    &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    post &#123;</span><br><span class="line">        always &#123;</span><br><span class="line">            cleanWs()</span><br><span class="line">            script &#123;</span><br><span class="line">                sh <span class="string">&#x27;docker rmi $(docker images -f &quot;dangling=true&quot; -q) || true&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>自动化运维</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>CICD</tag>
      </tags>
  </entry>
  <entry>
    <title>python虚拟环境</title>
    <url>/post/python-0-venv.html</url>
    <content><![CDATA[<h2 id="poetry-使用"><a href="#poetry-使用" class="headerlink" title="poetry 使用"></a>poetry 使用</h2><h3 id="windows-下安装-poetry"><a href="#windows-下安装-poetry" class="headerlink" title="windows 下安装 poetry"></a>windows 下安装 poetry</h3><ol>
<li>Windows 下 powershell 安装<br>(Invoke-WebRequest -Uri <a href="https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py">https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py</a> -UseBasicParsing).Content | python -</li>
</ol>
<h3 id="poetry-命令使用"><a href="#poetry-命令使用" class="headerlink" title="poetry 命令使用"></a>poetry 命令使用</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">poetry --version</span><br><span class="line">poetry config --list   <span class="comment">#查看poetry配置</span></span><br><span class="line">poetry config virtualenvs.in-project <span class="literal">true</span>   <span class="comment">#设置poetry包缓存的位置/项目虚拟环境的位置/设置虚拟环境生成在项目内</span></span><br><span class="line"></span><br><span class="line">poetry <span class="built_in">env</span> remove python</span><br><span class="line">poetry <span class="built_in">env</span> use python</span><br><span class="line">poetry shell   <span class="comment">#进入虚拟环境</span></span><br><span class="line"></span><br><span class="line">poetry add fastapi 		<span class="comment">#安装包</span></span><br><span class="line">poetry remove flask</span><br><span class="line">poetry lock          <span class="comment">#poetry.lock 相当于 Poetry 的 requirements.txt 。</span></span><br><span class="line">poetry <span class="built_in">export</span> -f requirements.txt -o requirements.txt --without-hashes</span><br><span class="line"><span class="comment">#在执行完 poetry lock 指令后，必须再使用 poetry install 来安装模块。否则就会出现 poetry.lock 和虚拟环境不一致的状况</span></span><br><span class="line">poetry install</span><br><span class="line">poetry install --no-root   <span class="comment">#如果不需要安装项目本身，而只安装项目的依赖，你可以使用 命令来跳过项目本身的安装。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#新增模块至 dev-dependencies</span></span><br><span class="line">poetry add black --group dev</span><br><span class="line"></span><br><span class="line">poetry update</span><br><span class="line"></span><br><span class="line">poetry show</span><br><span class="line"></span><br><span class="line">poetry show --tree</span><br><span class="line"></span><br><span class="line">poetry <span class="built_in">export</span> -f requirements.txt -o requirements.txt --without-hashes --dev</span><br><span class="line"></span><br><span class="line">poetry <span class="built_in">source</span> add tsinghua https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"></span><br><span class="line"><span class="comment">#cmd中通过requirements.txt安装</span></span><br><span class="line"><span class="keyword">for</span> /f %i <span class="keyword">in</span> (requirements.txt) <span class="keyword">do</span> poetry add %i    <span class="comment">#添加requirement.txt中的依赖到poetry中并安装</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="poetry-安装依赖和安装项目的场景区分"><a href="#poetry-安装依赖和安装项目的场景区分" class="headerlink" title="poetry 安装依赖和安装项目的场景区分"></a>poetry 安装依赖和安装项目的场景区分</h3><ol>
<li><p>同时安装项目和项目依赖的场景这通常发生在开发阶段，你在本地环境中运行项目。在这种情况下，你希望安装项目的所有依赖项，同时也希望你的包可用，以便测试和运行项目的代码。Poetry 会创建一个虚拟环境并在其中安装所有依赖，以便你的环境干净且有序，避免混淆和冲突。</p>
</li>
<li><p>只安装项目本身的场景当你将自己的 Python 包或应用（如 qbling）发布到 PyPi 或其他分发渠道时，用户可能只需要安装项目本身。这是由于在你的 pyproject.toml 文件中已经列出了项目的所有依赖，这样用户在安装你的项目时，依赖项会自动安装。</p>
</li>
<li><p>只安装项目依赖的场景在一些使用 Docker 或其他自动化系统的场景中，你可能不希望安装项目本身，只安装项目依赖。这中情况下，你可以使用 poetry install –no-root。这种场景可能包括在 CI&#x2F;CD 管道中运行测试，或者在构建 Docker 镜像时，你可能只希望在镜像中包含一些依赖项，而不将整个项目安装到镜像中。</p>
</li>
</ol>
<h2 id="virtualEnv（支持-python2-和-python3，需要安装包）"><a href="#virtualEnv（支持-python2-和-python3，需要安装包）" class="headerlink" title="virtualEnv（支持 python2 和 python3，需要安装包）"></a><font style="color:rgb(51, 51, 51);">virtualEnv（支持 python2 和 python3，需要安装包）</font></h2><pre><code>    在**Python3.4**之前，[virtualenv](https://so.csdn.net/so/search?q=virtualenv)需要独立手动安装后，方可执行。
</code></pre>
<p>完整的创建新虚拟环境并指定用什么版本和放在什么位置的命令如下：</p>
<p><strong><font style="color:#E8323C;">virtualenv –p c:\Python27\Python2.exe d:\Python_virtualenvs\for_django</font></strong></p>
<p>-p： 指定你要虚拟的 Python 版本，这里选择了本地的 python2.7</p>
<p>d:\virtualenvs\for_django：表明在该目录下，建立一个叫做 for_django 的虚拟环境，这样的命名方式，让你一眼就能看出这个虚拟环境是为谁建立的。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install virtualenv  # 使用自己对应安装的pip版本</span><br><span class="line">virtualenv  myenv  #当前目录下，创建一个独立的Python运行环境: myenv（若不在当前目录下，就要指定python的版本和目录，用上-p参数）</span><br><span class="line"></span><br><span class="line">myenv\Scripts\activate.bat #Windows当前目录的进入myenv\Script，激活虚拟环境</span><br><span class="line">source myenv/bin/activate #Linux激活虚拟环境</span><br><span class="line">deactivate #命令退出当前的myenv环境</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install virtualenvwrapper-win #win环境下安装virtualenv包管理，管理多个虚拟环境</span><br><span class="line">pip install virtualenvwrapper #linux环境下安装virtualenv包管理</span><br><span class="line">mkvirtualenv myenv #创建一个独立的Python运行环境: myenv（自动将myenv环境安装在C:\Users\Administrator\Envs\盘下，安装完成自动进入myenv的虚拟环境）</span><br><span class="line">deactivate #命令退出当前的myenv环境</span><br><span class="line">workon #查看当前下有多少个虚拟环境</span><br><span class="line">workon myenv #进入某个虚拟环境</span><br><span class="line">pip list / pip install /pip uninstall #在虚拟环境中安装和卸载包</span><br></pre></td></tr></table></figure>

<blockquote>
<p><font style="color:rgb(51, 51, 51);">virtualenv 虚拟环境配合 pip 的 freeze 功能，可以一次性快捷的将整个环境下的第三方模块全部记录下来： </font><font style="color:rgb(51, 51, 51);background-color:rgb(243, 244, 244);">pip freeze &gt; d:requirements.txt</font></p>
<p><font style="color:rgb(51, 51, 51);">对应的，也可以用它一次性通过在别的机器上或虚拟环境里，将文件里列出的第三方库安装起来。只需要使用命令：</font><font style="color:rgb(51, 51, 51);background-color:rgb(243, 244, 244);">pip install -r requirements.txt</font></p>
<p>使用如下命令根据导出结果下载相关包及依赖</p>
</blockquote>
<pre><code>命令格式：pip3 download -d [保存目录] -r [导出结果文件]
</code></pre>
<p><font style="color:rgb(51, 51, 51);background-color:rgb(243, 244, 244);"> pip3 download -d .\ -r requirements.txt</font></p>
<blockquote>
</blockquote>
<h2 id="venv-Python-从-3-3-版本开始，自带了一个虚拟环境-venv。"><a href="#venv-Python-从-3-3-版本开始，自带了一个虚拟环境-venv。" class="headerlink" title=" venv (Python 从 3.3 版本开始，自带了一个虚拟环境 venv。)"></a><font style="color:rgb(51, 51, 51);"> venv (Python 从 3.3 版本开始，自带了一个虚拟环境 venv。)</font></h2><p><font style="color:rgb(51, 51, 51);">它的很多操作都和 virtualenv 类似，但是两者运行机制不同。因为是从 3.3 版本开始自带的，这个工具也仅仅支持 python 3.3 和以后版本。所以，要在 python2 上使用虚拟环境，依然要利用 virtualenv 。</font></p>
<ol>
<li><font style="color:rgb(51, 51, 51);">venv 安装</font></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Windows 中venv已经以标准库的形式存在，不用再单独安装</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Linux</span></span><br><span class="line">sudo apt-get install python3-venv  # 如有不同版本的Python3,可指定具体版本venv：python3.5-venv</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><font style="color:rgb(51, 51, 51);">在当前目录创建一个独立的 Python 运行环境: myenv</font></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Windows</span></span><br><span class="line">py -3 -m venv myenv</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Linux</span></span><br><span class="line">python3 -m venv myenv</span><br><span class="line">虚拟运行环境、安装第三方包、运行程序及退出虚拟环境等操作均与 virtualenv 相同</span><br></pre></td></tr></table></figure>

<blockquote>
<p><font style="color:rgb(51, 51, 51);">venv 环境下安装第三方报错超时,先执行设置超时时间，再重新安装包</font><strong><font style="color:rgb(51, 51, 51);background-color:rgb(243, 244, 244);">pip –default-timeout&#x3D;100 install -U Pillow</font></strong></p>
</blockquote>
<p>python -m pip install –upgrade –force-reinstall pip</p>
]]></content>
      <categories>
        <category>Python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python标准库</title>
    <url>/post/python-1-lib.html</url>
    <content><![CDATA[<p><img src="/images/pythonlib.png"></p>
<h1 id="日志的结构："><a href="#日志的结构：" class="headerlink" title="日志的结构："></a>日志的结构：</h1><p>日志记录器，日志格式器，日志等级，日志筛选器，日志处理器（流处理器，网络处理器，文件处理器）</p>
<p>需要记录测试执行过程 —–时间，对象，参数，结果等</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="comment">#自定义一个status字段，日志记录时要传入</span></span><br><span class="line">LOG_FORMATTER = (<span class="string">&#x27;%(asctime)s - %(name)s - %(levelname)s - %(status)s - %(message)s&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;%H:%M:%S&#x27;</span>)</span><br><span class="line">LOG_NAME = <span class="string">r&#x27;demo_log&#x27;</span></span><br><span class="line">LOG_FILE = <span class="string">r&#x27;./demo.log&#x27;</span></span><br><span class="line">LOG_LEVEL = logging.DEBUG</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">creat_logger</span>(<span class="params">log_name: <span class="built_in">str</span> = LOG_NAME,</span></span><br><span class="line"><span class="params">                 log_file: <span class="built_in">str</span> = LOG_FILE,</span></span><br><span class="line"><span class="params">                 log_level: <span class="built_in">int</span> = LOG_LEVEL,</span></span><br><span class="line"><span class="params">                 log_formatter: <span class="built_in">tuple</span> = LOG_FORMATTER</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    日志配置和生成器</span></span><br><span class="line"><span class="string">    :param log_name:日志名称</span></span><br><span class="line"><span class="string">    :param log_file:日志文件的路径</span></span><br><span class="line"><span class="string">    :param log_level:日志等级 DEBUG INFO WARING error critical</span></span><br><span class="line"><span class="string">    :param log_formatter:日志的格式</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 1、 定义日志的输出格式</span></span><br><span class="line">    formatter = logging.Formatter(*log_formatter)</span><br><span class="line">    <span class="comment"># 2，定义日志的文件处理器，需要传入文件路径</span></span><br><span class="line">    handler = logging.FileHandler(log_file)</span><br><span class="line">    <span class="built_in">print</span>(handler.baseFilename)</span><br><span class="line">    <span class="comment"># 3.将日志格式添加到日志处理器中</span></span><br><span class="line">    handler.setFormatter(formatter)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4，获取一个日志记录器，传入日志记录器的名称</span></span><br><span class="line">    logger = logging.getLogger(log_name)</span><br><span class="line">    <span class="comment"># 5.设置日志等级</span></span><br><span class="line">    logger.setLevel(log_level)</span><br><span class="line">    <span class="comment"># 6.将处理器和记录器关联</span></span><br><span class="line">    logger.addHandler(handler)</span><br><span class="line">    <span class="comment"># 7.将记录器返回</span></span><br><span class="line">    <span class="keyword">return</span> logger</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">log = creat_logger()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="手动在指定位置记录（缺点：需要修改内部代码去手动添加日志记录）"><a href="#手动在指定位置记录（缺点：需要修改内部代码去手动添加日志记录）" class="headerlink" title="手动在指定位置记录（缺点：需要修改内部代码去手动添加日志记录）"></a>手动在指定位置记录（缺点：需要修改内部代码去手动添加日志记录）</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> chapter6.logs <span class="keyword">import</span> log</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="comment">#函数中进行日志的记录</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func_a</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">    log.debug(func_a.__name__, extra=&#123;<span class="string">&#x27;status&#x27;</span>: <span class="string">&#x27;running&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> / args.__len__(), <span class="number">1</span> / kwargs.__len__()</span><br><span class="line"></span><br><span class="line"><span class="comment"># func_a(1, name=&#x27;json&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#测试类和测试方法中记录日志</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestA</span>(unittest.TestCase):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_a</span>(<span class="params">self</span>):</span><br><span class="line">        log.debug(<span class="variable language_">self</span>.test_a.__name__, extra=&#123;<span class="string">&#x27;status&#x27;</span>: <span class="string">&#x27;running&#x27;</span>&#125;)</span><br><span class="line">        <span class="keyword">assert</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_b</span>(<span class="params">self</span>):</span><br><span class="line">        log.debug(<span class="variable language_">self</span>.test_b.__name__, extra=&#123;<span class="string">&#x27;status&#x27;</span>: <span class="string">&#x27;running&#x27;</span>&#125;)</span><br><span class="line">        <span class="keyword">assert</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    unittest.main()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="利用好装饰器来记录测试方法和函数的执行日志-动态且灵活的记录"><a href="#利用好装饰器来记录测试方法和函数的执行日志-动态且灵活的记录" class="headerlink" title="利用好装饰器来记录测试方法和函数的执行日志(动态且灵活的记录)"></a>利用好装饰器来记录测试方法和函数的执行日志(动态且灵活的记录)</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"><span class="keyword">from</span> log.logs <span class="keyword">import</span> log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## def logs(func):</span></span><br><span class="line"><span class="comment">#     &quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#     普通日志装饰器</span></span><br><span class="line"><span class="comment">#     :param func:</span></span><br><span class="line"><span class="comment">#     :return:</span></span><br><span class="line"><span class="comment">#     &quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#     @wraps(func)</span></span><br><span class="line"><span class="comment">#     def wrap_func(*args, **kwargs):</span></span><br><span class="line"><span class="comment">#         tuple_args = args</span></span><br><span class="line"><span class="comment">#         dict_kwargs = kwargs</span></span><br><span class="line"><span class="comment">#         func(*args, **kwargs)</span></span><br><span class="line"><span class="comment">#         log.debug(</span></span><br><span class="line"><span class="comment">#             f&#x27;&#123;func.__name__&#125;(*args: tuple = *&#123;tuple_args&#125;, **kwargs: dict = **&#123;dict_kwargs&#125;)&#x27;,</span></span><br><span class="line"><span class="comment">#             extra=&#123;&#x27;status&#x27;: &#x27;PASS&#x27;&#125;</span></span><br><span class="line"><span class="comment">#         )</span></span><br><span class="line"><span class="comment">#     return wrap_func</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logs</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    兼容日志装饰器</span></span><br><span class="line"><span class="string">    :param func:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrap_func</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        tuple_args = args</span><br><span class="line">        dict_kwargs = kwargs</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            func(*args, **kwargs)</span><br><span class="line">            log.debug(</span><br><span class="line">                <span class="string">f&#x27;<span class="subst">&#123;func.__name__&#125;</span>(*args: tuple = *<span class="subst">&#123;tuple_args&#125;</span>, **kwargs: dict = **<span class="subst">&#123;dict_kwargs&#125;</span>)&#x27;</span>,</span><br><span class="line">                extra=&#123;<span class="string">&#x27;status&#x27;</span>: <span class="string">&#x27;PASS&#x27;</span>&#125;</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            log.exception(</span><br><span class="line">                <span class="string">f&#x27;<span class="subst">&#123;func.__name__&#125;</span>(*args: tuple = *<span class="subst">&#123;tuple_args&#125;</span>, **kwargs: dict = **<span class="subst">&#123;dict_kwargs&#125;</span>)&#x27;</span>,</span><br><span class="line">                exc_info=<span class="literal">True</span>,</span><br><span class="line">                extra=&#123;<span class="string">&#x27;status&#x27;</span>: <span class="string">&#x27;FAIL&#x27;</span>&#125;</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">raise</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wrap_func</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> logs_decorators <span class="keyword">import</span> logs</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@logs</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func_a</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> / args.__len__(), <span class="number">1</span> / kwargs.__len__()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># func_a(1, name=&#x27;json&#x27;)</span></span><br><span class="line"><span class="comment"># func_a()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestA</span>(unittest.TestCase):</span><br><span class="line"></span><br><span class="line"><span class="meta">    @logs</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_a</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">assert</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @logs</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_b</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">assert</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    unittest.main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="其他详解"><a href="#其他详解" class="headerlink" title="其他详解"></a>其他详解</h2><p><a href="https://five3.blog.csdn.net/article/details/88770676">Python 日志模块 logging 使用详解</a></p>
<h1 id="decorator-装饰器用法"><a href="#decorator-装饰器用法" class="headerlink" title="decorator 装饰器用法"></a>decorator 装饰器用法</h1><ol>
<li>decorator，以装饰符号@进行标识，类似于 Java 的注解，主要作用是保证对象封闭的条件下实现该对象的特定操作（一般不修改对象的内部逻辑，而是通过对象属性进行操作）</li>
<li>装饰器按照实现的对象类型可以分为函数装饰器和类装饰器</li>
<li>装饰器还可以分为有参和无参两种类型</li>
<li>计时，鉴权，路由，日志记录(详见日志模块)，依赖处理，异常捕捉</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 无参函数装饰器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func_2</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">    @wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrap_func</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;11&#x27;</span> + func.__name__)</span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;22&#x27;</span> + func.__name__)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wrap_func</span><br><span class="line"></span><br><span class="line"><span class="comment"># 有参函数装饰器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func_3</span>(<span class="params">arg=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner_func</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">        @wraps(<span class="params">func</span>)</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">wrap_func</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;函数执行前的操作&#x27;</span>+arg) <span class="keyword">if</span> arg <span class="keyword">else</span> <span class="string">&#x27;...&#x27;</span></span><br><span class="line">            func(*args, **kwargs)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;函数执行后&#x27;</span> + func.__name__)</span><br><span class="line">        <span class="keyword">return</span> wrap_func</span><br><span class="line">    <span class="keyword">return</span> inner_func</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@func_3(<span class="params"><span class="string">&quot;1&quot;</span></span>)</span></span><br><span class="line"><span class="comment"># @func_2</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func_1</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;====&#x27;</span> + func_1.__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># @func_2 = func_2(func_1)  --&gt;wrap_func</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># func_1()-&gt;wrap_func()</span></span><br><span class="line"></span><br><span class="line">func_1()</span><br></pre></td></tr></table></figure>

<h2 id="使用装饰器解决用例依赖的问题"><a href="#使用装饰器解决用例依赖的问题" class="headerlink" title="使用装饰器解决用例依赖的问题"></a>使用装饰器解决用例依赖的问题</h2><p>用例依赖的几种情况：数据依赖（被测系统需要依赖外部系统的数据），步骤（用户的操作是分步骤的），业务（综合数据和步骤的，根据实际公司的业务来决定，一般是执行被测用例前，前面所依赖的业务都要成功执行），unittest 没提供用例依赖的解决方法，侧重于独立的用例，手动编写一个装饰器来解决用例依赖，简化业务过程中冗余的操作，如果所依赖的用例失败，那么后面的用例直接被跳过。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DependencyError</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__int__</span>(<span class="params">self, _<span class="built_in">type</span>=<span class="number">0</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>._<span class="built_in">type</span> = _<span class="built_in">type</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>._<span class="built_in">type</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&#x27;Dependency name of test is required!&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>._<span class="built_in">type</span> == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&#x27;Dependency name of test can not the case self!&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">depend</span>(<span class="params"><span class="keyword">case</span>=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">    <span class="comment"># 所要依赖的测试用例不能为空</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">case</span>:</span><br><span class="line">        <span class="keyword">raise</span> DependencyError</span><br><span class="line">    <span class="comment"># 将unittest中测试的结果收集，结果有失败，错误，跳过，成功</span></span><br><span class="line">    _mark = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrap_func</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">        @wraps(<span class="params">func</span>)</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">inner_func</span>(<span class="params">self</span>):</span><br><span class="line">            <span class="comment"># 所要依赖的测试用例不能是自己</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">case</span> == func.__name__:</span><br><span class="line">                <span class="keyword">raise</span> DependencyError(<span class="number">1</span>)</span><br><span class="line">            _r = <span class="variable language_">self</span>._outcome.result</span><br><span class="line">            _f, _e, _s = _r.failures, _r.errors, _r.skipped  <span class="comment">#每一个结果集是以列表的方式存储的，列表中的每一个元素是一个元组，元组第一个元素是用例名称。第二个元素是原因</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> (_f <span class="keyword">or</span> _e <span class="keyword">or</span> _s):</span><br><span class="line">                <span class="comment"># 如果三个结果集（列表）都为空，所要依赖的用例肯定是执行通过的，就可以直接执行当前被测用例了</span></span><br><span class="line">                func(<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> _f:</span><br><span class="line">                _mark.extend([fail[<span class="number">0</span>] <span class="keyword">for</span> fail <span class="keyword">in</span> _f])</span><br><span class="line">            <span class="keyword">if</span> _e:</span><br><span class="line">                _mark.extend([error[<span class="number">0</span>] <span class="keyword">for</span> error <span class="keyword">in</span> _e])</span><br><span class="line">            <span class="keyword">if</span> _s:</span><br><span class="line">                _mark.extend([skip[<span class="number">0</span>] <span class="keyword">for</span> skip <span class="keyword">in</span> _s])</span><br><span class="line"></span><br><span class="line">            unittest.skipIf(</span><br><span class="line">                <span class="keyword">case</span> <span class="keyword">in</span> <span class="built_in">str</span>(_mark),</span><br><span class="line">                <span class="string">f&#x27;The pre-depend case :<span class="subst">&#123;<span class="keyword">case</span>&#125;</span> has failed! Skip the specified case!&#x27;</span></span><br><span class="line">            )(func)(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="comment"># 如果case in str(_mark)成立，源码中返回skip(reason)，相当于skip(reason)(func)，跳过func用例</span></span><br><span class="line">        <span class="comment"># 如果case in str(_mark)不成立，源码中返回_id(obj)，return obj函数，相当于return func,所以后面加上(self)，执行func(self)用例</span></span><br><span class="line">        <span class="keyword">return</span> inner_func</span><br><span class="line">    <span class="keyword">return</span> wrap_func</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># @unittest.skipIf(case in str(_mark), &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># def test(self):</span></span><br><span class="line"><span class="comment">#     ...</span></span><br><span class="line"><span class="comment"># 相当于</span></span><br><span class="line"><span class="comment"># unittest.skipIf(case in str(_mark), &#x27;&#x27;)(test)</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 作用于函数或者类上</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> .decorators <span class="keyword">import</span> depend</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestA</span>(unittest.TestCase):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_a</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="variable language_">self</span>.test_a.__name__)</span><br><span class="line">        <span class="keyword">assert</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_b</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="variable language_">self</span>.test_b.__name__)</span><br><span class="line">        <span class="keyword">assert</span> <span class="number">1</span> == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @depend(<span class="params"><span class="string">&#x27;test_d&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_c</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="variable language_">self</span>.test_c.__name__)</span><br><span class="line">        <span class="keyword">assert</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># @depend(&#x27;test_a&#x27;)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestB</span>(unittest.TestCase):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># @depend(&#x27;test_a&#x27;)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_d</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="variable language_">self</span>.test_d.__name__)</span><br><span class="line">        <span class="keyword">assert</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    unittest.main(verbosity=<span class="number">2</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python函数式编程</title>
    <url>/post/python-2-func.html</url>
    <content><![CDATA[<p><img src="/images/pythonfunc.png"></p>
]]></content>
      <categories>
        <category>Python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python collections</title>
    <url>/post/python-3-collections.html</url>
    <content><![CDATA[<p><img src="/images/collections.png"></p>
]]></content>
      <categories>
        <category>Python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python collections.abc</title>
    <url>/post/python-4-collections-abc.html</url>
    <content><![CDATA[<p><img src="/images/collections.abc.png"></p>
]]></content>
      <categories>
        <category>Python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python 多线程</title>
    <url>/post/python-5-thread.html</url>
    <content><![CDATA[<p><img src="/images/pythonthread.png"></p>
]]></content>
      <categories>
        <category>Python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python unittest</title>
    <url>/post/python-6-unittest.html</url>
    <content><![CDATA[<h1 id="unitetst-和-pytest-对比"><a href="#unitetst-和-pytest-对比" class="headerlink" title="unitetst 和 pytest 对比"></a>unitetst 和 pytest 对比</h1><p><img src="/images/python61.png"><br><img src="/images/python62.png"><br><img src="/images/python63.png"></p>
<h3 id="四-写法对比"><a href="#四-写法对比" class="headerlink" title="四 写法对比"></a>四 写法对比</h3><figure class="highlight python"><figcaption><span>unittest</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TestLogin</span>(unittest.TestCase):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setUp</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 前置：访问登录页面</span></span><br><span class="line">        <span class="variable language_">self</span>.driver = webdriver.Chrome()</span><br><span class="line">        <span class="variable language_">self</span>.driver.maximize_window()</span><br><span class="line">        <span class="variable language_">self</span>.driver.get(CD.web_login_url)</span><br><span class="line">        <span class="variable language_">self</span>.lg = LoginPage(<span class="variable language_">self</span>.driver)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tearDown</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment">#后置，关闭浏览器</span></span><br><span class="line">        <span class="variable language_">self</span>.driver.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><figcaption><span>pytest</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># conftest中定义多个fixture，一个fixture可以是另一个fixture的前后置，期间还是用yield隔开前后置</span></span><br><span class="line"><span class="meta">@pytest.fixture(<span class="params">scope=<span class="string">&#x27;class&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">access_web</span>():</span><br><span class="line">    <span class="comment"># 前置条件</span></span><br><span class="line">    <span class="keyword">global</span> driver  <span class="comment">#声明driver为全局变量</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;========所有测试用例之前的，整个测试用例只执行一次=========&quot;</span>)</span><br><span class="line">    driver=webdriver.Chrome()</span><br><span class="line">    driver.maximize_window()</span><br><span class="line">    driver.get(CD.web_login_url)</span><br><span class="line">    <span class="comment"># 实例化LoginPage类</span></span><br><span class="line">    lg=LoginPage(driver)</span><br><span class="line">    <span class="comment"># yield 同时可以返回值(driver,lg)，相当于return，在使用返回值的时候直接用函数名</span></span><br><span class="line">    <span class="keyword">yield</span> (driver,lg)  <span class="comment">#分割线：前面是前置条件、后面是后置条件</span></span><br><span class="line">    <span class="comment"># 后置条件</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;========所有测试用例之后的，整个测试用例只执行一次=========&quot;</span>)</span><br><span class="line">    driver.quit()</span><br><span class="line"></span><br><span class="line"><span class="meta">@pytest.fixture()</span></span><br><span class="line"><span class="comment"># @pytest.fixture()表示函数默认作用域access_web的作用域在函数上，执行测试用例时，每个函数都执行一次</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">refresh_page</span>():</span><br><span class="line">    <span class="keyword">global</span> driver</span><br><span class="line">    <span class="comment"># 前置操作</span></span><br><span class="line">    <span class="keyword">yield</span></span><br><span class="line">    <span class="comment"># 后置操作</span></span><br><span class="line">    driver.refresh()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/images/python64.png"></p>
<h3 id="八-参数化"><a href="#八-参数化" class="headerlink" title="八 参数化"></a>八 参数化</h3><blockquote>
<p>unitetst 参数化</p>
<ol>
<li>引入第三方包 paramunittest，</li>
<li>内置文本参数化的方式 subTest<br>这种有缺点：测试数据只能写在代码中，当数据量过大，不利于维护测试数据</li>
<li>unittests 数据驱动 ddt，引入第三方包 ddt ，@ddt 和@unpack</li>
</ol>
</blockquote>
<figure class="highlight python"><figcaption><span>unittest</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">@ddt</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestLogin</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">#异常测试用例</span></span><br><span class="line"><span class="meta">    @@data(<span class="params">*LD.phone_data</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_login_0_user_wrongFormat</span>(<span class="params">self,data</span>):</span><br><span class="line">        <span class="comment">#前置：访问登录页面</span></span><br><span class="line">        <span class="comment">#步骤：输入用户名、密码、点击</span></span><br><span class="line">        <span class="comment"># 调用login方法</span></span><br><span class="line">        <span class="variable language_">self</span>.lg.login(data[<span class="string">&#x27;user&#x27;</span>],data[<span class="string">&#x27;pwd&#x27;</span>])</span><br><span class="line">        <span class="comment"># 断言：首页当中能否找到“退出”按钮</span></span><br><span class="line">        <span class="comment">#等待10秒</span></span><br><span class="line">        <span class="comment">#找元素 //div[@class=&quot;navbar-account&quot;]</span></span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(<span class="variable language_">self</span>.lg.get_errorMsg_form_loginArea(),data[<span class="string">&#x27;check&#x27;</span>])</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><figcaption><span>pytest</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TestLogin</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">#异常测试用例</span></span><br><span class="line"><span class="meta">    @pytest.mark.parametrize(<span class="params"><span class="string">&quot;data&quot;</span>,LD.phone_data</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_login_0_user_wrongFormat</span>(<span class="params">self,data,access_web</span>):</span><br><span class="line">        <span class="comment">#前置：访问登录页面</span></span><br><span class="line">        <span class="comment">#步骤：输入用户名、密码、点击</span></span><br><span class="line">        <span class="comment"># 调用login方法</span></span><br><span class="line">        access_web[<span class="number">1</span>].login(data[<span class="string">&#x27;user&#x27;</span>],data[<span class="string">&#x27;passwd&#x27;</span>])</span><br><span class="line">        <span class="comment"># 断言：首页当中能否找到“退出”按钮</span></span><br><span class="line">        <span class="comment">#等待10秒</span></span><br><span class="line">        <span class="comment">#找元素 //div[@class=&quot;navbar-account&quot;]</span></span><br><span class="line">        <span class="keyword">assert</span> access_web[<span class="number">1</span>].get_errorMsg_form_loginArea(),data[<span class="string">&#x27;check&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="九-unittest-其他"><a href="#九-unittest-其他" class="headerlink" title="九 unittest 其他"></a>九 unittest 其他</h3><ol>
<li><p>unittest-TestFixture<br>setUp()和 tearDown()是每个测试用例进行时都会执行的测试方法。特殊类方法 setUpClass()，tearDownClass()，在所有测试用例(整体)前后执行。用例的跳过@unittest.skip,skipIf()</p>
</li>
<li><p>unittest 的缺点：<br>2.1 用例依赖的支持较弱，原生写法里面不支持将两个测试方法进行关联，只能将被关联用例重复硬编码写在被测方法中（如果硬是要做原生的用例依赖，测试用例之间参数联动判定跳过，设置一个类属性变量（通常用列表，字典），被依赖的用例执行成功后更改下个测试所有依赖的变量值，下个用例中设定判断条件看是否要跳过此条用例，跳过就是直接 return ）<br>2.2 测试数据不支持文件 IO，自然无法读取外部的配置文件</p>
</li>
<li><p>unittese 测试套件</p>
</li>
</ol>
<figure class="highlight python"><figcaption><span>测试套件使用结合两种html测试报告的输出</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># 测试套件 —— 包含待测的模块、类、测试方testsuite</span></span><br><span class="line"><span class="comment"># 测试加载器 —— 决定测试模块、测试类、测试方法的加载testloader</span></span><br><span class="line"><span class="comment"># 测试运行器 —— 记录测试过程、输出测试结果testrunner</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试结果输出到文本中——文本报告TextTestRunner</span></span><br><span class="line"><span class="comment"># 测试结果输出到网页中——网页报告HTMLTestRunner</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> join, dirname</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入开关</span></span><br><span class="line"><span class="comment"># from chapter4.case import tests</span></span><br><span class="line"><span class="keyword">from</span> setting <span class="keyword">import</span> SUIT_MODULE_1</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> HTMLTestRunner <span class="keyword">import</span> HTMLTestRunner</span><br><span class="line"><span class="keyword">from</span> BeautifulReport <span class="keyword">import</span> BeautifulReport</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义测试用例的目录，用于测试加载器去加载</span></span><br><span class="line">CASE_PATH = join(dirname(__file__), <span class="string">&#x27;./chapter4/case&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试套件初始化，测试加载器初始化（大量测试用执行的时候使用测试加载器）</span></span><br><span class="line">suit = unittest.TestSuite()</span><br><span class="line">loader = unittest.defaultTestLoader</span><br><span class="line"><span class="comment"># loader = unittest.TestLoader()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试加载器发现测试对象</span></span><br><span class="line"><span class="comment"># start_dir起始目录，pattern命名规则，loader.discover递归寻找起始目录下符合命名规则的类和方法</span></span><br><span class="line">test_suit = loader.discover(start_dir=CASE_PATH,pattern=<span class="string">&#x27;module*.py&#x27;</span>)</span><br><span class="line"><span class="comment"># 更灵活的方式，做一个开关决定哪些测试模块执行</span></span><br><span class="line"><span class="comment"># for test in tests:</span></span><br><span class="line"><span class="comment">#     test_suit = loader.discover(start_dir=CASE_PATH, pattern=test)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试对象加入测试套件</span></span><br><span class="line"><span class="comment"># 如果没有测试测试加载器，执行少量的测试用例可以直接使用suite.addTests([demo2.demo2(&#x27;test3&#x27;),demo2.demo2(&#x27;test4&#x27;)])）</span></span><br><span class="line">suit.addTest(test_suit)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试运行器初始化,# 运行测试</span></span><br><span class="line"><span class="comment"># runner = unittest.TextTestRunner(verbosity=2)</span></span><br><span class="line"><span class="comment"># runner.run(suit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果要将测试结果输出测试报告，只需要更改运行器runnner</span></span><br><span class="line"><span class="comment"># with open(&#x27;./report.html&#x27;, &#x27;wb&#x27;) as fp:</span></span><br><span class="line"><span class="comment">#     runner = HTMLTestRunner(fp, verbosity=2)</span></span><br><span class="line"><span class="comment">#     runner.run(suit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用BeautifulReport输出测试报告</span></span><br><span class="line">now = time.strftime(<span class="string">&quot;%Y-%m-%d-%H-%M-%S&quot;</span>, time.localtime(time.time()))</span><br><span class="line">report_title = <span class="string">&quot;测试报告&quot;</span> + now + <span class="string">&#x27;.html&#x27;</span></span><br><span class="line">result = BeautifulReport(suit)</span><br><span class="line">result.report(filename=report_title, report_dir=<span class="string">&quot;F:\\SELENIUMPYTHON\\report&quot;</span>,</span><br><span class="line">                  description=<span class="string">&quot;描述信息&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>使用原生框架解决断言问题</li>
</ol>
<figure class="highlight python"><figcaption><span>改造断言，增加断言失败后的处理</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">demo</span>(unittest.TestCase):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test1</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">assert</span> <span class="number">51</span> == <span class="number">51</span>,<span class="string">&#x27;如果assert失败就显示这段提示&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test2</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="variable language_">self</span>.assertEqual(<span class="string">&#x27;asdf&#x27;</span>, <span class="string">&#x27;asdd&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span> AssertionError:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;捕捉失败后的处理&#x27;</span>)</span><br><span class="line">            <span class="keyword">raise</span> AssertionError(<span class="string">&#x27;断言失败&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>读取配置文件.ini，.yml，.excel</li>
</ol>
<figure class="highlight python"><figcaption><span>File类集成通用读取配置文件的方法</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> exists</span><br><span class="line"><span class="keyword">from</span> yaml <span class="keyword">import</span> safe_load_all, safe_load</span><br><span class="line"><span class="keyword">from</span> xlrd <span class="keyword">import</span> open_workbook</span><br><span class="line"><span class="keyword">import</span> configparser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">File</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, file_path: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exists(file_path):</span><br><span class="line">            <span class="keyword">raise</span> FileNotFoundError</span><br><span class="line">        <span class="variable language_">self</span>._file_path = file_path</span><br><span class="line">        <span class="variable language_">self</span>._data = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">YamlReader</span>(<span class="title class_ inherited__">File</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, yml_path: <span class="built_in">str</span>, multi: <span class="built_in">bool</span> = <span class="literal">False</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        @param yml_path: yml文件的路径</span></span><br><span class="line"><span class="string">        @param multi: 是否进行多节读取</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>(YamlReader, <span class="variable language_">self</span>).__init__(yml_path)</span><br><span class="line">        <span class="variable language_">self</span>._multi = multi</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">data</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># self._data用于判断是否已经打开过yaml文件，如果是第一次打开就开始解析，如果是多次打开就直接返回</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>._data:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="variable language_">self</span>._file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">                <span class="keyword">if</span> <span class="variable language_">self</span>._multi:</span><br><span class="line">                    <span class="variable language_">self</span>._data = <span class="built_in">list</span>(safe_load_all(fp))  <span class="comment"># 读取多节</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="variable language_">self</span>._data = safe_load(fp)  <span class="comment"># 读取单节</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># obj = YamlReader(r&#x27;E:\网课\493 - 托尼老师-Python自动化测试开发实战 一门能就业的测试课-368元\课程资料\课程资料\autotest_framework-master\autotest_framework\chapter5\demo.yml&#x27;)</span></span><br><span class="line"><span class="comment"># print(obj.data)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ExcelReader</span>(<span class="title class_ inherited__">File</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, excel_path: <span class="built_in">str</span>, sheet: [<span class="built_in">int</span>, <span class="built_in">str</span>], excel_title: <span class="built_in">bool</span> = <span class="literal">True</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        @param excel_path: excel文件存放的路径</span></span><br><span class="line"><span class="string">        @param sheet: 从哪个sheet表格读取，可以使用0，1，2也可以指定表格名称</span></span><br><span class="line"><span class="string">        @param excel_title:是否读取excel表头（第一行的数据），读取就返回一个字典，不读取就返回一个二维列表</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>(ExcelReader, <span class="variable language_">self</span>).__init__(excel_path)</span><br><span class="line">        <span class="variable language_">self</span>._sheet = sheet</span><br><span class="line">        <span class="variable language_">self</span>._excel_title = excel_title</span><br><span class="line">        <span class="variable language_">self</span>._data = []</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">data</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>._data:</span><br><span class="line">            work_book = open_workbook(<span class="variable language_">self</span>._file_path)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(<span class="variable language_">self</span>._sheet, (<span class="built_in">int</span>, <span class="built_in">str</span>)):</span><br><span class="line">                <span class="keyword">raise</span> TypeError(<span class="string">&#x27;excel文件的表格不存在：&#123;&#125;不存在&#x27;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>._sheet))</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(<span class="variable language_">self</span>._sheet, <span class="built_in">int</span>):</span><br><span class="line">                s = work_book.sheet_by_index(<span class="variable language_">self</span>._sheet)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                s = work_book.sheet_by_name(<span class="variable language_">self</span>._sheet)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="variable language_">self</span>._excel_title:</span><br><span class="line">                title = s.row_values(<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">for</span> col <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, s.nrows):</span><br><span class="line">                    <span class="variable language_">self</span>._data.append(<span class="built_in">dict</span>(<span class="built_in">zip</span>(title, s.row_values(col))))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">for</span> col <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, s.nrows):</span><br><span class="line">                    <span class="variable language_">self</span>._data.append(s.row_values(col))</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._data</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">excel中读取表头和不读取表头的两种方式</span></span><br><span class="line"><span class="string">A  B  C</span></span><br><span class="line"><span class="string">A1 B1 C1</span></span><br><span class="line"><span class="string">A2 B2 C2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ExcelReader(path, sheet=0).data</span></span><br><span class="line"><span class="string">[&#123;A:A1,B:B1,C:C1&#125;,&#123;A:A2,B:B2,C:C2&#125;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ExcelReader(path, sheet=0,excel_title=False).data</span></span><br><span class="line"><span class="string">[[A1,B1,C1],[A2,B2,C2]]</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">INIReader</span>(<span class="title class_ inherited__">File</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, ini_path: <span class="built_in">str</span>, section: <span class="built_in">str</span> = <span class="string">&#x27;MYSQL&#x27;</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        @param ini_path:</span></span><br><span class="line"><span class="string">        @param section:指定读取那一节，默认是mysql</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>(INIReader, <span class="variable language_">self</span>).__init__(ini_path)</span><br><span class="line">        <span class="variable language_">self</span>._data = &#123;&#125;</span><br><span class="line">        <span class="variable language_">self</span>._section = section.upper()</span><br><span class="line">        <span class="variable language_">self</span>._parser = configparser.ConfigParser() <span class="comment">#专门解析ini文件的包</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">data</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>._data:</span><br><span class="line">            <span class="variable language_">self</span>._parser.read(<span class="variable language_">self</span>._file_path, encoding=<span class="string">&#x27;UTF-8&#x27;</span>)</span><br><span class="line">            <span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="variable language_">self</span>._parser.items(<span class="variable language_">self</span>._section):</span><br><span class="line">                <span class="comment"># ini文件解析的key和value都是字符串，现在有些key对应的value是int类型</span></span><br><span class="line">                <span class="variable language_">self</span>._data[k] = <span class="built_in">int</span>(v) <span class="keyword">if</span> k <span class="keyword">in</span> (<span class="string">&#x27;port&#x27;</span>, <span class="string">&#x27;maxsize&#x27;</span>, <span class="string">&#x27;minsize&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;increment&#x27;</span>) <span class="keyword">else</span> v</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._data</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>ddt 的用法</li>
</ol>
<figure class="highlight python"><figcaption><span>ddt读取txt,json,yml文件</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> ddt <span class="keyword">import</span> ddt, data, unpack, file_data</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_txt_data</span>():</span><br><span class="line">    txt_data = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./a.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> txtFile:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> txtFile.readlines():</span><br><span class="line">            txt_data.append(line.strip(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;，&#x27;</span>))</span><br><span class="line">        <span class="keyword">return</span> txt_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_json_data</span>():</span><br><span class="line">    json_data = json.load(<span class="built_in">open</span>(<span class="string">&#x27;a.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> json_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@ddt</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dddt</span>(unittest.TestCase):</span><br><span class="line"></span><br><span class="line"><span class="meta">    @data(<span class="params">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>], [<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span>)</span></span><br><span class="line"><span class="meta">    @unpack</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_ddt</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        <span class="comment"># print(type(name), name,age)</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @data(<span class="params">*read_txt_data(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="meta">    @unpack</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_ddt_txt</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        <span class="comment"># print(type(name), name,age)  #&lt;class &#x27;str&#x27;&gt; 777</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># @data(*read_json_data())</span></span><br><span class="line">    <span class="comment"># @unpack</span></span><br><span class="line">    <span class="comment"># def test_ddt_json(self, name, age):</span></span><br><span class="line">    <span class="comment">#     print(name,&quot;:&quot;,age)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 特殊情况：当入口与文件中数据参数无法统一命名时，解决办法</span></span><br><span class="line"><span class="meta">    @data(<span class="params">*read_json_data(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="meta">    @unpack</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_ddt_json2</span>(<span class="params">self, **jsondata</span>):</span><br><span class="line">        <span class="comment"># print(jsondata[&quot;name&quot;], &quot;:&quot;, jsondata[&quot;age&quot;])</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">    @file_data(<span class="params"><span class="string">&#x27;./b.yml&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_ddt_yaml</span>(<span class="params">self,*data</span>): <span class="comment"># *代表顺序阅读列表类型，**代表顺序阅读对象(字典)类型</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(data),data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    unittest.main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><figcaption><span>ddt读取数据的多种方法</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">#ddt,使用@ddt(针对类),@data,@unpack,@file_data加载数据</span></span><br><span class="line"><span class="comment">#@data @unpack @file_data 针对方法</span></span><br><span class="line"><span class="keyword">from</span> ddt <span class="keyword">import</span> ddt,data,unpack,file_data</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_data</span>():</span><br><span class="line">    testdata = [&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;tom&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">21</span>&#125;, &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;wendy&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">22</span>&#125;]</span><br><span class="line">    <span class="keyword">return</span> testdata</span><br><span class="line"><span class="meta">@ddt</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyTestCase</span>(unittest.TestCase):</span><br><span class="line">    <span class="comment">#读取一个元组</span></span><br><span class="line"><span class="meta">    @data(<span class="params"><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_001</span>(<span class="params">self,value</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(value),value)  <span class="comment">#返回内容-&lt;class &#x27;int&#x27;&gt;： 1 2 3</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">#读取一个字符串</span></span><br><span class="line"><span class="meta">    @data(<span class="params"><span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_001_1</span>(<span class="params">self, value</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(value), value)  <span class="comment"># 返回内容-&lt;class &#x27;str&#x27;&gt;： 1 2 3</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#读取多个元组</span></span><br><span class="line"><span class="meta">    @data(<span class="params">(<span class="params"><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span>),(<span class="params"><span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span></span>)</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_002</span>(<span class="params">self,value</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(value),value)  <span class="comment">#返回内容-&lt;class &#x27;tuple&#x27;&gt;：(1,2,3),(4,5,6)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @data(<span class="params">(<span class="params"><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span>),(<span class="params"><span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span></span>)</span>)</span></span><br><span class="line"><span class="meta">    @unpack </span><span class="comment">#拆包</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_003</span>(<span class="params">self,value1,value2,value3</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(value1),<span class="built_in">type</span>(value2),<span class="built_in">type</span>(value3),value1,value2,value3)  <span class="comment">#返回内容&lt;class &#x27;int&#x27;&gt;：1 2 3 \n 4 5 6</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#列表</span></span><br><span class="line"><span class="meta">    @data(<span class="params">[&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">21</span>&#125;,&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;wendy&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">22</span>&#125;]</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_004</span>(<span class="params">self,value</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(value),value)    <span class="comment">#返回内容&lt;class &#x27;list&#x27;&gt;：[&#123;&#x27;name&#x27;: &#x27;tom&#x27;, &#x27;age&#x27;: 21&#125;, &#123;&#x27;name&#x27;: &#x27;wendy&#x27;, &#x27;age&#x27;: 22&#125;]</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">#字典</span></span><br><span class="line"><span class="meta">    @data(<span class="params">&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">21</span>&#125;,&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;wendy&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">22</span>&#125;</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_005</span>(<span class="params">self,value</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(value),value)  <span class="comment">#返回内容&lt;class &#x27;dict&#x27;&gt;：&#123;&#x27;name&#x27;: &#x27;tom&#x27;, &#x27;age&#x27;: 21&#125; \n &#123;&#x27;name&#x27;: &#x27;wendy&#x27;, &#x27;age&#x27;: 22&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#字典-value</span></span><br><span class="line"><span class="meta">    @data(<span class="params">&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;21&#x27;</span>&#125;,&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;wendy&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;22&#x27;</span>&#125;</span>)</span></span><br><span class="line"><span class="meta">    @unpack</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_006</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(name),<span class="built_in">type</span>(age),name,age)  <span class="comment">#返回内容 &lt;class &#x27;str&#x27;&gt;：tom 21 wendy 22</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#变量或者方法调用</span></span><br><span class="line">    testdata =[&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">21</span>&#125;,&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;wendy&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">22</span>&#125;]</span><br><span class="line"></span><br><span class="line">    <span class="comment">#方法调用</span></span><br><span class="line"><span class="meta">    @data(<span class="params">get_data(<span class="params"></span>)</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_007</span>(<span class="params">self,value</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(value),value)  <span class="comment">#返回内容&lt;class &#x27;list&#x27;&gt;：[&#123;&#x27;name&#x27;: &#x27;tom&#x27;, &#x27;age&#x27;: 21&#125;, &#123;&#x27;name&#x27;: &#x27;wendy&#x27;, &#x27;age&#x27;: 22&#125;]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#变量调用</span></span><br><span class="line"><span class="meta">    @data(<span class="params">testdata</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_008</span>(<span class="params">self,value</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(value),value)   <span class="comment">#返回内容&lt;class &#x27;list&#x27;&gt;：[&#123;&#x27;name&#x27;: &#x27;tom&#x27;, &#x27;age&#x27;: 21&#125;, &#123;&#x27;name&#x27;: &#x27;wendy&#x27;, &#x27;age&#x27;: 22&#125;]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#读文件</span></span><br><span class="line"><span class="meta">    @file_data(<span class="params">os.getcwd(<span class="params"></span>)+<span class="string">&#x27;/testjson.json&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_009</span>(<span class="params">self,value</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(value),value)  <span class="comment">#返回内容&lt;class &#x27;list&#x27;&gt; [&#x27;wendy&#x27;, &#x27;honghong&#x27;, &#x27;xignxing&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>测试库</category>
      </categories>
      <tags>
        <tag>unittest</tag>
      </tags>
  </entry>
  <entry>
    <title>pytest框架与自动化测试应用</title>
    <url>/post/python-7-pytest.html</url>
    <content><![CDATA[<h2 id="pytest-文件命名（也可以修改默认的搜索规则）"><a href="#pytest-文件命名（也可以修改默认的搜索规则）" class="headerlink" title="pytest 文件命名（也可以修改默认的搜索规则）"></a>pytest 文件命名（也可以修改默认的搜索规则）</h2><ol>
<li><p>测试文件命名为**<font style="color:#E8323C;">test_XXX.py</font><strong>或者</strong><font style="color:#E8323C;">XXX_test.py</font>**</p>
</li>
<li><p>测试函数，测试方法命名为**<font style="color:#F5222D;">test_XXX</font>**</p>
</li>
<li><p>测试类命名为**<font style="color:#F5222D;">TestXXX</font>**</p>
</li>
<li><p>测试搜索规则：</p>
<ul>
<li>从一个或多个目录开始查找，在命令行中指定文件名或者目录名，未指定就是用当前目录</li>
<li>在该目录和所有子目录下递归查找测试模块</li>
<li>测试模块是指文件名为 test_<em>.py 或者</em>_test.py 的文件</li>
<li>在测试模块中查找以 test_开头的函数名</li>
<li>查找名字以 Test 开头的类，首先筛选掉包含<strong>init</strong>函数的类，再查找以 Test_开头的类方法</li>
</ul>
</li>
</ol>
<h2 id="pytest-框架结构"><a href="#pytest-框架结构" class="headerlink" title="pytest 框架结构"></a>pytest 框架结构</h2><ul>
<li>模块级 -模块始末运行：setup_module&#x2F;teardown_module，</li>
<li>函数级别-函数始末运行（在类外部）：setup_function&#x2F;teardown_function</li>
<li>类级 -类始末运行（在类中）：setup_class&#x2F;teardown_class，必须以@classmethod 装饰</li>
<li>方法级 -方法始末运行（在类中）：setup_method&#x2F;teardown_method</li>
<li>方法级 -方法始末运行（在类中）：setup&#x2F;teardown</li>
</ul>
<h2 id="pytest-运行结果"><a href="#pytest-运行结果" class="headerlink" title="pytest 运行结果"></a>pytest 运行结果</h2><ol>
<li>passed-.，测试通过</li>
<li>failed-F， 测试失败，（也可能是由 xpass 状态与 strict 选项冲突造成的失败）</li>
<li>skipped-s，测试未被执行（标记为@pytest.mark.skip() 或者@pytest.mark.skipif() ）</li>
<li>xfail-x，预期测试失败，并且确实失败 (标记为@pytest.mark.xfail() )</li>
<li>xpass-X，预期测试失败，但实际上运行通过，不符合预期</li>
<li>error-E，测试用例之外的代码触发了异常，可能由 fixture 或者 hook 函数引起</li>
</ol>
<h2 id="pytest-运行选项"><a href="#pytest-运行选项" class="headerlink" title="pytest 运行选项"></a>pytest 运行选项</h2><h3 id="pytest-静态挑选测试用例"><a href="#pytest-静态挑选测试用例" class="headerlink" title="pytest 静态挑选测试用例"></a>pytest 静态挑选测试用例</h3><pre><code>pytest tests/func/test_add.py (运行单个文件里的全部测试)
pytest tests/func::TestUpdate (运行单个测试类)
pytest tests/func/test_add.py::test_add_return_valid_id (运行单个测试函数)
pytest tests/func::TestUpdate::test_bad_id (运行单个测试类中的测试方法)
</code></pre>
<h3 id="pytest-动态挑选测试用例"><a href="#pytest-动态挑选测试用例" class="headerlink" title="pytest 动态挑选测试用例"></a>pytest 动态挑选测试用例</h3><h4 id="1-pytest-k-“asdict-or-defaults”-–collect-only-加上-k-指定特定运行的用例，用测试名划分测试集合，可以指定测试文件名，目录，类名，函数名"><a href="#1-pytest-k-“asdict-or-defaults”-–collect-only-加上-k-指定特定运行的用例，用测试名划分测试集合，可以指定测试文件名，目录，类名，函数名" class="headerlink" title="1 pytest -k “asdict or defaults” –collect-only (加上-k 指定特定运行的用例，用测试名划分测试集合，可以指定测试文件名，目录，类名，函数名)"></a>1 pytest -k “asdict or defaults” –collect-only (加上-k 指定特定运行的用例，用测试名划分测试集合，可以指定测试文件名，目录，类名，函数名)</h4><blockquote>
<p>-k 允许用一个表达式指定需要运行的是测试，该表达式可以匹配测试名（或其字串）模糊匹配，表达式中可以包含 and，or，not<br>pytest -v -k _raises (测试方法为 test_add_raises,test_get_raises,test_delete_raises)<br>pytest -v -k “_raises and not delete”，就会跳过 test_delete_raises 的执行</p>
</blockquote>
<p>pytest -k ‘test_laugou.py’ 按照文件名全匹配，运行 test_laugou.py 下所有用例<br>pytest -k ‘laugou’ 按照文件名部分匹配，运行 test_laugou.py 下所有用例<br>ptest -k ‘Baidu’ 按照类名匹配，运行下 Baidu 测试类下所有用例<br>pytest -k ‘message’ 按照方法名匹配，test_message 这个测试方法会被执行</p>
<p><img src="/images/python71.png"></p>
<h4 id="2-pytest-m-run-please（用于标记测试类-测试方法并分组，以便快速选中并允许）-使用-m-选项可以用表达式指定多个标记名："><a href="#2-pytest-m-run-please（用于标记测试类-测试方法并分组，以便快速选中并允许）-使用-m-选项可以用表达式指定多个标记名：" class="headerlink" title="2 pytest -m run_please（用于标记测试类&#x2F;测试方法并分组，以便快速选中并允许）,使用-m 选项可以用表达式指定多个标记名："></a>2 pytest -m run_please（用于标记测试类&#x2F;测试方法并分组，以便快速选中并允许）,使用-m 选项可以用表达式指定多个标记名：</h4><pre><code>1. -m &quot;mark1 and mark2&quot; （选中带有这两个标记的所有测试用例）
2. -m &quot;mark1 or mark2&quot;    （选中带有mark1或者mark2的所有测试用例）
3. -m &quot;mark1 and not mark2&quot;    （选中带有mark1的所有测试用例，过滤掉带有mark2的）
</code></pre>
<p><img src="/images/python72.png"> <img src="/images/python73.png"></p>
<h3 id="pytest-忽略测试用例"><a href="#pytest-忽略测试用例" class="headerlink" title="pytest 忽略测试用例"></a>pytest 忽略测试用例</h3><h4 id="1-忽略某一个测试文件-–ignore"><a href="#1-忽略某一个测试文件-–ignore" class="headerlink" title="1 忽略某一个测试文件 –ignore"></a>1 忽略某一个测试文件 –ignore</h4><p>pytest -m pytest –ignore&#x3D;test&#x2F;test_itesting.py</p>
<h4 id="2-忽略某一个测试方法-–deselect"><a href="#2-忽略某一个测试方法-–deselect" class="headerlink" title="2 忽略某一个测试方法 –deselect"></a>2 忽略某一个测试方法 –deselect</h4><p>pytest -m pytest –deselect&#x3D;test&#x2F;test_itesting.py::test_a</p>
<h4 id="3-使用-pytest-mark-skip-装饰器忽略"><a href="#3-使用-pytest-mark-skip-装饰器忽略" class="headerlink" title="3 使用 @pytest.mark.skip 装饰器忽略"></a>3 使用 @pytest.mark.skip 装饰器忽略</h4><p>@pytest.mark.skip(reason&#x3D;’misunderstood the API’)</p>
<h4 id="4-使用-pytest-mark-skipif-装饰器忽略"><a href="#4-使用-pytest-mark-skipif-装饰器忽略" class="headerlink" title="4 使用 @pytest.mark.skipif 装饰器忽略"></a>4 使用 @pytest.mark.skipif 装饰器忽略</h4><p>@pytest.mark.skipif(tasks.version &lt; ‘0.2.0’, reason&#x3D;‘not supported until version 0.2.0’) 条件成立就跳过测试用例</p>
<h4 id="5-使用-m-或者-k-参数忽略"><a href="#5-使用-m-或者-k-参数忽略" class="headerlink" title="5 使用-m 或者-k 参数忽略"></a>5 使用-m 或者-k 参数忽略</h4><h3 id="pytest-命令行参数"><a href="#pytest-命令行参数" class="headerlink" title="pytest 命令行参数"></a>pytest 命令行参数</h3><h4 id="1-pytest-v-（详细展示结果，每个文件中的每个测试用例占一行，文件名函数名结果都会显示出来）"><a href="#1-pytest-v-（详细展示结果，每个文件中的每个测试用例占一行，文件名函数名结果都会显示出来）" class="headerlink" title="1 pytest -v （详细展示结果，每个文件中的每个测试用例占一行，文件名函数名结果都会显示出来）"></a>1 pytest -v （详细展示结果，每个文件中的每个测试用例占一行，文件名函数名结果都会显示出来）</h4><p>（没用-v 之前是每个测试文件占一行，测试结果是.或者 F 这种单个字符）</p>
<h4 id="2-pytest-q-和-v-相反，回简化输出信息"><a href="#2-pytest-q-和-v-相反，回简化输出信息" class="headerlink" title="2 pytest -q (和-v 相反，回简化输出信息)"></a>2 pytest -q (和-v 相反，回简化输出信息)</h4><p>pytest -q –tb&#x3D;line（仅打印异常的代码位置）结合使用</p>
<h4 id="3-pytest-s-（允许终端输出-print-结果）"><a href="#3-pytest-s-（允许终端输出-print-结果）" class="headerlink" title="3 pytest -s （允许终端输出 print 结果）"></a>3 pytest -s （允许终端输出 print 结果）</h4><h4 id="4-pytest-–collect-only-（展示当前目录下哪些测试用例会被运行，非常方便的在测试运行之前，检查选中的测试用例是否符合预期）"><a href="#4-pytest-–collect-only-（展示当前目录下哪些测试用例会被运行，非常方便的在测试运行之前，检查选中的测试用例是否符合预期）" class="headerlink" title="4 pytest –collect-only （展示当前目录下哪些测试用例会被运行，非常方便的在测试运行之前，检查选中的测试用例是否符合预期）"></a>4 pytest –collect-only （展示当前目录下哪些测试用例会被运行，非常方便的在测试运行之前，检查选中的测试用例是否符合预期）</h4><p><img src="/images/python74.png"></p>
<h4 id="5-pytest-x-用于-debug-时候，遇到失败时立即停止整个会话-（正常情况下，不使用-x-遇到测试失败的用例，并不会停止执行后面的测试用例）"><a href="#5-pytest-x-用于-debug-时候，遇到失败时立即停止整个会话-（正常情况下，不使用-x-遇到测试失败的用例，并不会停止执行后面的测试用例）" class="headerlink" title="5 pytest -x (用于 debug 时候，遇到失败时立即停止整个会话)（正常情况下，不使用-x 遇到测试失败的用例，并不会停止执行后面的测试用例）"></a>5 pytest -x (用于 debug 时候，遇到失败时立即停止整个会话)（正常情况下，不使用-x 遇到测试失败的用例，并不会停止执行后面的测试用例）</h4><h4 id="56-pytest-–maxfail-2-x-时遇到测试失败就立即停止，–maxfail-是允许-pytest-失败几个后停止，明确指出可以失败几次"><a href="#56-pytest-–maxfail-2-x-时遇到测试失败就立即停止，–maxfail-是允许-pytest-失败几个后停止，明确指出可以失败几次" class="headerlink" title="56 pytest –maxfail&#x3D;2 (-x 时遇到测试失败就立即停止，–maxfail 是允许 pytest 失败几个后停止，明确指出可以失败几次)"></a>56 pytest –maxfail&#x3D;2 (-x 时遇到测试失败就立即停止，–maxfail 是允许 pytest 失败几个后停止，明确指出可以失败几次)</h4><p>pytest –max-fail&#x3D;1 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt; pytest -x (这两个作用一样的)</p>
<h4 id="7-pytest-v-lf-–last-failed-当一个或者多个测试失败时，再次运行并使用–lf-时，仅运行上次未通过的测试用例"><a href="#7-pytest-v-lf-–last-failed-当一个或者多个测试失败时，再次运行并使用–lf-时，仅运行上次未通过的测试用例" class="headerlink" title="7 pytest -v -lf –last-failed (当一个或者多个测试失败时，再次运行并使用–lf 时，仅运行上次未通过的测试用例)"></a>7 pytest -v -lf –last-failed (当一个或者多个测试失败时，再次运行并使用–lf 时，仅运行上次未通过的测试用例)</h4><h4 id="8-pytest-v-ff-–failed-first-当一个或者多个测试失败时，再次运行并使用–ff-时，之前运行未通过的用例会首先执行，然后才是其他用例"><a href="#8-pytest-v-ff-–failed-first-当一个或者多个测试失败时，再次运行并使用–ff-时，之前运行未通过的用例会首先执行，然后才是其他用例" class="headerlink" title="8 pytest -v -ff –failed-first (当一个或者多个测试失败时，再次运行并使用–ff 时，之前运行未通过的用例会首先执行，然后才是其他用例)"></a>8 pytest -v -ff –failed-first (当一个或者多个测试失败时，再次运行并使用–ff 时，之前运行未通过的用例会首先执行，然后才是其他用例)</h4><h4 id="9-pytest-l-–showlocals（失败测试用例由于被堆栈跟踪，所以局部变量以及值都会显示出来）"><a href="#9-pytest-l-–showlocals（失败测试用例由于被堆栈跟踪，所以局部变量以及值都会显示出来）" class="headerlink" title="9 pytest -l &#x2F; –showlocals（失败测试用例由于被堆栈跟踪，所以局部变量以及值都会显示出来）"></a>9 pytest -l &#x2F; –showlocals（失败测试用例由于被堆栈跟踪，所以局部变量以及值都会显示出来）</h4><h4 id="10-pytest-–tb-XXX-（决定捕捉到失败时输出信息的展示方式）"><a href="#10-pytest-–tb-XXX-（决定捕捉到失败时输出信息的展示方式）" class="headerlink" title="10 pytest –tb&#x3D;XXX （决定捕捉到失败时输出信息的展示方式）"></a>10 pytest –tb&#x3D;XXX （决定捕捉到失败时输出信息的展示方式）</h4><pre><code>1. short 模式仅输出assert的一行（不显示上下文）
2. line模式值使用一行输出所有的错误信息
3. no模式直接屏蔽全部回溯信息
4. long模式输出最为详尽的回溯信息
5. auto默认值，如果多个测试用例失败，只打印第一个和最后一个的回溯信息
6. native模式只输出python标准库的回溯信息
</code></pre>
<h4 id="11-pytest-–durations-N-vv-（统计测试过程中那几个阶段是最慢的，会显示最慢的-N-个阶段，耗时越长越靠前）"><a href="#11-pytest-–durations-N-vv-（统计测试过程中那几个阶段是最慢的，会显示最慢的-N-个阶段，耗时越长越靠前）" class="headerlink" title="11 pytest –durations&#x3D;N -vv （统计测试过程中那几个阶段是最慢的，会显示最慢的 N 个阶段，耗时越长越靠前）"></a>11 pytest –durations&#x3D;N -vv （统计测试过程中那几个阶段是最慢的，会显示最慢的 N 个阶段，耗时越长越靠前）</h4><p>pytest –durations&#x3D;0 （将所有结算按照耗时从长到短排序后显示）</p>
<p><img src="/images/python75.png"></p>
<p><strong><font style="color:#F5222D;">每个测试用例大体上都包含三个阶段：setup，call， teardown</font></strong></p>
<h4 id="12-pytest-h-（展示-pytest-的用法和新添加插件的选项）"><a href="#12-pytest-h-（展示-pytest-的用法和新添加插件的选项）" class="headerlink" title="12 pytest -h （展示 pytest 的用法和新添加插件的选项）"></a>12 pytest -h （展示 pytest 的用法和新添加插件的选项）</h4><h3 id="pytest-程序中执行-pytest-main"><a href="#pytest-程序中执行-pytest-main" class="headerlink" title="pytest 程序中执行 pytest.main()"></a>pytest 程序中执行 pytest.main()</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    pytest.main()   无参构造-运行目录及子目录下的所有用例</span><br><span class="line">    pytest.main([<span class="string">&#x27;testcsv.py&#x27;</span>]) 有参构造，运行指定模块所有用例</span><br><span class="line">    pytest.main([<span class="string">&#x27;testcsv.py::TestClass::testMethod&#x27;</span>]) 有参构造，运行指定模块指定用例</span><br><span class="line">    pytest.main([<span class="string">&#x27;testcsv.py&#x27;</span>, <span class="string">&#x27;-q&#x27;</span>])    -q:安静模式, 不输出环境信息</span><br><span class="line">    pytest.main([<span class="string">&#x27;testcsv.py&#x27;</span>, <span class="string">&#x27;-v&#x27;</span>])</span><br><span class="line">    pytest.main([<span class="string">&#x27;testcsv.py&#x27;</span>, <span class="string">&#x27;-s&#x27;</span>])     -s: 显示程序中的<span class="built_in">print</span>/logging输出:安静模式, 不输出环境信息</span><br><span class="line">    pytest.main([<span class="string">&#x27;testcsv.py&#x27;</span>, <span class="string">&#x27;-x&#x27;</span>])     -x:出现一条测试用例失败就退出测试。</span><br><span class="line">    pytest.main([<span class="string">&#x27;testcsv.py&#x27;</span>, <span class="string">&#x27;--lf&#x27;</span>])   --lf:定位失败的用例</span><br><span class="line">    pytest.main([<span class="string">&#x27;testcsv.py&#x27;</span>, <span class="string">&#x27;-l&#x27;</span>])     -l 打印失败用例的变量值</span><br><span class="line"></span><br><span class="line">    <span class="comment">#使用allure生成 Html 格式的测试报告</span></span><br><span class="line">    pytest.main([<span class="string">&#x27;-x&#x27;</span>, <span class="string">&#x27;--alluredir&#x27;</span>, <span class="string">&#x27;report/result&#x27;</span>, <span class="string">&#x27;testcsv.py&#x27;</span>])</span><br><span class="line">    split = <span class="string">&#x27;allure ’ + &#x27;</span>generate ’ + <span class="string">&#x27;./report/result ’ + &#x27;</span>-o ’ + <span class="string">&#x27;./report/html ’ + ‘–clean’</span></span><br><span class="line"><span class="string">    os.system(split)</span></span><br></pre></td></tr></table></figure>

<h2 id="pytest-参数化-parametrize"><a href="#pytest-参数化-parametrize" class="headerlink" title="pytest 参数化 parametrize"></a>pytest 参数化 parametrize</h2><blockquote>
<p>pytest 实现参数化的三种方式</p>
<ol>
<li>pytest.fixture() 使用 fixture 传 params 参数实现参数化</li>
<li>@pytest.mark.parametrize 允许在测试函数或类中定义多组参数</li>
<li>pytest_generate_tests 钩子函数允许定义自定义参数方案或扩展 P174</li>
</ol>
</blockquote>
<h3 id="parametrize-源码分析"><a href="#parametrize-源码分析" class="headerlink" title="parametrize 源码分析"></a>parametrize 源码分析</h3><p><font style="color:#bbb529;">@pytest.mark.parametrize(</font><font style="color:#F5222D;">argnames, argvalues，indirect&#x3D;False，ids&#x3D;None, scope&#x3D;None</font><font style="color:#bbb529;">) </font></p>
<ul>
<li><font style="color:#F5222D;">argnames</font> 参数名，是个字符串，如中间用逗号分隔则表示为多个参数名</li>
<li><font style="color:#F5222D;">argvalues </font>参数值，参数组成的列表，列表中有几个元素，就会生成几条用例（可用于函数，类，<font style="color:#F5222D;">用在类上，该数据集会被传递给该类的所有类方法</font>）</li>
<li><font style="color:#F5222D;">indirect ，</font>设置为 True，pytest 会把 argnames 当作函数执行，将 argvalues 作为参数传入到 argnames 这个函数里（见 2.4）</li>
</ul>
<h3 id="parametrize-使用方法"><a href="#parametrize-使用方法" class="headerlink" title="parametrize 使用方法"></a>parametrize 使用方法</h3><h4 id="parametrize-自动生成的用例标识"><a href="#parametrize-自动生成的用例标识" class="headerlink" title="parametrize 自动生成的用例标识"></a>parametrize 自动生成的用例标识</h4><ol>
<li><font style="color:#bbb529;">@pytest.mark.parametrize</font>(<font style="color:#6a8759;">‘task’</font><font style="color:#cc7832;">, </font>[Task(<font style="color:#6a8759;">‘sleep’</font><font style="color:#cc7832;">, </font><font style="color:#aa4926;">done</font>&#x3D;<font style="color:#cc7832;">True</font>)<font style="color:#cc7832;">,</font>Task(<font style="color:#6a8759;">‘wake’</font><font style="color:#cc7832;">, </font><font style="color:#6a8759;">‘brian’</font>)<font style="color:#cc7832;">,</font>Task(<font style="color:#6a8759;">‘breathe’</font><font style="color:#cc7832;">, </font><font style="color:#6a8759;">‘BRIAN’</font><font style="color:#cc7832;">, True</font>)<font style="color:#cc7832;">, </font>Task(<font style="color:#6a8759;">‘exercise’</font><font style="color:#cc7832;">, </font><font style="color:#6a8759;">‘BrIaN’</font><font style="color:#cc7832;">, False</font>)])</li>
</ol>
<p>没有指定 id，pytest 默认的用参数加数字作为 task 标识，task0,rask1,task2 这样。<br><img src="/images/python76.png"></p>
<ol start="2">
<li><font style="color:#bbb529;">@pytest.mark.parametrize</font>(<font style="color:#6a8759;">‘summary, owner, done’</font><font style="color:#cc7832;">, </font>[(<font style="color:#6a8759;">‘sleep’</font><font style="color:#cc7832;">, None, False</font>)<font style="color:#cc7832;">,</font>(<font style="color:#6a8759;">‘wake’</font><font style="color:#cc7832;">, </font><font style="color:#6a8759;">‘brian’</font><font style="color:#cc7832;">, False</font>)<font style="color:#cc7832;">,</font>(<font style="color:#6a8759;">‘breathe’</font><font style="color:#cc7832;">, </font><font style="color:#6a8759;">‘BRIAN’</font><font style="color:#cc7832;">, True</font>)<font style="color:#cc7832;">, </font>(<font style="color:#6a8759;">‘eat eggs’</font><font style="color:#cc7832;">, </font><font style="color:#6a8759;">‘BrIaN’</font><font style="color:#cc7832;">, False</font>)<font style="color:#cc7832;">,</font>])</li>
</ol>
<p>将 task 替换成几组键值对，易于被 pytest 装换成字符串的数据对象，则输出结果中的测试标识会使用组合后的参数值以增强可读性。</p>
<p><img src="/images/python77.png"></p>
<p>还可以直接使用完整的测试标识来指定需要运行的测试：</p>
<p>pytest -v test_add_variety.py::test_add_3[sleep-None-False]或者</p>
<p>参数有空格的就得加引号 pytest -v “test_add_variety.py::test_add_3[eat eggs-None-False]”</p>
<h4 id="ids-参数用法"><a href="#ids-参数用法" class="headerlink" title="ids 参数用法"></a>ids 参数用法</h4><ol>
<li><font style="color:#bbb529;">@pytest.mark.parametrize</font>(<font style="color:#6a8759;">‘task’</font><font style="color:#cc7832;">, </font>tasks_to_try<font style="color:#cc7832;">, </font><font style="color:#aa4926;">ids</font>&#x3D;task_ids)</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tasks_to_try = (Task(<span class="string">&#x27;sleep&#x27;</span>, done=<span class="literal">True</span>),</span><br><span class="line">                Task(<span class="string">&#x27;wake&#x27;</span>, <span class="string">&#x27;brian&#x27;</span>),</span><br><span class="line">                Task(<span class="string">&#x27;wake&#x27;</span>, <span class="string">&#x27;brian&#x27;</span>),</span><br><span class="line">                Task(<span class="string">&#x27;breathe&#x27;</span>, <span class="string">&#x27;BRIAN&#x27;</span>, <span class="literal">True</span>),</span><br><span class="line">                Task(<span class="string">&#x27;exercise&#x27;</span>, <span class="string">&#x27;BrIaN&#x27;</span>, <span class="literal">False</span>))</span><br><span class="line"></span><br><span class="line">task_ids = [<span class="string">&#x27;Task(&#123;&#125;,&#123;&#125;,&#123;&#125;)&#x27;</span>.<span class="built_in">format</span>(t.summary, t.owner, t.done) <span class="keyword">for</span> t <span class="keyword">in</span> tasks_to_try]  <span class="comment">#由于给数据集分配了一个变量tasks_to_try，所以通过它生成ids</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#引入parametrize（）一个额外参数ids，使列表中的每一个元素被标识</span></span><br><span class="line"><span class="comment">#ids是一个字符串列表，它和数据对象列表的长度保持一致(这里的ids是列表，也可以指定是一个函数）</span></span><br><span class="line"><span class="meta">@pytest.mark.parametrize(<span class="params"><span class="string">&#x27;task&#x27;</span>, tasks_to_try, ids=task_ids</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_add_5</span>(<span class="params">task</span>):</span><br><span class="line">    task_id = tasks.add(task)</span><br><span class="line">    t_from_db = tasks.get(task_id)</span><br><span class="line">    <span class="keyword">assert</span> equivalent(t_from_db, task)</span><br></pre></td></tr></table></figure>

<p><img src="/images/python78.png"></p>
<ol start="2">
<li><font style="color:#bbb529;">@pytest.mark.parametrize</font>(<font style="color:#6a8759;">‘task’</font><font style="color:#cc7832;">, </font>[<br>pytest.param(Task(<font style="color:#6a8759;">‘create’</font>)<font style="color:#cc7832;">, </font><font style="color:#aa4926;">id</font>&#x3D;<font style="color:#6a8759;">‘just summary’</font>)<font style="color:#cc7832;">,<br></font><font style="color:#cc7832;"> </font>pytest.param(Task(<font style="color:#6a8759;">‘inspire’</font><font style="color:#cc7832;">, </font><font style="color:#6a8759;">‘Michelle’</font>)<font style="color:#cc7832;">, </font><font style="color:#aa4926;">id</font>&#x3D;<font style="color:#6a8759;">‘summary&#x2F;owner’</font>)<font style="color:#cc7832;">,<br></font><font style="color:#cc7832;"> </font>pytest.param(Task(<font style="color:#6a8759;">‘encourage’</font><font style="color:#cc7832;">, </font><font style="color:#6a8759;">‘Michelle’</font><font style="color:#cc7832;">, True</font>)<font style="color:#cc7832;">, </font><font style="color:#aa4926;">id</font>&#x3D;<font style="color:#6a8759;">‘summary&#x2F;owner&#x2F;done’</font>)])</li>
</ol>
<p>在给@pytest.mark.parametrize() 装饰器传入列表参数时，还可以在参数值旁边定义一个 id 来做标识，语法是<font style="color:#F5222D;">pytest.param(<value>，id&#x3D;”XX”)</font></p>
<p><font style="color:#F5222D;">在 id 不能被参数化批量生成，需要自定义的时候，这个方法很管用</font></p>
<h4 id="多次使用-paramtrize"><a href="#多次使用-paramtrize" class="headerlink" title="多次使用 paramtrize"></a>多次使用 paramtrize</h4><p>同一个测试用例还可以同时添加多个<font style="color:#bbb529;">@pytest.mark.parametrize</font>装饰器，多个 parametrize 的所有元素互相组合（类似笛卡尔积），生成大量测试用例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@pytest.mark.parametrize(<span class="params"><span class="string">&quot;x&quot;</span>, [<span class="number">1</span>, <span class="number">2</span>]</span>)</span></span><br><span class="line"><span class="meta">@pytest.mark.parametrize(<span class="params"><span class="string">&quot;y&quot;</span>, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_search2</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="built_in">print</span>(x, y)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test_fixture_scope.py::test_search2[3-1]</span></span><br><span class="line"><span class="comment"># test_fixture_scope.py::test_search2[3-2]</span></span><br><span class="line"><span class="comment"># test_fixture_scope.py::test_search2[4-1]</span></span><br><span class="line"><span class="comment"># test_fixture_scope.py::test_search2[4-2]</span></span><br><span class="line"><span class="comment"># test_fixture_scope.py::test_search2[5-1]</span></span><br><span class="line"><span class="comment"># test_fixture_scope.py::test_search2[5-2]</span></span><br></pre></td></tr></table></figure>

<h4 id="pytest-fixture-与-pytest-mark-parametrize-结合实现参数化（indirect-参数用法）"><a href="#pytest-fixture-与-pytest-mark-parametrize-结合实现参数化（indirect-参数用法）" class="headerlink" title="@pytest.fixture 与@pytest.mark.parametrize 结合实现参数化（indirect 参数用法）"></a><font style="color:#1DC0C9;background-color:rgba(255, 255, 255, 0);">@pytest.fixture 与@pytest.mark.parametrize 结合实现参数化（indirect 参数用法）</font></h4><blockquote>
<p>如果测试数据需要在 fixture 方法中使用，同时也需要在测试用例中使用，可以在使用 parametrize 的时候添加一个参数 indirect&#x3D;True，pytest 可以实现将参数传入到 fixture 方法中，也可以在当前测试用例中使用</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@pytest.fixture(<span class="params">scope=<span class="string">&quot;module&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">request</span>):</span><br><span class="line">    user = request.param</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;登录用户<span class="subst">&#123;user&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> user</span><br><span class="line"></span><br><span class="line"><span class="meta">@pytest.mark.parametrize(<span class="params"><span class="string">&quot;login&quot;</span>, [<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;jerry&#x27;</span>],indirect=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_indirect</span>(<span class="params">login</span>):</span><br><span class="line">    a = login</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;测试用例中login的返回值:<span class="subst">&#123;a&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录用户tom</span></span><br><span class="line"><span class="comment"># PASSED                   [ 50%]测试用例中login的返回值:tom</span></span><br><span class="line"><span class="comment"># 登录用户jerry</span></span><br><span class="line"><span class="comment"># PASSED                 [100%]测试用例中login的返回值:jerry</span></span><br></pre></td></tr></table></figure>

<p>代码的结果可以看到，当 indirect&#x3D;True 时，会将 login 作为参数，[‘tom’,’jerry’]作为参数传入 login 的 fixture 中，生成多条用例。通过 return 将结果返回，当调用 login 可以获取到 login 这个方法的返回数据。</p>
<h4 id="argnames-的用法-其他参数详细用法见书-P165"><a href="#argnames-的用法-其他参数详细用法见书-P165" class="headerlink" title="argnames 的用法 [其他参数详细用法见书 P165]"></a>argnames 的用法 <font style="color:#F1A2AB;">[其他参数详细用法见书 P165]</font></h4><p>parametrize 方法中的第一个参数 argnames 是一个被逗号分隔的字符串&#x2F;列表&#x2F;元组,表明指定的参数, argnames 通常是与被标记测试方法入参的参数名对应的,但实际上有一些限制,它只能是被标记测试方法入参的子集</p>
<ol>
<li>测试方法中未声明, mark.parametrize 中声明</li>
</ol>
<p>test_sample 测试方法中未声明 expected, 如果在标记中强行声明,会报错</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@pytest.mark.parametrize(<span class="params"><span class="string">&#x27;input, expected&#x27;</span>, [(<span class="params"><span class="number">1</span>,<span class="number">2</span></span>)]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_sample</span>(<span class="params"><span class="built_in">input</span></span>):</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>测试方法参数声明范围小于 mark.parametrize 声明范围, 即不能是被标记测试方法入参中定义了默认值的参数</li>
</ol>
<p>test_sample 测试方法中声明 expected 参数但同时赋予了默认值, 如果在标记中强行声明,会报错</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@pytest.mark.parametrize(<span class="params"><span class="string">&#x27;input, expected&#x27;</span>, [(<span class="params"><span class="number">1</span>,<span class="number">2</span></span>)]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_sample</span>(<span class="params"><span class="built_in">input</span>, expected=<span class="number">2</span></span>):</span><br></pre></td></tr></table></figure>

<h2 id="pytest-自定义-Fixture"><a href="#pytest-自定义-Fixture" class="headerlink" title="pytest 自定义 Fixture"></a>pytest 自定义 Fixture</h2><blockquote>
<p>fixture 是在测试函数运行前后，由 pytest 执行的外壳函数</p>
<p>fixture 中的代码可以定制，满足多变的测试需求，包括定义传入测试中的数据集，配置测试前系统的初始状态，为批量测试提供数据源</p>
<p><font style="background-color:rgba(255, 255, 255, 0);">pytest.fixture(scope&#x3D;”function”, params&#x3D;None, autouse&#x3D;False, ids&#x3D;None, name&#x3D;None)</font></p>
</blockquote>
<h3 id="fixture-的-scope-作用范围哪几种值？"><a href="#fixture-的-scope-作用范围哪几种值？" class="headerlink" title="fixture 的 scope 作用范围哪几种值？"></a>fixture 的 scope 作用范围哪几种值？</h3><blockquote>
<p>scope 控制该 fixture 的作用范围<br>作用范围@pytest.fixture(scope&#x3D;’function’)，作用范围由小到大：function、&gt; class、module、package、session</p>
</blockquote>
<blockquote>
<p>scope&#x3D;function（fixture 默认值）,所以我们不传的时候，（function 函数或者方法级&gt;别）都会被调用，<br>scope&#x3D;class 可以实现每个测试类（class 类级别）前执行一次，<br>scope&#x3D;module 在每个 py 文件（module 模块级别）执行前执行一次，<br>scope&#x3D;session 即 pytest 的会话，即所有的测试执行开始到结束，只会执行一次的操作（多个文件调用一次，可以跨.py 文件调用，每个.py 文件就是 module）</p>
</blockquote>
<p>使用 <font style="color:#F5222D;">–setup-show 参数 </font>回溯 fixture 的执行过程</p>
<p><img src="/images/python79.png"></p>
<h3 id="fixture-参数化-params"><a href="#fixture-参数化-params" class="headerlink" title="fixture 参数化 params"></a>fixture 参数化 params</h3><blockquote>
<ol>
<li>fixture 参数列表中的 request 也是 pytest 内建的 fixture 之一，代表 fixture 的调用状态，它有一个 param 字段会被@pytest.fixture(params&#x3D;[1, 2, 3, 4])的 params 列表中的一个元素填充</li>
<li>装饰器@pytest.fixture(params&#x3D;[1, 2, 3, 4]，会分别传入数据 1，2，3 到用例中，这里传入的是个列表，传入的数据需要使用一个固定的参数名<font style="background-color:#F9EFCD;">request.param</font>来接收，对于 params 里面的每个值，fixture 都会调用执行一次。</li>
</ol>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#def id_fuc():</span></span><br><span class="line"><span class="comment">#    ...</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@pytest.fixture(<span class="params">autouse=<span class="literal">True</span>, params=[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], name=<span class="string">&#x27;eee&#x27;</span></span>)</span></span><br><span class="line"><span class="comment">#@pytest.fixture(autouse=True, params=[1, 2, 3, 4], name=&#x27;eee&#x27;, ids=id_func)  #ids参数也可以被指定为一个函数，供pytest生成标识</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">data_eee</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> request.param</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_use_fixtures</span>():</span><br><span class="line">    <span class="keyword">assert</span> eee <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    pytest.main()</span><br></pre></td></tr></table></figure>

<p><img src="/images/python710.png"></p>
<h3 id="fixture-的-ids"><a href="#fixture-的-ids" class="headerlink" title="fixture 的 ids"></a>fixture 的 ids</h3><p>指定每个字符串 id，当有多个 param 时，针对每个 param，可以指定 id，这个 id 将成为测试用例名字的一部分，如果没有提供 id，则自动生成一个 id.</p>
<h3 id="fixture-隐式调用-autouse"><a href="#fixture-隐式调用-autouse" class="headerlink" title="fixture 隐式调用 autouse"></a>fixture 隐式调用 autouse</h3><p>如果每条用例都需要前置执行 fixture 功能，则需要在每一个用例方法参数里面传入这个 fixture 的名字，这里在装饰器里面添加一个 autouse&#x3D;”true”参数，会自动应用到所有的测试方法中</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"></span><br><span class="line"><span class="meta">@pytest.fixture(<span class="params">autouse=<span class="string">&quot;true&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">some_data</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;yield前面的代码执行111111&quot;</span>)</span><br><span class="line">    <span class="keyword">yield</span>  <span class="number">42</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;yield前面的代码执行222222&quot;</span>)</span><br><span class="line">    <span class="comment"># return 42</span></span><br></pre></td></tr></table></figure>

<h3 id="fixture-重命名-name"><a href="#fixture-重命名-name" class="headerlink" title="fixture 重命名 name"></a>fixture 重命名 name</h3><p><font style="color:#bbb529;">@pytest.fixture</font>(<font style="color:#aa4926;">name</font>&#x3D;<font style="color:#6a8759;">“eee”</font>)，使用 fixture 的 name 参数对此 fixture 重命名</p>
<p>pytest –fixtures XXX.py 如果想找出 eee 是哪里定义的，可以指定–fixtures 命令选项，并提供所在测试文件名，pytest 将列举所有可供测试使用的 fixture 包括重命名的。</p>
<h3 id="将-fixture-作为函数参数使用（基本用法-pytest-fixture-）"><a href="#将-fixture-作为函数参数使用（基本用法-pytest-fixture-）" class="headerlink" title="将 fixture 作为函数参数使用（基本用法@pytest.fixture()）"></a>将 fixture 作为函数参数使用（基本用法<font style="color:#bbb529;">@pytest.fixture</font>()）</h3><p><font style="color:#bbb529;">@pytest.fixture</font>()装饰器用于声明函数是一个 fixture，如果测试函数的参数列表中包含 fixture 名，pytest 会以该名称搜索 fixture（先搜索该测试所在的模块，然后搜索 conftest.py），并在测试函数执行之前执行该 fixture。</p>
<p>fixture 可以完成任务，也可以返回数据给测试函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"></span><br><span class="line"><span class="meta">@pytest.fixture()</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">some_data</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;yield前面的代码执行111111&quot;</span>)</span><br><span class="line">    <span class="keyword">yield</span>  <span class="number">42</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;yield前面的代码执行222222&quot;</span>)</span><br><span class="line">    <span class="comment"># return 42</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_some_data</span>(<span class="params">some_data</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;执行测试函数3333&quot;</span>,some_data)</span><br><span class="line">    <span class="keyword">assert</span> some_data == <span class="number">42</span></span><br></pre></td></tr></table></figure>

<h3 id="测试用例如何调用-fixture，如果要调用多个-fixture，应该怎么做？（多样用法）"><a href="#测试用例如何调用-fixture，如果要调用多个-fixture，应该怎么做？（多样用法）" class="headerlink" title="测试用例如何调用 fixture，如果要调用多个 fixture，应该怎么做？（多样用法）"></a>测试用例如何调用 fixture，如果要调用多个 fixture，应该怎么做？（多样用法）</h3><blockquote>
<p>一个测试用例调用了多个 fixture，调用顺序是范围越广的先调用，比如 session 级别的先调用，然后再到 function 级别</p>
</blockquote>
<ol>
<li>调用多个 fixture，就要把 fixture 作为参数传入测试用例函数中:def test_some_data(some_data,some_data1): …</li>
</ol>
<p><img src="/images/python711.png"></p>
<ol start="2">
<li>也可使用装饰器@pytest.mark.usefixtures(‘some_data’,‘some_data1’)指定多个 fixture，非常适合用在测试类上，与作为参数传入用例函数中区别在于作为参数传入能够使用 fixture 的返回值，usefixtures 形式不能拿到 fixture 的返回值</li>
</ol>
<p><img src="/images/python712.png"></p>
<pre><code>tips: 如果叠加使用多个 fixture，多 fixture 笛卡尔积调用就是把 fixture 各组参数以笛卡尔积的形式进行组合。
</code></pre>
<ol start="3">
<li>常用 fixture 添加 autouse 选项，这里代表每个测试函数会默认去执行此 fixture，并且我们测试函数不需要传入 some_data3 参数也可以执行这个 fixture。如果跟上 scope 作用域，则代表作用域内的测试函数都执行该 fixture</li>
</ol>
<p><img src="/images/python713.png"></p>
<h3 id="使用-fixture-执行配置及销毁逻辑"><a href="#使用-fixture-执行配置及销毁逻辑" class="headerlink" title="使用 fixture 执行配置及销毁逻辑"></a>使用 fixture 执行配置及销毁逻辑</h3><p>fixture 函数会在测试函数之前执行，但如果 fixture 函数包含 yield，那么系统会在 yield 处停止，转而运行测试函数，等测试函数执行完再回到 fixture，继续执行 yield 后面的代码</p>
<p>因此将 yield 之前的代码视为 setup 过程，yield 之后的代码视为 teardown 过程。无论测试函数执行过程中发生什么，yield 之后的代码都会被执行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"></span><br><span class="line"><span class="comment">#scope=&quot;module&quot;当前.py文件里面所有用例开始前只执行一次</span></span><br><span class="line"><span class="comment"># scope=&quot;module&quot;+yield结合，相当于setup_module和teardown_module方法</span></span><br><span class="line"><span class="comment"># 整个模块运行之前调用yield之前打印，整个运行之后调用yield之后打印他。如果用例出现异常，不影响yiled后面teardown执行</span></span><br><span class="line"><span class="meta">@pytest.fixture(<span class="params">scope=<span class="string">&quot;module&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">open</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;打开浏览器&quot;</span>)</span><br><span class="line">    <span class="keyword">yield</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;执行teardown&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;关闭浏览器&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@pytest.mark.usefixtures(<span class="params"><span class="string">&quot;open&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_search1</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;test_search1&quot;</span>)</span><br><span class="line">    <span class="keyword">raise</span> NameError</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_search2</span>(<span class="params"><span class="built_in">open</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;test_search2&quot;</span>)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    pytest.main([<span class="string">&#x27;utils/my_utils/test_fixture_scope.py&#x27;</span>, <span class="string">&#x27;-vs&#x27;</span>])</span><br></pre></td></tr></table></figure>

<h3 id="通过-conftest-py-共享-fixture"><a href="#通过-conftest-py-共享-fixture" class="headerlink" title="通过 conftest.py 共享 fixture"></a>通过 conftest.py 共享 fixture</h3><ol>
<li><p>如果希望多个测试文件共享 fixture，可以在某个公共目录下新建一个 conftest.py 文件，将 fixture 放在其中。低一级的 conftest.py 中的 fixture 可以供所在目录及其子目录下的测试使用。</p>
</li>
<li><p>fixture scope 为 session 级别是可以跨.py 模块调用的，也就是我们有多个.py 文件的用例时，如果多个用例只需调用一次 fixture，可以将 scope&#x3D;’session’写到 conftest.py 文件。写到 conftest.py 文件可以全局调用这里面的方法。使用 conftest.py 规则是:</p>
<ol>
<li><p>conftest.py 文件名是固定的，不可更改</p>
</li>
<li><p>conftest.py 与运行的用例要在同一个 package 下，且这个包有<strong>init</strong>.py 文件</p>
</li>
<li><p>执行过程中 pytest 会自动识别当前目录的 conftest.py，不需要导入<br>（尽管 conftest.py 是 py 模块，但它不能被测试文件导入，import conftest 用法是不被允许的，它被 pytest 视作一个本地插件库，可以把 tests&#x2F;conftest.py 看成是供 tests 目录下所有测试文件使用的 fixture 仓库）</p>
</li>
<li><p>放在项目根目录下可以全局调用，放在某个 packeg 下，就在该 packeg 内生效（其作用域是当前目录以及子目录），如果希望 fixture 的作用域仅限于某个测试文件，就将它写在该测试文件中。</p>
</li>
</ol>
</li>
</ol>
<h3 id="使用-fixture-传递测试数据，直接-return-数据"><a href="#使用-fixture-传递测试数据，直接-return-数据" class="headerlink" title="使用 fixture 传递测试数据，直接 return 数据"></a>使用 fixture 传递测试数据，直接 return 数据</h3><p>（数据可以用于测试中，也可以被其他 fixture 使用）</p>
<blockquote>
<p>如果是测试函数执行 assert 出错，测试结果为 Fail，用户就知道失败是发生在核心测试函数内部</p>
<p>如果是 fixture 函数发生 assert 异常，那么测试函数会报告成 ERROR，用户就知道失败是发生在测试依赖的 fixture</p>
</blockquote>
<h2 id="pytest-内置-Fixture"><a href="#pytest-内置-Fixture" class="headerlink" title="pytest 内置 Fixture"></a>pytest 内置 Fixture</h2><blockquote>
<p>内置的 fixture 可以大幅简化测试工作，例如在处理临时文件时，内置 fixture 可以识别命令行参数，在多个测试会话间通信，校验输出流，更改环境变量，审查错误报警</p>
</blockquote>
<h3 id="1-tmpdir，tmpdir-factory"><a href="#1-tmpdir，tmpdir-factory" class="headerlink" title="1. tmpdir，tmpdir_factory"></a>1. tmpdir，tmpdir_factory</h3><blockquote>
<p>负责在测试开始运行前创建临时文件目录，并在结束测试后删除<br>tmpdir 作用范围是函数 function 级别，单个测试或者每个测试函数需要创建临时目录或文件应该使用 tmpdir<br>tmpdir_factory 作用范围是会话 session 级别</p>
</blockquote>
<p>如果需要模块或者类级别作用范围的临时目录，该怎么办？可以利用 tmpdir_factory 再创建一个 fixture</p>
<p>假设有一个测试模块，其中有很多测试用例要读取一个 JSON 文件，我们可以在模块本身或 conftest.py 中创建一个作用范围是模块级别的 fixture，用于配置该文件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"><span class="string">&quot;&quot;&quot;author_file_json 这个新fixture创建了一个临时目录data，并在目录下创建了一个文件author_file.json，</span></span><br><span class="line"><span class="string">然后将python_author_data字典写入json文件中，因为这个fixture是module级别的，所以该json文件只需要被每个模块创建一次</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">@pytest.fixture(<span class="params">scope=<span class="string">&#x27;module&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">author_file_json</span>(<span class="params">tmpdir_factory</span>):</span><br><span class="line">    python_author_data = &#123;</span><br><span class="line">        <span class="string">&#x27;Ned&#x27;</span>: &#123;<span class="string">&#x27;City&#x27;</span>: <span class="string">&#x27;Boston&#x27;</span>&#125;,</span><br><span class="line">        <span class="string">&#x27;Brian&#x27;</span>: &#123;<span class="string">&#x27;City&#x27;</span>: <span class="string">&#x27;Portland&#x27;</span>&#125;,</span><br><span class="line">        <span class="string">&#x27;Luciano&#x27;</span>: &#123;<span class="string">&#x27;City&#x27;</span>: <span class="string">&#x27;Sau Paulo&#x27;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    file= tmpdir_factory.mktemp(<span class="string">&#x27;data&#x27;</span>).join(<span class="string">&#x27;author_file.json&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;file:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(file)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> file.<span class="built_in">open</span>(<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        json.dump(python_author_data, f)</span><br><span class="line">    <span class="keyword">return</span> file</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="string">&quot;&quot;&quot;这里两个测试用例将使用同一个json文件，如果一个测试数据文件能服务于多个用例，那么就没必要为每个测试用例创建一个数据文件，直接定义为模块级别的fixture&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_brian_in_portland</span>(<span class="params">author_file_json</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;A test that uses a data file.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> author_file_json.<span class="built_in">open</span>() <span class="keyword">as</span> f:</span><br><span class="line">        authors = json.load(f)</span><br><span class="line">    <span class="keyword">assert</span> authors[<span class="string">&#x27;Brian&#x27;</span>][<span class="string">&#x27;City&#x27;</span>] == <span class="string">&#x27;Portland&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_all_have_cities</span>(<span class="params">author_file_json</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Same file is used for both tests.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> author_file_json.<span class="built_in">open</span>() <span class="keyword">as</span> f:</span><br><span class="line">        authors = json.load(f)</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> authors:</span><br><span class="line">        <span class="keyword">assert</span> <span class="built_in">len</span>(authors[a][<span class="string">&#x27;City&#x27;</span>]) &gt; <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-pytestconfig"><a href="#2-pytestconfig" class="headerlink" title="2. pytestconfig"></a>2. pytestconfig</h3><blockquote>
<p><font style="color:rgb(77, 77, 77);">pytestconfig 可以通过</font><a href="https://so.csdn.net/so/search?q=%E5%91%BD%E4%BB%A4%E8%A1%8C&spm=1001.2101.3001.7020"><font style="color:rgb(77, 77, 77);">命令行</font></a><font style="color:rgb(77, 77, 77);">参数、选项、配置文件、插件、运行目录等方式来控制 pytest；</font></p>
<p><font style="color:rgb(77, 77, 77);">pytestconfig 实际上就是 request.config 的快捷方式，被称为“pytest 配置对象”；</font></p>
</blockquote>
<h4 id="获取命令行参数的值"><a href="#获取命令行参数的值" class="headerlink" title="获取命令行参数的值"></a><font style="color:rgb(79, 79, 79);">获取命令行参数的值</font></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注册自定义参数 cmdopt 到配置对象</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pytest_addoption</span>(<span class="params">parser</span>):</span><br><span class="line">    parser.addoption(<span class="string">&quot;--cmdopt&quot;</span>, action=<span class="string">&quot;store&quot;</span>, default=<span class="string">&quot;None&quot;</span>, <span class="built_in">help</span>=<span class="string">&quot;将自定义命令行参数 &#x27;--cmdopt&#x27; 添加到 pytest 配置中&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从配置对象获取 cmdopt 的值</span></span><br><span class="line"><span class="meta">@pytest.fixture(<span class="params">scope=<span class="string">&#x27;session&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmdopt</span>(<span class="params">pytestconfig</span>):</span><br><span class="line">    <span class="keyword">return</span> pytestconfig.getoption(<span class="string">&#x27;--cmdopt&#x27;</span>)    <span class="comment">#getoption() 可以获取命令行的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后任何 fixture 或测试用例都可以调用 cmdopt 来获得设备信息</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">device_info = &#123;<span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;xxx&#x27;</span>, <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;华为&#x27;</span>, <span class="string">&#x27;version&#x27;</span>: <span class="string">&#x27;10&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">pytest.main([<span class="string">&#x27;-m all&#x27;</span>, <span class="string">f&#x27;--cmdopt=<span class="subst">&#123;device_info&#125;</span>&#x27;</span>])  <span class="comment"># 使用自定义参数传参</span></span><br></pre></td></tr></table></figure>

<h4 id="获取-pytest-ini-配置文件参数的值"><a href="#获取-pytest-ini-配置文件参数的值" class="headerlink" title="获取 pytest.ini 配置文件参数的值"></a><font style="color:rgb(79, 79, 79);">获取 pytest.ini 配置文件参数的值</font></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[pytest]</span><br><span class="line">markers =</span><br><span class="line">    demo : marks tests <span class="keyword">as</span> demo</span><br><span class="line">    smoke: marks tests <span class="keyword">as</span> smoke</span><br><span class="line">    test : marks tests <span class="keyword">as</span> test</span><br><span class="line"></span><br><span class="line">log_cli = <span class="number">1</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@pytest.fixture(<span class="params">autouse=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fuc_fix</span>(<span class="params">pytestconfig</span>):</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(pytestconfig.getini(<span class="string">&#x27;markers&#x27;</span>))  <span class="comment">#[&#x27;demo : marks tests as demo&#x27;, &#x27;smoke: marks tests as smoke&#x27;, &#x27;test : marks tests as test&#x27;]</span></span><br><span class="line">    <span class="built_in">print</span>(pytestconfig.getini(<span class="string">&#x27;log_cli&#x27;</span>))  <span class="comment">#True    部分参数中的值会被转换为布尔值！</span></span><br></pre></td></tr></table></figure>

<h3 id="3-pytest-cache-文件夹"><a href="#3-pytest-cache-文件夹" class="headerlink" title="3. .pytest_cache 文件夹"></a>3. .pytest_cache 文件夹</h3><blockquote>
<p><font style="color:rgb(18, 18, 18);">pytest 运行完用例之后会生成一个 </font><font style="color:rgb(18, 18, 18);background-color:rgb(246, 246, 246);">.pytest_cache</font><font style="color:rgb(18, 18, 18);">的缓存文件夹，用于记录用例的 ids 和上一次失败的用例。</font><br><font style="color:rgb(18, 18, 18);">1、跑自动化时经常会出现这样一个情况，一轮自动化跑完后零星出现了几个失败测试用例，无法断定失败的原因，所以可能需要重新跑一下失败的测试用例去调试，那我们要做的是就去修改脚本把那几个失败的测试用例筛选出来然后重新跑一遍；</font><br><font style="color:rgb(18, 18, 18);">2、但是在 pytest 测试框架因为有缓存功能，就不需要手动去查找上次失败的测试用例并筛选执行;</font><br><font style="color:rgb(18, 18, 18);">3.、pytest 测试框架中执行完所有的测试用例后会在当前目录下生成 </font><font style="color:rgb(18, 18, 18);background-color:rgb(246, 246, 246);">.pytest_cache</font><font style="color:rgb(18, 18, 18);"> ，里面就保存了上一次用例执行的信息;</font></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">--last-failed： 如重新运行上次运行结果为失败的测试用例， 如果没有执行失败的用例则执行所有的测试用例。【 --lf 】</span><br><span class="line">--failed-first：运行所有测试，但首先运行上次运行失败的测试（这可能会重新测试，从而导致重复的 fixture setup/teardown ）【 --ff 】</span><br><span class="line">--new-first：根据文件插件的时间，新的测试用例会先运行。【 --nf 】</span><br><span class="line">--cache-show：显示 .pytest_cache 文件内容，不会收集测试用例也不会执行测试用例</span><br><span class="line">--cache-clear：开始执行测试之前先清空 .pytest_cache 文件</span><br></pre></td></tr></table></figure>

<p>cache 还可以用于记录测试的耗时，存储到 Cache，如果接下来的测试耗时大于之前的两倍，就抛出异常?????</p>
<p>cache 的接口比较简单 cache.get(key, default),cache.set(key,value)</p>
<h3 id="4-capsys"><a href="#4-capsys" class="headerlink" title="4. capsys"></a>4. capsys</h3><ol>
<li>允许代码读取 stdout 和 stderr</li>
<li>可以临时禁止抓取日志输出</li>
</ol>
<h3 id="5-monkypatch"><a href="#5-monkypatch" class="headerlink" title="5. monkypatch"></a>5. monkypatch</h3><ol>
<li>在运行期间对类或者模块进行动态修改</li>
</ol>
<h3 id="5-doctest-namespace"><a href="#5-doctest-namespace" class="headerlink" title="5. doctest_namespace"></a>5. doctest_namespace</h3><h3 id="6-recwarn"><a href="#6-recwarn" class="headerlink" title="6. recwarn"></a>6. recwarn</h3><ol>
<li>用来检查待测代码产生的警告信息</li>
</ol>
<h2 id="pytest-ini-配置文件"><a href="#pytest-ini-配置文件" class="headerlink" title="pytest.ini 配置文件"></a>pytest.ini 配置文件</h2><p>首先了解 pytest 中有哪些非测试文件？</p>
<ol>
<li>pytest.ini 主配置文件，可以改变 pytest 的默认行为</li>
<li>conftest.py 本地插件库，其中的 hook 和 fixture 作用于该文件所在的目录以及所有子目录</li>
<li><strong>init</strong>.py 每个测试子目录都包含</li>
<li>tox.ini 使用 tox 工具时的配置文件，与 pytest.ini 一样的功能，但是这两个不能同时使用？？？</li>
<li>setup.cfg 也采用 ini 的格式，可以影响 setup.py 的行为，用于发布一个 python 包的配置文件</li>
</ol>
<h3 id="1-修改默认命令行选项"><a href="#1-修改默认命令行选项" class="headerlink" title="1. 修改默认命令行选项"></a>1. 修改默认命令行选项</h3><p>使用 pytest.ini 文件中的 addopts 设置<br>-rsxX 表示 pytest 报告所有测试用例被跳过，预计失败但实际通过的原因<br>-l 表示报告所有失败测试的堆栈中的局部变量<br>–tb&#x3D;short 简化堆栈回溯信息，只保留文件和行数<br>–strict 禁止使用未在配置文件中注册的标记</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[pytest]</span></span><br><span class="line"><span class="attr">addopts</span> = -rsxX -l --tb=short --strict</span><br><span class="line"><span class="attr">xfail_strict</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">markers</span> =</span><br><span class="line">    smoke: run the smoke test functions</span><br><span class="line">    get: run the get test functions</span><br></pre></td></tr></table></figure>

<h3 id="2-注册标记来防范拼写错误"><a href="#2-注册标记来防范拼写错误" class="headerlink" title="2. 注册标记来防范拼写错误"></a>2. 注册标记来防范拼写错误</h3><p>使用 pytest.ini 文件中的 markers 设置<br>使用 pytest –markers 查看注册了哪些标记</p>
<h3 id="3-指定-pytest-的最低版本号"><a href="#3-指定-pytest-的最低版本号" class="headerlink" title="3. 指定 pytest 的最低版本号"></a>3. 指定 pytest 的最低版本号</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">minversion</span> = <span class="number">3.0</span></span><br></pre></td></tr></table></figure>

<h3 id="4-指定-pytest-忽略哪些搜索目录"><a href="#4-指定-pytest-忽略哪些搜索目录" class="headerlink" title="4. 指定 pytest 忽略哪些搜索目录"></a>4. 指定 pytest 忽略哪些搜索目录</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">norecursedirs</span> = ._ venv src _.egg dist build</span><br></pre></td></tr></table></figure>

<h3 id="5-添加测试用例路径"><a href="#5-添加测试用例路径" class="headerlink" title="5. 添加测试用例路径"></a>5. 添加测试用例路径</h3><p>testpaths 限定测试用例的搜索范围，只有在 pytest 未指定文件目录或测试用例标识符时，该选项才会被启用</p>
<h3 id="6-修改测试用例搜索匹配规则"><a href="#6-修改测试用例搜索匹配规则" class="headerlink" title="6. 修改测试用例搜索匹配规则"></a>6. 修改测试用例搜索匹配规则</h3><p>pytest 寻找以 Test<em>开头的测试类，而且这个类不能有<strong>init</strong>函数，如果把测试类命名为</em>Test 或者*Suite 呢???</p>
<figure class="highlight ini"><figcaption><span>pytest.ini</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="section">[pytest]</span></span><br><span class="line">python*<span class="attr">classes</span> = \*\_Test Test*\* Suite</span><br><span class="line">python*<span class="attr">files</span> = test*\* _*test check*_</span><br><span class="line">python*<span class="attr">functions</span> = test*\_ check\_\_</span><br></pre></td></tr></table></figure>

<h3 id="7-指定-usefixtures-的默认配置"><a href="#7-指定-usefixtures-的默认配置" class="headerlink" title="7. 指定 usefixtures 的默认配置"></a>7. 指定 usefixtures 的默认配置</h3><figure class="highlight ini"><figcaption><span>pytest.ini</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="section">[pytest]</span></span><br><span class="line"><span class="attr">usefixtures</span>=</span><br><span class="line">drivers</span><br><span class="line">login</span><br></pre></td></tr></table></figure>

<p>如果 usefixtures 后面没有跟具体的 fixture,则读取配置文件中默认的 fixture,这个默认值必须存在,否则报错</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@pytest.mark usefixtures</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>()...</span><br></pre></td></tr></table></figure>

<h3 id="8-禁用-XPASS"><a href="#8-禁用-XPASS" class="headerlink" title="8. 禁用 XPASS"></a>8. 禁用 XPASS</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">xfail_strict</span> = <span class="literal">true</span> <span class="comment">#会使那些被标记为@pytest.mark.xfail 但实际通过的测试用例也被报告为失败 Failed</span></span><br></pre></td></tr></table></figure>

<h3 id="9-避免文件名冲突"><a href="#9-避免文件名冲突" class="headerlink" title="9. 避免文件名冲突"></a>9. 避免文件名冲突</h3><p>只需要在两个子目录里各添加一个空的<strong>init</strong>.py 文件即可</p>
<h3 id="10-ids-解决中文显示乱码的问题"><a href="#10-ids-解决中文显示乱码的问题" class="headerlink" title="10. ids 解决中文显示乱码的问题"></a>10. ids 解决中文显示乱码的问题</h3><p>第一种解决办法设置 ini 文件中的</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">disable_test_id_escaping_and_forfeit_all_rights_to_community_support</span> = <span class="literal">True</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><figcaption><span>第二种解决办法:在conftest.py中利用pytest提供的hook函数pytest_collection_modifyitems</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">pytest_collection_modifyitems</span>(<span class="params">items</span>):</span><br><span class="line"><span class="comment">#测试用例收集完成时，将收集到的item的name和nodeid的中文显示在控制台上</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">    item.name = item.name.encode(<span class="string">&quot;utf-8&quot;</span>).decode(<span class="string">&quot;unicode_escape&quot;</span>)</span><br><span class="line">    item._nodeid = item.nodeid.encode(<span class="string">&quot;utf-8&quot;</span>).decode(<span class="string">&quot;unicode_escape&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="11-console-output-style-输出样式配置"><a href="#11-console-output-style-输出样式配置" class="headerlink" title="11. console_output_style 输出样式配置"></a>11. console_output_style 输出样式配置</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">console_output_style</span>=</span><br><span class="line">classic (经典 pytest 输出,没有显示进度百分比)/</span><br><span class="line">progress(带进度指示器) /</span><br><span class="line">count (进度显示为已完成的测试数而不是百分比)</span><br></pre></td></tr></table></figure>

<h3 id="12-filterwarnings-警告过滤"><a href="#12-filterwarnings-警告过滤" class="headerlink" title="12. filterwarnings 警告过滤"></a>12. filterwarnings 警告过滤</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">filterwarnings</span> = error</span><br><span class="line">ignore:: DeprecationWarning</span><br></pre></td></tr></table></figure>

<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h2 id="pytest-插件-plugins"><a href="#pytest-插件-plugins" class="headerlink" title="pytest 插件 plugins"></a>pytest 插件 plugins</h2><h3 id="改变测试流程的插件"><a href="#改变测试流程的插件" class="headerlink" title="改变测试流程的插件"></a>改变测试流程的插件</h3><h4 id="pytest-ordering-自定义用例执行顺序"><a href="#pytest-ordering-自定义用例执行顺序" class="headerlink" title="pytest-ordering 自定义用例执行顺序"></a>pytest-ordering 自定义用例执行顺序</h4><p>用例方法上添加装饰器@pytest.mark.run(order&#x3D;2),用例执行顺序会以 order 值大小升序去调用执行。</p>
<h4 id="pytest–random-order-随机化测试顺序"><a href="#pytest–random-order-随机化测试顺序" class="headerlink" title="pytest–random-order 随机化测试顺序"></a>pytest–random-order 随机化测试顺序</h4><h4 id="pytest-assume-断言报错后依然执行"><a href="#pytest-assume-断言报错后依然执行" class="headerlink" title="pytest-assume 断言报错后依然执行"></a>pytest-assume 断言报错后依然执行</h4><p>pytest.assume(x&gt;1)</p>
<h4 id="pytest-repeat-重复运行测试"><a href="#pytest-repeat-重复运行测试" class="headerlink" title="pytest-repeat 重复运行测试"></a>pytest-repeat 重复运行测试</h4><p>pytest test.py –count&#x3D;2 -v -k test-list 使用–count 来指定每个测试用例运行两次</p>
<h4 id="pytest-timeout"><a href="#pytest-timeout" class="headerlink" title="pytest-timeout"></a>pytest-timeout</h4><p>允许在命令行指定超时时间或者直接在测试代码中标注超时时间</p>
<h4 id="pytest-rerunfailures-失败测试用例自动重试"><a href="#pytest-rerunfailures-失败测试用例自动重试" class="headerlink" title="pytest-rerunfailures 失败测试用例自动重试"></a>pytest-rerunfailures 失败测试用例自动重试</h4><p>pytest test_demo.py –reruns 2 定义失败后重试 2 次</p>
<h4 id="pytest-freezegun-冰冻时间"><a href="#pytest-freezegun-冰冻时间" class="headerlink" title="pytest-freezegun 冰冻时间"></a>pytest-freezegun 冰冻时间</h4><p>这个插件可以随时改变当前系统时间,freezer 可以冰冻时间, freezer.move_to 可以改变时间,解决验证某一时间点的代码触发,或未来时间的代码变化问题</p>
<p>pytest.assume(x&gt;1)</p>
<h4 id="pytest-xdist-并发运行测试用例"><a href="#pytest-xdist-并发运行测试用例" class="headerlink" title="pytest-xdist 并发运行测试用例"></a>pytest-xdist 并发运行测试用例</h4><p>原理: 将测试分发到 CPU 和远程主机,以盒装模式运行,该模式可以保留分段错误,以 looponfail 模式运行,并根据文件更改自动重新运行失败的测试</p>
<blockquote>
<p>假如测试用例 1000 条，一条测试用例执行需要 1 分钟，一个测试人员需要 1000 分钟才能完成一条回归测试，如果是 10 个人一起执行就需要 100 分钟，这就是一种并行测试，分布式的场景。</p>
</blockquote>
<p>通常测试都是依次执行的，因为有些资源一次只能被一个测试用例访问，如果你的测试不需要访问共享资源，就可以通过并行运行来提速，pytest-xdist 可以指定处理器数目来同时运行多个测试，甚至可以把测试放在多台机器上运行。pytest-xdist 是 pytest 分布式执行插件，特性在于：</p>
<ol>
<li>可以多个 CPU 或主机执行，允许用户将测试并发执行（进程级并发）</li>
<li>插件动态决定用例执行顺序，为了保证每条用例在各个独立线程里正确的执行，应该保证测试用例的独立性（这也符合测试用例设计的最佳实践）</li>
<li>多个 CPU 并发执行，需要加上参数<ol>
<li>pytest -n auto，auto 表示自动检测 CPU 数目</li>
<li>pytest -n 4，4 表示执行运行测试用例的处理器进程数</li>
</ol>
</li>
</ol>
<p>缺点：非线程安全&#x2F;多线程运行时性能不佳&#x2F;需要做状态隔离</p>
<h4 id="pytest-parallel-并发运行测试用例"><a href="#pytest-parallel-并发运行测试用例" class="headerlink" title="pytest-parallel 并发运行测试用例"></a>pytest-parallel 并发运行测试用例</h4><p>pytest-parallel 仅仅支持 python3.6 以上，unix&#x2F;mac 上支持多线程运行和多进程运行两种，windows 上仅支持多线程运行方式</p>
<ol>
<li>指定 2 个进程并发: <code>pytest --workers 2</code></li>
<li>指定 2 个进程并发,每个进程最多运行 3 个线程: <code>pytest --workers 2 --test-per-worker 3</code><br>有时会出现【管道已结束 109】错误，官方暂时未修复</li>
</ol>
<h3 id="改善输出效果的插件"><a href="#改善输出效果的插件" class="headerlink" title="改善输出效果的插件"></a>改善输出效果的插件</h3><h4 id="pytest-instafail-用例失败时立即显示错误堆栈回溯信息"><a href="#pytest-instafail-用例失败时立即显示错误堆栈回溯信息" class="headerlink" title="pytest-instafail 用例失败时立即显示错误堆栈回溯信息"></a>pytest-instafail 用例失败时立即显示错误堆栈回溯信息</h4><h4 id="pytest-sugar-显示色彩和进度"><a href="#pytest-sugar-显示色彩和进度" class="headerlink" title="pytest-sugar 显示色彩和进度"></a>pytest-sugar 显示色彩和进度</h4><h4 id="pytest-emoji-为测试添加一些乐趣，把测试状态字符替换成表情符号"><a href="#pytest-emoji-为测试添加一些乐趣，把测试状态字符替换成表情符号" class="headerlink" title="pytest-emoji 为测试添加一些乐趣，把测试状态字符替换成表情符号"></a>pytest-emoji 为测试添加一些乐趣，把测试状态字符替换成表情符号</h4><h4 id="pytest-html-为测试生成-html-报告"><a href="#pytest-html-为测试生成-html-报告" class="headerlink" title="pytest-html 为测试生成 html 报告"></a>pytest-html 为测试生成 html 报告</h4><h3 id="静态分析用的插件"><a href="#静态分析用的插件" class="headerlink" title="静态分析用的插件"></a>静态分析用的插件</h3><h4 id="pytest-pep8"><a href="#pytest-pep8" class="headerlink" title="pytest-pep8"></a>pytest-pep8</h4><h4 id="pytest-flakes"><a href="#pytest-flakes" class="headerlink" title="pytest-flakes"></a>pytest-flakes</h4><h3 id="web-开发用的插件"><a href="#web-开发用的插件" class="headerlink" title="web 开发用的插件"></a>web 开发用的插件</h3><h4 id="4-1-pytest-httpserver-模拟-http-服务"><a href="#4-1-pytest-httpserver-模拟-http-服务" class="headerlink" title="4.1 pytest-httpserver 模拟 http 服务"></a>4.1 pytest-httpserver 模拟 http 服务</h4><h4 id="4-2-pytest-picked-运行未提交-git-的用例"><a href="#4-2-pytest-picked-运行未提交-git-的用例" class="headerlink" title="4.2 pytest-picked 运行未提交 git 的用例"></a>4.2 pytest-picked 运行未提交 git 的用例</h4><pre><code>写完自动化后都会将代码提交到 git 仓库,随州用例的增多,为了保证仓库代码的干净,当有新增用例的时候,希望只运行新增的且尚未提交到 git 仓库的用例
</code></pre>
<h4 id="4-3-pytest-mock-模拟未实现的部分"><a href="#4-3-pytest-mock-模拟未实现的部分" class="headerlink" title="4.3 pytest-mock 模拟未实现的部分"></a>4.3 pytest-mock 模拟未实现的部分</h4><h4 id="4-4-pytest-cov-测试-python-程序覆盖率"><a href="#4-4-pytest-cov-测试-python-程序覆盖率" class="headerlink" title="4.4 pytest-cov 测试 python 程序覆盖率"></a>4.4 pytest-cov 测试 python 程序覆盖率</h4><p>先安装 pytest-cov 插件，coverage.py 时 pytest-cov 的一个依赖包<br>pytest –cov&#x3D;src src 是源码目录<br>pytest –cov&#x3D;src –cov-report&#x3D;html 得到一个 html 报告</p>
<h3 id="插件管理-https-pypi-org-search-q-pytest"><a href="#插件管理-https-pypi-org-search-q-pytest" class="headerlink" title="插件管理 https://pypi.org/search/?q=pytest"></a>插件管理 <a href="https://pypi.org/search/?q=pytest"><u>https://pypi.org/search/?q=pytest</u></a></h3><ol>
<li>在测试模块或者 conftest.py 文件中加载插件: pytest_plugins &#x3D; (“myqpp.testsupport.myplugin”,)</li>
<li>找出那些插件处于活动那个状态: 命令行中输入 pytest –trance –config</li>
<li>通过名称停用&#x2F;注销插件: pytest - p no: NAME</li>
<li>无条件禁用项目插件,则可以将此选项添加到 pytest.ini 文件中: addopts &#x3D; - P no: NAME</li>
<li>仅在某些环境中(例如 CI 服务器中)禁用它,可以将 PYTEST_ADDOPTS 环境变量设置为 - P no: NAME</li>
</ol>
<h2 id="pytest-与其他工具搭配"><a href="#pytest-与其他工具搭配" class="headerlink" title="pytest 与其他工具搭配"></a>pytest 与其他工具搭配</h2><h3 id="pdb"><a href="#pdb" class="headerlink" title="pdb"></a>pdb</h3><p>调试失败的测试用例<br>pytest -v -lf -x –pdb<br>p&#x2F;print expr 输出 expr 的值<br>pp expr 美化输出 expr 的值<br>l&#x2F;list 列出错误并显示错误之前和之后的 5 行代码<br>l&#x2F;list begin,end 列出错误并通过行号指定需要显示的代码区域<br>a&#x2F;args 打印当前函数的参数列表<br>q&#x2F;quit 退出当前调试会话</p>
<h3 id="tox"><a href="#tox" class="headerlink" title="tox"></a>tox</h3><p>测试多种配置<br>tox 不仅能测试不同的 python 版本，还可以用它来测试不同的依赖配置和不同的操作系统配置<br>pip install tox</p>
<h3 id="jenkins-CI"><a href="#jenkins-CI" class="headerlink" title="jenkins CI"></a>jenkins CI</h3><p>让测试自动化<br>pytest 可以生成 junit.xml 格式的文件，用于给 jenkins 和其他 CI 系统显示结果<br>使用 jenkins 运行 pytest 测试组件，有两个 jenkins 插件好用<br>build-name-setter : 这个插件可以设置每次运行的名字，而不是默认的#1,#2,#3<br>Test Result Analyzer plugin ：这个插件以图表的形式显示测试执行的历史信息</p>
<h3 id="unittest"><a href="#unittest" class="headerlink" title="unittest"></a>unittest</h3><p>用 pytest 运行历史遗留测试用例<br>用 unittest 运行是 python -m unittest -v a.py</p>
<h3 id="Allure"><a href="#Allure" class="headerlink" title="Allure"></a>Allure</h3><p>pip install allure-pytest</p>
<ol>
<li>收集结果 pytest –alluredir &#x3D; &#x2F;tmp&#x2F;allure_results</li>
<li>查看报告 allure serve &#x2F;tmp&#x2F;allure_results</li>
</ol>
<!-- # 待看

parametrize [其他参数详细用法见书 P165]
pytest_generate_tests 钩子函数允许定义自定义参数方案或扩展 P174
最后几页 MOCK/钩子函数用法 -->
]]></content>
      <categories>
        <category>测试库</category>
      </categories>
      <tags>
        <tag>pytest</tag>
      </tags>
  </entry>
  <entry>
    <title>shortcut-key</title>
    <url>/post/shortcut-key.html</url>
    <content><![CDATA[<h2 id="🔹-MAC-基本操作"><a href="#🔹-MAC-基本操作" class="headerlink" title="🔹 MAC 基本操作"></a><strong>🔹 MAC 基本操作</strong></h2><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + C</td>
<td>复制</td>
</tr>
<tr>
<td>Cmd + V</td>
<td>粘贴</td>
</tr>
<tr>
<td>Cmd + X</td>
<td>剪切</td>
</tr>
<tr>
<td>Cmd + D</td>
<td>复制+粘贴</td>
</tr>
<tr>
<td>Cmd + Z</td>
<td>撤销</td>
</tr>
<tr>
<td>Cmd + Shift + Z</td>
<td>复原（撤销的撤销）</td>
</tr>
<tr>
<td>Cmd + S</td>
<td>保存</td>
</tr>
<tr>
<td>Cmd + Shift + S</td>
<td>另存为</td>
</tr>
</tbody></table>
<h3 id="窗口-程序管理"><a href="#窗口-程序管理" class="headerlink" title="窗口 &amp; 程序管理"></a><strong>窗口 &amp; 程序管理</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + Tab</td>
<td>切换程序</td>
</tr>
<tr>
<td>Cmd + Shift + Tab</td>
<td>反向切换程序</td>
</tr>
<tr>
<td>Cmd + Q</td>
<td>退出当前程序</td>
</tr>
<tr>
<td>Opt + Cmd + Esc</td>
<td>强制退出程序</td>
</tr>
<tr>
<td>Cmd + W</td>
<td>关闭当前标签页</td>
</tr>
<tr>
<td>Cmd + M</td>
<td>最小化窗口</td>
</tr>
<tr>
<td>Cmd + H</td>
<td>隐藏当前窗口</td>
</tr>
<tr>
<td>Cmd + Opt + H</td>
<td>除当前窗口外，隐藏其他窗口</td>
</tr>
<tr>
<td>Fn + F</td>
<td>全屏窗口</td>
</tr>
<tr>
<td>Cmd + ,</td>
<td>打开程序偏好设置</td>
</tr>
</tbody></table>
<h3 id="访达文件管理"><a href="#访达文件管理" class="headerlink" title="访达文件管理"></a><strong>访达文件管理</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + Shift + N</td>
<td>新建文件夹</td>
</tr>
<tr>
<td>Cmd + Ctrl + N</td>
<td>将所选文件新建文件夹</td>
</tr>
<tr>
<td>Cmd + T</td>
<td>访达中新建标签页</td>
</tr>
<tr>
<td>Cmd + N</td>
<td>访达中新建窗口</td>
</tr>
<tr>
<td>Cmd + ↑</td>
<td>进入上级文件夹</td>
</tr>
<tr>
<td>Cmd + Delete</td>
<td>删除（移入垃圾桶）</td>
</tr>
<tr>
<td>Cmd + Shift + Delete</td>
<td>清空垃圾桶</td>
</tr>
<tr>
<td>Cmd + E</td>
<td>推出磁盘或设备</td>
</tr>
<tr>
<td>Cmd + I</td>
<td>查看文件信息</td>
</tr>
<tr>
<td>Opt + Cmd + I</td>
<td>开启信息检查器</td>
</tr>
<tr>
<td>Cmd + J</td>
<td>设置显示选项</td>
</tr>
<tr>
<td>Cmd + 双击文件夹</td>
<td>在新窗口打开文件夹</td>
</tr>
</tbody></table>
<h3 id="输入法-文本编辑"><a href="#输入法-文本编辑" class="headerlink" title="输入法 &amp; 文本编辑"></a><strong>输入法 &amp; 文本编辑</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + 空格</td>
<td>切换输入法</td>
</tr>
<tr>
<td>Caps Lock（长按）</td>
<td>切换大小写</td>
</tr>
<tr>
<td>Cmd + T</td>
<td>切换字体</td>
</tr>
<tr>
<td>Cmd + B</td>
<td>加粗</td>
</tr>
<tr>
<td>Cmd + I</td>
<td>斜体</td>
</tr>
<tr>
<td>Cmd + U</td>
<td>下划线</td>
</tr>
<tr>
<td>Cmd + Opt + C</td>
<td>复制文本样式</td>
</tr>
<tr>
<td>Cmd + Opt + V</td>
<td>粘贴文本样式</td>
</tr>
<tr>
<td>Cmd + Shift + C</td>
<td>打开颜色面板</td>
</tr>
<tr>
<td>Fn + Delete</td>
<td>向后删除</td>
</tr>
</tbody></table>
<h3 id="浏览器快捷键"><a href="#浏览器快捷键" class="headerlink" title="浏览器快捷键"></a><strong>浏览器快捷键</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + R</td>
<td>刷新网页</td>
</tr>
<tr>
<td>Cmd + Shift + R</td>
<td>强制刷新网页</td>
</tr>
<tr>
<td>Cmd + Shift + H</td>
<td>前往主页</td>
</tr>
<tr>
<td>Cmd + 【</td>
<td>后退</td>
</tr>
<tr>
<td>Cmd + 】</td>
<td>前进</td>
</tr>
<tr>
<td>Shift + Cmd + D</td>
<td>添加到阅读列表</td>
</tr>
<tr>
<td>Ctrl + Cmd + 2</td>
<td>显示阅读列表</td>
</tr>
<tr>
<td>Cmd + D</td>
<td>添加书签</td>
</tr>
<tr>
<td>Ctrl + Cmd + 1</td>
<td>显示书签列表</td>
</tr>
<tr>
<td>Ctrl + Tab</td>
<td>切换标签页</td>
</tr>
<tr>
<td>Ctrl + Shift + Tab</td>
<td>反向切换标签页</td>
</tr>
<tr>
<td>Cmd + 1~9</td>
<td>直接切换到对应编号的标签页</td>
</tr>
<tr>
<td>Cmd + ~</td>
<td>切换窗口</td>
</tr>
<tr>
<td>Cmd + Shift + T</td>
<td>恢复关闭的网页</td>
</tr>
<tr>
<td>Cmd + Option + J&#x2F;I</td>
<td>直接打开控制台</td>
</tr>
<tr>
<td>Cmd + K</td>
<td>清空控制台</td>
</tr>
<tr>
<td>Cmd + R</td>
<td>重新加载页面（不清缓存）</td>
</tr>
<tr>
<td>Cmd + Shift +R</td>
<td>强制刷新（清缓存）</td>
</tr>
<tr>
<td>Tab</td>
<td>选中 Elements 面板中的下一个元素</td>
</tr>
<tr>
<td>Shift + Tab</td>
<td>选中上一个元素</td>
</tr>
<tr>
<td>Cmd + P</td>
<td>快速搜索文件（在 Sources 面板）</td>
</tr>
<tr>
<td>Cmd + Option + F</td>
<td>在 Sources 面板中搜索文本</td>
</tr>
<tr>
<td>Shift + Enter</td>
<td>在控制台执行多行代码</td>
</tr>
</tbody></table>
<h3 id="截图-录屏"><a href="#截图-录屏" class="headerlink" title="截图 &amp; 录屏"></a><strong>截图 &amp; 录屏</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + Shift + 3</td>
<td>全屏截图</td>
</tr>
<tr>
<td>Cmd + Shift + 4</td>
<td>选择区域截图</td>
</tr>
<tr>
<td>Cmd + Shift + 4 + 空格</td>
<td>截取窗口</td>
</tr>
<tr>
<td>Cmd + Shift + 5</td>
<td>录屏（全屏&#x2F;区域）</td>
</tr>
<tr>
<td>Cmd + Shift + 6</td>
<td>截取 Touch Bar</td>
</tr>
<tr>
<td>+ Ctrl（任意截图命令）</td>
<td>直接存入剪贴板</td>
</tr>
</tbody></table>
<h2 id="🔹-代码编辑（VSCode-等）"><a href="#🔹-代码编辑（VSCode-等）" class="headerlink" title="🔹 代码编辑（VSCode 等）"></a><strong>🔹 代码编辑（VSCode 等）</strong></h2><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + D</td>
<td>选中并批量修改相同变量</td>
</tr>
<tr>
<td>Cmd + F</td>
<td>当前文件内搜索（可替换）</td>
</tr>
<tr>
<td>Cmd + Shift + F</td>
<td>全局搜索（跨文件搜索）</td>
</tr>
<tr>
<td>Cmd + B</td>
<td>关闭&#x2F;打开侧边栏</td>
</tr>
<tr>
<td>Cmd + P</td>
<td>搜索并快速打开文件</td>
</tr>
<tr>
<td>Cmd + Shift + P</td>
<td>打开命令面板</td>
</tr>
<tr>
<td>Cmd + Enter</td>
<td>行内换行</td>
</tr>
<tr>
<td>Opt + ↑ &#x2F; ↓</td>
<td>移动当前行代码上下</td>
</tr>
<tr>
<td>Shift + Opt + ↑ &#x2F; ↓</td>
<td>复制当前行代码上下</td>
</tr>
<tr>
<td>Cmd + Shift + K</td>
<td>删除当前行</td>
</tr>
<tr>
<td>Cmd + C（无选中）</td>
<td>复制整行</td>
</tr>
<tr>
<td>Cmd + X（无选中）</td>
<td>剪切整行</td>
</tr>
</tbody></table>
<h3 id="光标-选择"><a href="#光标-选择" class="headerlink" title="光标 &amp; 选择"></a><strong>光标 &amp; 选择</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Opt + ← &#x2F; →</td>
<td>光标按单词跳转</td>
</tr>
<tr>
<td>Cmd + ← &#x2F; →</td>
<td>跳转到行首&#x2F;行尾</td>
</tr>
<tr>
<td>Cmd + ↑ &#x2F; ↓</td>
<td>跳转到文件顶部&#x2F;底部</td>
</tr>
<tr>
<td>Opt + Shift + ← &#x2F; →</td>
<td>按单词选中文本块</td>
</tr>
<tr>
<td>Cmd + Shift + → &#x2F; ←</td>
<td>选中光标前&#x2F;后文本</td>
</tr>
<tr>
<td>Opt + Delete &#x2F; Backspace</td>
<td>按单词删除</td>
</tr>
</tbody></table>
<h3 id="注释-格式化"><a href="#注释-格式化" class="headerlink" title="注释 &amp; 格式化"></a><strong>注释 &amp; 格式化</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + &#x2F;</td>
<td>行注释&#x2F;取消注释</td>
</tr>
<tr>
<td>Cmd + [ &#x2F; Cmd + ]</td>
<td>左&#x2F;右缩进代码</td>
</tr>
<tr>
<td>Shift + Opt + F</td>
<td>格式化代码（Prettier&#x2F;ESLint）</td>
</tr>
<tr>
<td>Shift + F12</td>
<td>跳转调用当前函数的位置</td>
</tr>
</tbody></table>
<h3 id="终端-UI-操作"><a href="#终端-UI-操作" class="headerlink" title="终端 &amp; UI 操作"></a><strong>终端 &amp; UI 操作</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + J</td>
<td>显示&#x2F;隐藏终端</td>
</tr>
<tr>
<td>Cmd + K, Cmd + S</td>
<td>打开快捷键设置</td>
</tr>
<tr>
<td>Cmd + Shift + U</td>
<td>打开输出面板</td>
</tr>
<tr>
<td>Cmd + Shift + X</td>
<td>打开扩展商店</td>
</tr>
<tr>
<td>Cmd + 0</td>
<td>定位文件</td>
</tr>
</tbody></table>
<h2 id="🔹-TablePlus-常用快捷键"><a href="#🔹-TablePlus-常用快捷键" class="headerlink" title="🔹 TablePlus 常用快捷键"></a><strong>🔹 TablePlus 常用快捷键</strong></h2><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + K</td>
<td>切换到新的数据库</td>
</tr>
<tr>
<td>Cmd + Shift + K</td>
<td>切换到新的连接</td>
</tr>
<tr>
<td>Cmd + Enter</td>
<td>运行当前查询</td>
</tr>
<tr>
<td>Cmd + Shift + Enter</td>
<td>运行所有查询</td>
</tr>
<tr>
<td>Cmd + R</td>
<td>重新加载工作区</td>
</tr>
<tr>
<td>Cmd + Option + R</td>
<td>重新加载当前 tab</td>
</tr>
<tr>
<td>Cmd + Shift + R</td>
<td>重新连接</td>
</tr>
<tr>
<td>Cmd + Option + .</td>
<td>取消连接</td>
</tr>
</tbody></table>
<h2 id="🔹-iTerm2-常用快捷键"><a href="#🔹-iTerm2-常用快捷键" class="headerlink" title="🔹 iTerm2 常用快捷键"></a><strong>🔹 iTerm2 常用快捷键</strong></h2><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a><strong>基本操作</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Option + Space</td>
<td>打开 iTerm2</td>
</tr>
<tr>
<td>⌘ + — &#x2F; + &#x2F; 0</td>
<td>调整字体大小</td>
</tr>
<tr>
<td>⌘ + R</td>
<td>清屏</td>
</tr>
<tr>
<td>Ctrl + L</td>
<td>清屏（与 ⌘ + R 类似）</td>
</tr>
<tr>
<td>Ctrl + A</td>
<td>光标移至行首</td>
</tr>
<tr>
<td>Ctrl + E</td>
<td>光标移至行末</td>
</tr>
<tr>
<td>Ctrl + F &#x2F; B</td>
<td>前进&#x2F;后退（相当于方向键）</td>
</tr>
<tr>
<td>Ctrl + P</td>
<td>上一条命令</td>
</tr>
<tr>
<td>Ctrl + R</td>
<td>搜索命令历史</td>
</tr>
<tr>
<td>Ctrl + D</td>
<td>删除当前字符</td>
</tr>
<tr>
<td>Ctrl + H</td>
<td>删除前一个字符</td>
</tr>
<tr>
<td>Ctrl + W</td>
<td>删除光标前的单词</td>
</tr>
<tr>
<td>Ctrl + K</td>
<td>删除到文本末尾</td>
</tr>
<tr>
<td>Ctrl + T</td>
<td>交换光标处文本</td>
</tr>
</tbody></table>
<h3 id="窗口面板管理"><a href="#窗口面板管理" class="headerlink" title="窗口面板管理"></a><strong>窗口面板管理</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + D</td>
<td>垂直分割</td>
</tr>
<tr>
<td>Shift + Cmd + D</td>
<td>水平分割</td>
</tr>
<tr>
<td>Cmd + [ &#x2F; Option + Cmd + ← &#x2F; →</td>
<td>切换到前一个面板</td>
</tr>
<tr>
<td>Cmd + ]</td>
<td>切换到后一个面板</td>
</tr>
<tr>
<td>Option + Cmd + ↑ &#x2F; ↓ &#x2F; ← &#x2F; →</td>
<td>切换到上下左右面板</td>
</tr>
<tr>
<td>⌘ + W</td>
<td>关闭当前面板</td>
</tr>
<tr>
<td>⌘ + Shift + Enter</td>
<td>最大化当前面板</td>
</tr>
<tr>
<td>⌘ + Shift + Enter（再次）</td>
<td>还原面板大小</td>
</tr>
</tbody></table>
<h3 id="标签页操作"><a href="#标签页操作" class="headerlink" title="标签页操作"></a><strong>标签页操作</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + T</td>
<td>新建标签页</td>
</tr>
<tr>
<td>Cmd + W</td>
<td>关闭标签页</td>
</tr>
<tr>
<td>Cmd + ← &#x2F; Shift + Cmd + [</td>
<td>前一个标签页</td>
</tr>
<tr>
<td>Cmd + → &#x2F; Shift + Cmd + ]</td>
<td>后一个标签页</td>
</tr>
<tr>
<td>Cmd + 1~9</td>
<td>进入指定编号的标签页</td>
</tr>
<tr>
<td>Option + Cmd + E</td>
<td>Expose 标签页（全屏显示并支持搜索所有标签页）</td>
</tr>
</tbody></table>
<h3 id="多个窗口操作"><a href="#多个窗口操作" class="headerlink" title="多个窗口操作"></a><strong>多个窗口操作</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + N</td>
<td>新建窗口</td>
</tr>
<tr>
<td>Cmd + W</td>
<td>关闭窗口</td>
</tr>
<tr>
<td>Cmd + &#96;</td>
<td>前一个窗口</td>
</tr>
<tr>
<td>Shift + Cmd + &#96;</td>
<td>后一个窗口</td>
</tr>
<tr>
<td>Option + Cmd + 1~9</td>
<td>进入指定窗口编号</td>
</tr>
</tbody></table>
<h3 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a><strong>其他功能</strong></h3><table>
<thead>
<tr>
<th><strong>快捷键</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Cmd + Enter</td>
<td>进入&#x2F;退出全屏模式</td>
</tr>
<tr>
<td>Cmd + &#x2F;</td>
<td>查看当前光标位置</td>
</tr>
<tr>
<td>Cmd + ;</td>
<td>命令自动补全</td>
</tr>
<tr>
<td>Cmd + U</td>
<td>开启&#x2F;关闭背景半透明</td>
</tr>
<tr>
<td>Cmd + R</td>
<td>清屏（重置当前终端）</td>
</tr>
<tr>
<td>Cmd + Shift + H</td>
<td>呼出粘贴历史</td>
</tr>
<tr>
<td>Cmd + Option + B</td>
<td>打开即时回放</td>
</tr>
<tr>
<td>Esc</td>
<td>退出即时回放</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>快捷键</tag>
      </tags>
  </entry>
</search>
